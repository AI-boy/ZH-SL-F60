

Microchip Technology PIC PRO Macro Assembler V1.30 build 55553 
                                                                                               Wed Nov 07 15:58:32 2018

Microchip Technology Omniscient Code Generator (PRO mode) build 55553
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	idataBANK5,global,class=CODE,delta=2
    10                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	inittext,global,class=CODE,delta=2
    29                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text50,local,class=CODE,merge=1,delta=2
    44                           	psect	pa_nodes,global,class=CODE,delta=2
    45                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    46                           	psect	text10_split_2,local,class=CODE,merge=1,delta=2
    47                           	psect	text10_split_3,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x620,48
    49                           	dabs	1,0x5A0,80
    50                           	dabs	1,0x2370,0,_adc_buffer
    51                           	dabs	1,0x7E,2
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  0110                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011A                     	;# 
   114  011B                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020D                     	;# 
   139  0210                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0294                     	;# 
   153  0295                     	;# 
   154  0295                     	;# 
   155  0296                     	;# 
   156  0298                     	;# 
   157  0298                     	;# 
   158  0299                     	;# 
   159  029A                     	;# 
   160  029B                     	;# 
   161  029C                     	;# 
   162  029C                     	;# 
   163  029D                     	;# 
   164  029E                     	;# 
   165  029F                     	;# 
   166  0311                     	;# 
   167  0311                     	;# 
   168  0312                     	;# 
   169  0313                     	;# 
   170  0314                     	;# 
   171  0315                     	;# 
   172  0315                     	;# 
   173  0316                     	;# 
   174  0318                     	;# 
   175  0318                     	;# 
   176  0319                     	;# 
   177  031A                     	;# 
   178  031C                     	;# 
   179  031C                     	;# 
   180  031D                     	;# 
   181  031E                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  0415                     	;# 
   186  0416                     	;# 
   187  0417                     	;# 
   188  041C                     	;# 
   189  041D                     	;# 
   190  041E                     	;# 
   191  0791                     	;# 
   192  0792                     	;# 
   193  0793                     	;# 
   194  0794                     	;# 
   195  0795                     	;# 
   196  0798                     	;# 
   197  0799                     	;# 
   198  07A0                     	;# 
   199  07A1                     	;# 
   200  07A3                     	;# 
   201  07A4                     	;# 
   202  07A6                     	;# 
   203  07A7                     	;# 
   204  07A9                     	;# 
   205  07AA                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  0110                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0194                     	;# 
   290  0195                     	;# 
   291  0196                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019E                     	;# 
   302  019F                     	;# 
   303  020D                     	;# 
   304  0210                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0294                     	;# 
   318  0295                     	;# 
   319  0295                     	;# 
   320  0296                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  029E                     	;# 
   330  029F                     	;# 
   331  0311                     	;# 
   332  0311                     	;# 
   333  0312                     	;# 
   334  0313                     	;# 
   335  0314                     	;# 
   336  0315                     	;# 
   337  0315                     	;# 
   338  0316                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  031C                     	;# 
   344  031C                     	;# 
   345  031D                     	;# 
   346  031E                     	;# 
   347  0394                     	;# 
   348  0395                     	;# 
   349  0396                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0791                     	;# 
   357  0792                     	;# 
   358  0793                     	;# 
   359  0794                     	;# 
   360  0795                     	;# 
   361  0798                     	;# 
   362  0799                     	;# 
   363  07A0                     	;# 
   364  07A1                     	;# 
   365  07A3                     	;# 
   366  07A4                     	;# 
   367  07A6                     	;# 
   368  07A7                     	;# 
   369  07A9                     	;# 
   370  07AA                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020D                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0294                     	;# 
   483  0295                     	;# 
   484  0295                     	;# 
   485  0296                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  029B                     	;# 
   491  029C                     	;# 
   492  029C                     	;# 
   493  029D                     	;# 
   494  029E                     	;# 
   495  029F                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  0314                     	;# 
   501  0315                     	;# 
   502  0315                     	;# 
   503  0316                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  031C                     	;# 
   509  031C                     	;# 
   510  031D                     	;# 
   511  031E                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  0415                     	;# 
   516  0416                     	;# 
   517  0417                     	;# 
   518  041C                     	;# 
   519  041D                     	;# 
   520  041E                     	;# 
   521  0791                     	;# 
   522  0792                     	;# 
   523  0793                     	;# 
   524  0794                     	;# 
   525  0795                     	;# 
   526  0798                     	;# 
   527  0799                     	;# 
   528  07A0                     	;# 
   529  07A1                     	;# 
   530  07A3                     	;# 
   531  07A4                     	;# 
   532  07A6                     	;# 
   533  07A7                     	;# 
   534  07A9                     	;# 
   535  07AA                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0110                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0113                     	;# 
   602  0114                     	;# 
   603  0115                     	;# 
   604  0116                     	;# 
   605  0117                     	;# 
   606  0118                     	;# 
   607  0119                     	;# 
   608  011A                     	;# 
   609  011B                     	;# 
   610  011D                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020D                     	;# 
   634  0210                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0291                     	;# 
   644  0291                     	;# 
   645  0292                     	;# 
   646  0293                     	;# 
   647  0294                     	;# 
   648  0295                     	;# 
   649  0295                     	;# 
   650  0296                     	;# 
   651  0298                     	;# 
   652  0298                     	;# 
   653  0299                     	;# 
   654  029A                     	;# 
   655  029B                     	;# 
   656  029C                     	;# 
   657  029C                     	;# 
   658  029D                     	;# 
   659  029E                     	;# 
   660  029F                     	;# 
   661  0311                     	;# 
   662  0311                     	;# 
   663  0312                     	;# 
   664  0313                     	;# 
   665  0314                     	;# 
   666  0315                     	;# 
   667  0315                     	;# 
   668  0316                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  031C                     	;# 
   674  031C                     	;# 
   675  031D                     	;# 
   676  031E                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0791                     	;# 
   687  0792                     	;# 
   688  0793                     	;# 
   689  0794                     	;# 
   690  0795                     	;# 
   691  0798                     	;# 
   692  0799                     	;# 
   693  07A0                     	;# 
   694  07A1                     	;# 
   695  07A3                     	;# 
   696  07A4                     	;# 
   697  07A6                     	;# 
   698  07A7                     	;# 
   699  07A9                     	;# 
   700  07AA                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712                           
   713                           	psect	eeprom_data
   714  0000  0002 0058 0000     	db	2,88,0,162,100,100,100,100	;# 
      +       00A2 0064 0064     
      +       0064 0064          
   715  0008  0064 0001 0001     	db	100,1,1,1,5,5,1,1	;# 
      +       0001 0005 0005     
      +       0001 0001          
   716  0010  0001 0000 0000     	db	1,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   717  0018  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   718  0020  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   719  0028  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   720  0030  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   721  0038  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0008                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  0010                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0016                     	;# 
   744  0017                     	;# 
   745  0018                     	;# 
   746  0019                     	;# 
   747  001A                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0092                     	;# 
   758  0093                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  0110                     	;# 
   774  0111                     	;# 
   775  0112                     	;# 
   776  0113                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0117                     	;# 
   781  0118                     	;# 
   782  0119                     	;# 
   783  011A                     	;# 
   784  011B                     	;# 
   785  011D                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020D                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0291                     	;# 
   819  0291                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0294                     	;# 
   823  0295                     	;# 
   824  0295                     	;# 
   825  0296                     	;# 
   826  0298                     	;# 
   827  0298                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029B                     	;# 
   831  029C                     	;# 
   832  029C                     	;# 
   833  029D                     	;# 
   834  029E                     	;# 
   835  029F                     	;# 
   836  0311                     	;# 
   837  0311                     	;# 
   838  0312                     	;# 
   839  0313                     	;# 
   840  0314                     	;# 
   841  0315                     	;# 
   842  0315                     	;# 
   843  0316                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  031C                     	;# 
   849  031C                     	;# 
   850  031D                     	;# 
   851  031E                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0415                     	;# 
   856  0416                     	;# 
   857  0417                     	;# 
   858  041C                     	;# 
   859  041D                     	;# 
   860  041E                     	;# 
   861  0791                     	;# 
   862  0792                     	;# 
   863  0793                     	;# 
   864  0794                     	;# 
   865  0795                     	;# 
   866  0798                     	;# 
   867  0799                     	;# 
   868  07A0                     	;# 
   869  07A1                     	;# 
   870  07A3                     	;# 
   871  07A4                     	;# 
   872  07A6                     	;# 
   873  07A7                     	;# 
   874  07A9                     	;# 
   875  07AA                     	;# 
   876  0FE4                     	;# 
   877  0FE5                     	;# 
   878  0FE6                     	;# 
   879  0FE7                     	;# 
   880  0FE8                     	;# 
   881  0FE9                     	;# 
   882  0FEA                     	;# 
   883  0FEB                     	;# 
   884  0FED                     	;# 
   885  0FEE                     	;# 
   886  0FEF                     	;# 
   887  0000                     	;# 
   888  0001                     	;# 
   889  0002                     	;# 
   890  0003                     	;# 
   891  0004                     	;# 
   892  0005                     	;# 
   893  0006                     	;# 
   894  0007                     	;# 
   895  0008                     	;# 
   896  0009                     	;# 
   897  000A                     	;# 
   898  000B                     	;# 
   899  000C                     	;# 
   900  000D                     	;# 
   901  000E                     	;# 
   902  0010                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0013                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  001E                     	;# 
   916  001F                     	;# 
   917  008C                     	;# 
   918  008D                     	;# 
   919  008E                     	;# 
   920  0090                     	;# 
   921  0091                     	;# 
   922  0092                     	;# 
   923  0093                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  0110                     	;# 
   939  0111                     	;# 
   940  0112                     	;# 
   941  0113                     	;# 
   942  0114                     	;# 
   943  0115                     	;# 
   944  0116                     	;# 
   945  0117                     	;# 
   946  0118                     	;# 
   947  0119                     	;# 
   948  011A                     	;# 
   949  011B                     	;# 
   950  011D                     	;# 
   951  018C                     	;# 
   952  018D                     	;# 
   953  0191                     	;# 
   954  0191                     	;# 
   955  0192                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0193                     	;# 
   959  0194                     	;# 
   960  0195                     	;# 
   961  0196                     	;# 
   962  0199                     	;# 
   963  019A                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019C                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020D                     	;# 
   974  0210                     	;# 
   975  0211                     	;# 
   976  0212                     	;# 
   977  0213                     	;# 
   978  0214                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0217                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0295                     	;# 
   989  0295                     	;# 
   990  0296                     	;# 
   991  0298                     	;# 
   992  0298                     	;# 
   993  0299                     	;# 
   994  029A                     	;# 
   995  029B                     	;# 
   996  029C                     	;# 
   997  029C                     	;# 
   998  029D                     	;# 
   999  029E                     	;# 
  1000  029F                     	;# 
  1001  0311                     	;# 
  1002  0311                     	;# 
  1003  0312                     	;# 
  1004  0313                     	;# 
  1005  0314                     	;# 
  1006  0315                     	;# 
  1007  0315                     	;# 
  1008  0316                     	;# 
  1009  0318                     	;# 
  1010  0318                     	;# 
  1011  0319                     	;# 
  1012  031A                     	;# 
  1013  031C                     	;# 
  1014  031C                     	;# 
  1015  031D                     	;# 
  1016  031E                     	;# 
  1017  0394                     	;# 
  1018  0395                     	;# 
  1019  0396                     	;# 
  1020  0415                     	;# 
  1021  0416                     	;# 
  1022  0417                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  0791                     	;# 
  1027  0792                     	;# 
  1028  0793                     	;# 
  1029  0794                     	;# 
  1030  0795                     	;# 
  1031  0798                     	;# 
  1032  0799                     	;# 
  1033  07A0                     	;# 
  1034  07A1                     	;# 
  1035  07A3                     	;# 
  1036  07A4                     	;# 
  1037  07A6                     	;# 
  1038  07A7                     	;# 
  1039  07A9                     	;# 
  1040  07AA                     	;# 
  1041  0FE4                     	;# 
  1042  0FE5                     	;# 
  1043  0FE6                     	;# 
  1044  0FE7                     	;# 
  1045  0FE8                     	;# 
  1046  0FE9                     	;# 
  1047  0FEA                     	;# 
  1048  0FEB                     	;# 
  1049  0FED                     	;# 
  1050  0FEE                     	;# 
  1051  0FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000D                     	;# 
  1066  000E                     	;# 
  1067  0010                     	;# 
  1068  0011                     	;# 
  1069  0012                     	;# 
  1070  0013                     	;# 
  1071  0015                     	;# 
  1072  0016                     	;# 
  1073  0016                     	;# 
  1074  0017                     	;# 
  1075  0018                     	;# 
  1076  0019                     	;# 
  1077  001A                     	;# 
  1078  001B                     	;# 
  1079  001C                     	;# 
  1080  001E                     	;# 
  1081  001F                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0097                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009A                     	;# 
  1095  009B                     	;# 
  1096  009B                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  010E                     	;# 
  1103  0110                     	;# 
  1104  0111                     	;# 
  1105  0112                     	;# 
  1106  0113                     	;# 
  1107  0114                     	;# 
  1108  0115                     	;# 
  1109  0116                     	;# 
  1110  0117                     	;# 
  1111  0118                     	;# 
  1112  0119                     	;# 
  1113  011A                     	;# 
  1114  011B                     	;# 
  1115  011D                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0194                     	;# 
  1125  0195                     	;# 
  1126  0196                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019C                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019F                     	;# 
  1138  020D                     	;# 
  1139  0210                     	;# 
  1140  0211                     	;# 
  1141  0212                     	;# 
  1142  0213                     	;# 
  1143  0214                     	;# 
  1144  0215                     	;# 
  1145  0215                     	;# 
  1146  0216                     	;# 
  1147  0217                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0298                     	;# 
  1157  0298                     	;# 
  1158  0299                     	;# 
  1159  029A                     	;# 
  1160  029B                     	;# 
  1161  029C                     	;# 
  1162  029C                     	;# 
  1163  029D                     	;# 
  1164  029E                     	;# 
  1165  029F                     	;# 
  1166  0311                     	;# 
  1167  0311                     	;# 
  1168  0312                     	;# 
  1169  0313                     	;# 
  1170  0314                     	;# 
  1171  0315                     	;# 
  1172  0315                     	;# 
  1173  0316                     	;# 
  1174  0318                     	;# 
  1175  0318                     	;# 
  1176  0319                     	;# 
  1177  031A                     	;# 
  1178  031C                     	;# 
  1179  031C                     	;# 
  1180  031D                     	;# 
  1181  031E                     	;# 
  1182  0394                     	;# 
  1183  0395                     	;# 
  1184  0396                     	;# 
  1185  0415                     	;# 
  1186  0416                     	;# 
  1187  0417                     	;# 
  1188  041C                     	;# 
  1189  041D                     	;# 
  1190  041E                     	;# 
  1191  0791                     	;# 
  1192  0792                     	;# 
  1193  0793                     	;# 
  1194  0794                     	;# 
  1195  0795                     	;# 
  1196  0798                     	;# 
  1197  0799                     	;# 
  1198  07A0                     	;# 
  1199  07A1                     	;# 
  1200  07A3                     	;# 
  1201  07A4                     	;# 
  1202  07A6                     	;# 
  1203  07A7                     	;# 
  1204  07A9                     	;# 
  1205  07AA                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000D                     	;# 
  1231  000E                     	;# 
  1232  0010                     	;# 
  1233  0011                     	;# 
  1234  0012                     	;# 
  1235  0013                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  001E                     	;# 
  1246  001F                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  008E                     	;# 
  1250  0090                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0095                     	;# 
  1255  0096                     	;# 
  1256  0097                     	;# 
  1257  0098                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  010C                     	;# 
  1266  010D                     	;# 
  1267  010E                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011A                     	;# 
  1279  011B                     	;# 
  1280  011D                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020D                     	;# 
  1304  0210                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0217                     	;# 
  1313  0291                     	;# 
  1314  0291                     	;# 
  1315  0292                     	;# 
  1316  0293                     	;# 
  1317  0294                     	;# 
  1318  0295                     	;# 
  1319  0295                     	;# 
  1320  0296                     	;# 
  1321  0298                     	;# 
  1322  0298                     	;# 
  1323  0299                     	;# 
  1324  029A                     	;# 
  1325  029B                     	;# 
  1326  029C                     	;# 
  1327  029C                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  0311                     	;# 
  1332  0311                     	;# 
  1333  0312                     	;# 
  1334  0313                     	;# 
  1335  0314                     	;# 
  1336  0315                     	;# 
  1337  0315                     	;# 
  1338  0316                     	;# 
  1339  0318                     	;# 
  1340  0318                     	;# 
  1341  0319                     	;# 
  1342  031A                     	;# 
  1343  031C                     	;# 
  1344  031C                     	;# 
  1345  031D                     	;# 
  1346  031E                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  0415                     	;# 
  1351  0416                     	;# 
  1352  0417                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  0791                     	;# 
  1357  0792                     	;# 
  1358  0793                     	;# 
  1359  0794                     	;# 
  1360  0795                     	;# 
  1361  0798                     	;# 
  1362  0799                     	;# 
  1363  07A0                     	;# 
  1364  07A1                     	;# 
  1365  07A3                     	;# 
  1366  07A4                     	;# 
  1367  07A6                     	;# 
  1368  07A7                     	;# 
  1369  07A9                     	;# 
  1370  07AA                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0010                     	;# 
  1398  0011                     	;# 
  1399  0012                     	;# 
  1400  0013                     	;# 
  1401  0015                     	;# 
  1402  0016                     	;# 
  1403  0016                     	;# 
  1404  0017                     	;# 
  1405  0018                     	;# 
  1406  0019                     	;# 
  1407  001A                     	;# 
  1408  001B                     	;# 
  1409  001C                     	;# 
  1410  001E                     	;# 
  1411  001F                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0090                     	;# 
  1416  0091                     	;# 
  1417  0092                     	;# 
  1418  0093                     	;# 
  1419  0095                     	;# 
  1420  0096                     	;# 
  1421  0097                     	;# 
  1422  0098                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  010C                     	;# 
  1431  010D                     	;# 
  1432  010E                     	;# 
  1433  0110                     	;# 
  1434  0111                     	;# 
  1435  0112                     	;# 
  1436  0113                     	;# 
  1437  0114                     	;# 
  1438  0115                     	;# 
  1439  0116                     	;# 
  1440  0117                     	;# 
  1441  0118                     	;# 
  1442  0119                     	;# 
  1443  011A                     	;# 
  1444  011B                     	;# 
  1445  011D                     	;# 
  1446  018C                     	;# 
  1447  018D                     	;# 
  1448  0191                     	;# 
  1449  0191                     	;# 
  1450  0192                     	;# 
  1451  0193                     	;# 
  1452  0193                     	;# 
  1453  0193                     	;# 
  1454  0194                     	;# 
  1455  0195                     	;# 
  1456  0196                     	;# 
  1457  0199                     	;# 
  1458  019A                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019B                     	;# 
  1462  019B                     	;# 
  1463  019C                     	;# 
  1464  019C                     	;# 
  1465  019D                     	;# 
  1466  019E                     	;# 
  1467  019F                     	;# 
  1468  020D                     	;# 
  1469  0210                     	;# 
  1470  0211                     	;# 
  1471  0212                     	;# 
  1472  0213                     	;# 
  1473  0214                     	;# 
  1474  0215                     	;# 
  1475  0215                     	;# 
  1476  0216                     	;# 
  1477  0217                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0295                     	;# 
  1484  0295                     	;# 
  1485  0296                     	;# 
  1486  0298                     	;# 
  1487  0298                     	;# 
  1488  0299                     	;# 
  1489  029A                     	;# 
  1490  029B                     	;# 
  1491  029C                     	;# 
  1492  029C                     	;# 
  1493  029D                     	;# 
  1494  029E                     	;# 
  1495  029F                     	;# 
  1496  0311                     	;# 
  1497  0311                     	;# 
  1498  0312                     	;# 
  1499  0313                     	;# 
  1500  0314                     	;# 
  1501  0315                     	;# 
  1502  0315                     	;# 
  1503  0316                     	;# 
  1504  0318                     	;# 
  1505  0318                     	;# 
  1506  0319                     	;# 
  1507  031A                     	;# 
  1508  031C                     	;# 
  1509  031C                     	;# 
  1510  031D                     	;# 
  1511  031E                     	;# 
  1512  0394                     	;# 
  1513  0395                     	;# 
  1514  0396                     	;# 
  1515  0415                     	;# 
  1516  0416                     	;# 
  1517  0417                     	;# 
  1518  041C                     	;# 
  1519  041D                     	;# 
  1520  041E                     	;# 
  1521  0791                     	;# 
  1522  0792                     	;# 
  1523  0793                     	;# 
  1524  0794                     	;# 
  1525  0795                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  07A0                     	;# 
  1529  07A1                     	;# 
  1530  07A3                     	;# 
  1531  07A4                     	;# 
  1532  07A6                     	;# 
  1533  07A7                     	;# 
  1534  07A9                     	;# 
  1535  07AA                     	;# 
  1536  0FE4                     	;# 
  1537  0FE5                     	;# 
  1538  0FE6                     	;# 
  1539  0FE7                     	;# 
  1540  0FE8                     	;# 
  1541  0FE9                     	;# 
  1542  0FEA                     	;# 
  1543  0FEB                     	;# 
  1544  0FED                     	;# 
  1545  0FEE                     	;# 
  1546  0FEF                     	;# 
  1547  0000                     	;# 
  1548  0001                     	;# 
  1549  0002                     	;# 
  1550  0003                     	;# 
  1551  0004                     	;# 
  1552  0005                     	;# 
  1553  0006                     	;# 
  1554  0007                     	;# 
  1555  0008                     	;# 
  1556  0009                     	;# 
  1557  000A                     	;# 
  1558  000B                     	;# 
  1559  000C                     	;# 
  1560  000D                     	;# 
  1561  000E                     	;# 
  1562  0010                     	;# 
  1563  0011                     	;# 
  1564  0012                     	;# 
  1565  0013                     	;# 
  1566  0015                     	;# 
  1567  0016                     	;# 
  1568  0016                     	;# 
  1569  0017                     	;# 
  1570  0018                     	;# 
  1571  0019                     	;# 
  1572  001A                     	;# 
  1573  001B                     	;# 
  1574  001C                     	;# 
  1575  001E                     	;# 
  1576  001F                     	;# 
  1577  008C                     	;# 
  1578  008D                     	;# 
  1579  008E                     	;# 
  1580  0090                     	;# 
  1581  0091                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0095                     	;# 
  1585  0096                     	;# 
  1586  0097                     	;# 
  1587  0098                     	;# 
  1588  0099                     	;# 
  1589  009A                     	;# 
  1590  009B                     	;# 
  1591  009B                     	;# 
  1592  009C                     	;# 
  1593  009D                     	;# 
  1594  009E                     	;# 
  1595  010C                     	;# 
  1596  010D                     	;# 
  1597  010E                     	;# 
  1598  0110                     	;# 
  1599  0111                     	;# 
  1600  0112                     	;# 
  1601  0113                     	;# 
  1602  0114                     	;# 
  1603  0115                     	;# 
  1604  0116                     	;# 
  1605  0117                     	;# 
  1606  0118                     	;# 
  1607  0119                     	;# 
  1608  011A                     	;# 
  1609  011B                     	;# 
  1610  011D                     	;# 
  1611  018C                     	;# 
  1612  018D                     	;# 
  1613  0191                     	;# 
  1614  0191                     	;# 
  1615  0192                     	;# 
  1616  0193                     	;# 
  1617  0193                     	;# 
  1618  0193                     	;# 
  1619  0194                     	;# 
  1620  0195                     	;# 
  1621  0196                     	;# 
  1622  0199                     	;# 
  1623  019A                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019C                     	;# 
  1629  019C                     	;# 
  1630  019D                     	;# 
  1631  019E                     	;# 
  1632  019F                     	;# 
  1633  020D                     	;# 
  1634  0210                     	;# 
  1635  0211                     	;# 
  1636  0212                     	;# 
  1637  0213                     	;# 
  1638  0214                     	;# 
  1639  0215                     	;# 
  1640  0215                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029F                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0314                     	;# 
  1666  0315                     	;# 
  1667  0315                     	;# 
  1668  0316                     	;# 
  1669  0318                     	;# 
  1670  0318                     	;# 
  1671  0319                     	;# 
  1672  031A                     	;# 
  1673  031C                     	;# 
  1674  031C                     	;# 
  1675  031D                     	;# 
  1676  031E                     	;# 
  1677  0394                     	;# 
  1678  0395                     	;# 
  1679  0396                     	;# 
  1680  0415                     	;# 
  1681  0416                     	;# 
  1682  0417                     	;# 
  1683  041C                     	;# 
  1684  041D                     	;# 
  1685  041E                     	;# 
  1686  0791                     	;# 
  1687  0792                     	;# 
  1688  0793                     	;# 
  1689  0794                     	;# 
  1690  0795                     	;# 
  1691  0798                     	;# 
  1692  0799                     	;# 
  1693  07A0                     	;# 
  1694  07A1                     	;# 
  1695  07A3                     	;# 
  1696  07A4                     	;# 
  1697  07A6                     	;# 
  1698  07A7                     	;# 
  1699  07A9                     	;# 
  1700  07AA                     	;# 
  1701  0FE4                     	;# 
  1702  0FE5                     	;# 
  1703  0FE6                     	;# 
  1704  0FE7                     	;# 
  1705  0FE8                     	;# 
  1706  0FE9                     	;# 
  1707  0FEA                     	;# 
  1708  0FEB                     	;# 
  1709  0FED                     	;# 
  1710  0FEE                     	;# 
  1711  0FEF                     	;# 
  1712  0000                     	;# 
  1713  0001                     	;# 
  1714  0002                     	;# 
  1715  0003                     	;# 
  1716  0004                     	;# 
  1717  0005                     	;# 
  1718  0006                     	;# 
  1719  0007                     	;# 
  1720  0008                     	;# 
  1721  0009                     	;# 
  1722  000A                     	;# 
  1723  000B                     	;# 
  1724  000C                     	;# 
  1725  000D                     	;# 
  1726  000E                     	;# 
  1727  0010                     	;# 
  1728  0011                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0015                     	;# 
  1732  0016                     	;# 
  1733  0016                     	;# 
  1734  0017                     	;# 
  1735  0018                     	;# 
  1736  0019                     	;# 
  1737  001A                     	;# 
  1738  001B                     	;# 
  1739  001C                     	;# 
  1740  001E                     	;# 
  1741  001F                     	;# 
  1742  008C                     	;# 
  1743  008D                     	;# 
  1744  008E                     	;# 
  1745  0090                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0095                     	;# 
  1750  0096                     	;# 
  1751  0097                     	;# 
  1752  0098                     	;# 
  1753  0099                     	;# 
  1754  009A                     	;# 
  1755  009B                     	;# 
  1756  009B                     	;# 
  1757  009C                     	;# 
  1758  009D                     	;# 
  1759  009E                     	;# 
  1760  010C                     	;# 
  1761  010D                     	;# 
  1762  010E                     	;# 
  1763  0110                     	;# 
  1764  0111                     	;# 
  1765  0112                     	;# 
  1766  0113                     	;# 
  1767  0114                     	;# 
  1768  0115                     	;# 
  1769  0116                     	;# 
  1770  0117                     	;# 
  1771  0118                     	;# 
  1772  0119                     	;# 
  1773  011A                     	;# 
  1774  011B                     	;# 
  1775  011D                     	;# 
  1776  018C                     	;# 
  1777  018D                     	;# 
  1778  0191                     	;# 
  1779  0191                     	;# 
  1780  0192                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0193                     	;# 
  1784  0194                     	;# 
  1785  0195                     	;# 
  1786  0196                     	;# 
  1787  0199                     	;# 
  1788  019A                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019C                     	;# 
  1794  019C                     	;# 
  1795  019D                     	;# 
  1796  019E                     	;# 
  1797  019F                     	;# 
  1798  020D                     	;# 
  1799  0210                     	;# 
  1800  0211                     	;# 
  1801  0212                     	;# 
  1802  0213                     	;# 
  1803  0214                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0216                     	;# 
  1807  0217                     	;# 
  1808  0291                     	;# 
  1809  0291                     	;# 
  1810  0292                     	;# 
  1811  0293                     	;# 
  1812  0294                     	;# 
  1813  0295                     	;# 
  1814  0295                     	;# 
  1815  0296                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029C                     	;# 
  1823  029D                     	;# 
  1824  029E                     	;# 
  1825  029F                     	;# 
  1826  0311                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0315                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0318                     	;# 
  1835  0318                     	;# 
  1836  0319                     	;# 
  1837  031A                     	;# 
  1838  031C                     	;# 
  1839  031C                     	;# 
  1840  031D                     	;# 
  1841  031E                     	;# 
  1842  0394                     	;# 
  1843  0395                     	;# 
  1844  0396                     	;# 
  1845  0415                     	;# 
  1846  0416                     	;# 
  1847  0417                     	;# 
  1848  041C                     	;# 
  1849  041D                     	;# 
  1850  041E                     	;# 
  1851  0791                     	;# 
  1852  0792                     	;# 
  1853  0793                     	;# 
  1854  0794                     	;# 
  1855  0795                     	;# 
  1856  0798                     	;# 
  1857  0799                     	;# 
  1858  07A0                     	;# 
  1859  07A1                     	;# 
  1860  07A3                     	;# 
  1861  07A4                     	;# 
  1862  07A6                     	;# 
  1863  07A7                     	;# 
  1864  07A9                     	;# 
  1865  07AA                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0013                     	;# 
  1896  0015                     	;# 
  1897  0016                     	;# 
  1898  0016                     	;# 
  1899  0017                     	;# 
  1900  0018                     	;# 
  1901  0019                     	;# 
  1902  001A                     	;# 
  1903  001B                     	;# 
  1904  001C                     	;# 
  1905  001E                     	;# 
  1906  001F                     	;# 
  1907  008C                     	;# 
  1908  008D                     	;# 
  1909  008E                     	;# 
  1910  0090                     	;# 
  1911  0091                     	;# 
  1912  0092                     	;# 
  1913  0093                     	;# 
  1914  0095                     	;# 
  1915  0096                     	;# 
  1916  0097                     	;# 
  1917  0098                     	;# 
  1918  0099                     	;# 
  1919  009A                     	;# 
  1920  009B                     	;# 
  1921  009B                     	;# 
  1922  009C                     	;# 
  1923  009D                     	;# 
  1924  009E                     	;# 
  1925  010C                     	;# 
  1926  010D                     	;# 
  1927  010E                     	;# 
  1928  0110                     	;# 
  1929  0111                     	;# 
  1930  0112                     	;# 
  1931  0113                     	;# 
  1932  0114                     	;# 
  1933  0115                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  0118                     	;# 
  1937  0119                     	;# 
  1938  011A                     	;# 
  1939  011B                     	;# 
  1940  011D                     	;# 
  1941  018C                     	;# 
  1942  018D                     	;# 
  1943  0191                     	;# 
  1944  0191                     	;# 
  1945  0192                     	;# 
  1946  0193                     	;# 
  1947  0193                     	;# 
  1948  0193                     	;# 
  1949  0194                     	;# 
  1950  0195                     	;# 
  1951  0196                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019D                     	;# 
  1961  019E                     	;# 
  1962  019F                     	;# 
  1963  020D                     	;# 
  1964  0210                     	;# 
  1965  0211                     	;# 
  1966  0212                     	;# 
  1967  0213                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0291                     	;# 
  1974  0291                     	;# 
  1975  0292                     	;# 
  1976  0293                     	;# 
  1977  0294                     	;# 
  1978  0295                     	;# 
  1979  0295                     	;# 
  1980  0296                     	;# 
  1981  0298                     	;# 
  1982  0298                     	;# 
  1983  0299                     	;# 
  1984  029A                     	;# 
  1985  029B                     	;# 
  1986  029C                     	;# 
  1987  029C                     	;# 
  1988  029D                     	;# 
  1989  029E                     	;# 
  1990  029F                     	;# 
  1991  0311                     	;# 
  1992  0311                     	;# 
  1993  0312                     	;# 
  1994  0313                     	;# 
  1995  0314                     	;# 
  1996  0315                     	;# 
  1997  0315                     	;# 
  1998  0316                     	;# 
  1999  0318                     	;# 
  2000  0318                     	;# 
  2001  0319                     	;# 
  2002  031A                     	;# 
  2003  031C                     	;# 
  2004  031C                     	;# 
  2005  031D                     	;# 
  2006  031E                     	;# 
  2007  0394                     	;# 
  2008  0395                     	;# 
  2009  0396                     	;# 
  2010  0415                     	;# 
  2011  0416                     	;# 
  2012  0417                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  0791                     	;# 
  2017  0792                     	;# 
  2018  0793                     	;# 
  2019  0794                     	;# 
  2020  0795                     	;# 
  2021  0798                     	;# 
  2022  0799                     	;# 
  2023  07A0                     	;# 
  2024  07A1                     	;# 
  2025  07A3                     	;# 
  2026  07A4                     	;# 
  2027  07A6                     	;# 
  2028  07A7                     	;# 
  2029  07A9                     	;# 
  2030  07AA                     	;# 
  2031  0FE4                     	;# 
  2032  0FE5                     	;# 
  2033  0FE6                     	;# 
  2034  0FE7                     	;# 
  2035  0FE8                     	;# 
  2036  0FE9                     	;# 
  2037  0FEA                     	;# 
  2038  0FEB                     	;# 
  2039  0FED                     	;# 
  2040  0FEE                     	;# 
  2041  0FEF                     	;# 
  2042  0000                     	;# 
  2043  0001                     	;# 
  2044  0002                     	;# 
  2045  0003                     	;# 
  2046  0004                     	;# 
  2047  0005                     	;# 
  2048  0006                     	;# 
  2049  0007                     	;# 
  2050  0008                     	;# 
  2051  0009                     	;# 
  2052  000A                     	;# 
  2053  000B                     	;# 
  2054  000C                     	;# 
  2055  000D                     	;# 
  2056  000E                     	;# 
  2057  0010                     	;# 
  2058  0011                     	;# 
  2059  0012                     	;# 
  2060  0013                     	;# 
  2061  0015                     	;# 
  2062  0016                     	;# 
  2063  0016                     	;# 
  2064  0017                     	;# 
  2065  0018                     	;# 
  2066  0019                     	;# 
  2067  001A                     	;# 
  2068  001B                     	;# 
  2069  001C                     	;# 
  2070  001E                     	;# 
  2071  001F                     	;# 
  2072  008C                     	;# 
  2073  008D                     	;# 
  2074  008E                     	;# 
  2075  0090                     	;# 
  2076  0091                     	;# 
  2077  0092                     	;# 
  2078  0093                     	;# 
  2079  0095                     	;# 
  2080  0096                     	;# 
  2081  0097                     	;# 
  2082  0098                     	;# 
  2083  0099                     	;# 
  2084  009A                     	;# 
  2085  009B                     	;# 
  2086  009B                     	;# 
  2087  009C                     	;# 
  2088  009D                     	;# 
  2089  009E                     	;# 
  2090  010C                     	;# 
  2091  010D                     	;# 
  2092  010E                     	;# 
  2093  0110                     	;# 
  2094  0111                     	;# 
  2095  0112                     	;# 
  2096  0113                     	;# 
  2097  0114                     	;# 
  2098  0115                     	;# 
  2099  0116                     	;# 
  2100  0117                     	;# 
  2101  0118                     	;# 
  2102  0119                     	;# 
  2103  011A                     	;# 
  2104  011B                     	;# 
  2105  011D                     	;# 
  2106  018C                     	;# 
  2107  018D                     	;# 
  2108  0191                     	;# 
  2109  0191                     	;# 
  2110  0192                     	;# 
  2111  0193                     	;# 
  2112  0193                     	;# 
  2113  0193                     	;# 
  2114  0194                     	;# 
  2115  0195                     	;# 
  2116  0196                     	;# 
  2117  0199                     	;# 
  2118  019A                     	;# 
  2119  019B                     	;# 
  2120  019B                     	;# 
  2121  019B                     	;# 
  2122  019B                     	;# 
  2123  019C                     	;# 
  2124  019C                     	;# 
  2125  019D                     	;# 
  2126  019E                     	;# 
  2127  019F                     	;# 
  2128  020D                     	;# 
  2129  0210                     	;# 
  2130  0211                     	;# 
  2131  0212                     	;# 
  2132  0213                     	;# 
  2133  0214                     	;# 
  2134  0215                     	;# 
  2135  0215                     	;# 
  2136  0216                     	;# 
  2137  0217                     	;# 
  2138  0291                     	;# 
  2139  0291                     	;# 
  2140  0292                     	;# 
  2141  0293                     	;# 
  2142  0294                     	;# 
  2143  0295                     	;# 
  2144  0295                     	;# 
  2145  0296                     	;# 
  2146  0298                     	;# 
  2147  0298                     	;# 
  2148  0299                     	;# 
  2149  029A                     	;# 
  2150  029B                     	;# 
  2151  029C                     	;# 
  2152  029C                     	;# 
  2153  029D                     	;# 
  2154  029E                     	;# 
  2155  029F                     	;# 
  2156  0311                     	;# 
  2157  0311                     	;# 
  2158  0312                     	;# 
  2159  0313                     	;# 
  2160  0314                     	;# 
  2161  0315                     	;# 
  2162  0315                     	;# 
  2163  0316                     	;# 
  2164  0318                     	;# 
  2165  0318                     	;# 
  2166  0319                     	;# 
  2167  031A                     	;# 
  2168  031C                     	;# 
  2169  031C                     	;# 
  2170  031D                     	;# 
  2171  031E                     	;# 
  2172  0394                     	;# 
  2173  0395                     	;# 
  2174  0396                     	;# 
  2175  0415                     	;# 
  2176  0416                     	;# 
  2177  0417                     	;# 
  2178  041C                     	;# 
  2179  041D                     	;# 
  2180  041E                     	;# 
  2181  0791                     	;# 
  2182  0792                     	;# 
  2183  0793                     	;# 
  2184  0794                     	;# 
  2185  0795                     	;# 
  2186  0798                     	;# 
  2187  0799                     	;# 
  2188  07A0                     	;# 
  2189  07A1                     	;# 
  2190  07A3                     	;# 
  2191  07A4                     	;# 
  2192  07A6                     	;# 
  2193  07A7                     	;# 
  2194  07A9                     	;# 
  2195  07AA                     	;# 
  2196  0FE4                     	;# 
  2197  0FE5                     	;# 
  2198  0FE6                     	;# 
  2199  0FE7                     	;# 
  2200  0FE8                     	;# 
  2201  0FE9                     	;# 
  2202  0FEA                     	;# 
  2203  0FEB                     	;# 
  2204  0FED                     	;# 
  2205  0FEE                     	;# 
  2206  0FEF                     	;_adc_buffer
  2207                           
  2208                           	psect	idataBANK1
  2209  08AD                     __pidataBANK1:	
  2210                           
  2211                           ;initializer for _light_pv
  2212  08AD  3400               	retlw	0
  2213  08AE  3400               	retlw	0
  2214  08AF  3416               	retlw	22
  2215  08B0  3444               	retlw	68
  2216                           
  2217                           ;initializer for _load_cc_I
  2218  08B1  3400               	retlw	0
  2219  08B2  3400               	retlw	0
  2220  08B3  3422               	retlw	34
  2221  08B4  3443               	retlw	67
  2222                           
  2223                           ;initializer for _step_01_time_limit
  2224  08B5  3401               	retlw	1
  2225  08B6  3400               	retlw	0
  2226                           
  2227                           ;initializer for _step_02_time_limit
  2228  08B7  3403               	retlw	3
  2229  08B8  3400               	retlw	0
  2230                           
  2231                           ;initializer for _bt_id
  2232  08B9  3401               	retlw	1
  2233                           
  2234                           ;initializer for _volt_id
  2235  08BA  3401               	retlw	1
  2236                           
  2237                           ;initializer for _voltage_adjust_index
  2238  08BB  3401               	retlw	1
  2239                           
  2240                           	psect	idataBANK2
  2241  08E9                     __pidataBANK2:	
  2242                           
  2243                           ;initializer for _dianchi_guoya_baohu
  2244  08E9  34CD               	retlw	205
  2245  08EA  34CC               	retlw	204
  2246  08EB  3444               	retlw	68
  2247  08EC  3441               	retlw	65
  2248                           
  2249                           ;initializer for _step_01_load_percent
  2250  08ED  3400               	retlw	0
  2251  08EE  3400               	retlw	0
  2252  08EF  34C8               	retlw	200
  2253  08F0  3442               	retlw	66
  2254                           
  2255                           ;initializer for _step_02_load_percent
  2256  08F1  3400               	retlw	0
  2257  08F2  3400               	retlw	0
  2258  08F3  34C8               	retlw	200
  2259  08F4  3442               	retlw	66
  2260                           
  2261                           ;initializer for _step_03_load_percent
  2262  08F5  3400               	retlw	0
  2263  08F6  3400               	retlw	0
  2264  08F7  34C8               	retlw	200
  2265  08F8  3442               	retlw	66
  2266                           
  2267                           ;initializer for _step_04_load_percent
  2268  08F9  3400               	retlw	0
  2269  08FA  3400               	retlw	0
  2270  08FB  34C8               	retlw	200
  2271  08FC  3442               	retlw	66
  2272                           
  2273                           ;initializer for _step_05_load_percent
  2274  08FD  3400               	retlw	0
  2275  08FE  3400               	retlw	0
  2276  08FF  34C8               	retlw	200
  2277  0900  3442               	retlw	66
  2278                           
  2279                           ;initializer for _step_03_time_limit
  2280  0901  3404               	retlw	4
  2281  0902  3400               	retlw	0
  2282                           
  2283                           ;initializer for _step_04_time_limit
  2284  0903  3403               	retlw	3
  2285  0904  3400               	retlw	0
  2286                           
  2287                           ;initializer for _step_05_time_limit
  2288  0905  3401               	retlw	1
  2289  0906  3400               	retlw	0
  2290                           
  2291                           ;initializer for _sys_temper_flag
  2292  0907  3401               	retlw	1
  2293                           
  2294                           	psect	idataBANK3
  2295  08A1                     __pidataBANK3:	
  2296                           
  2297                           ;initializer for _dianchi_cv_level
  2298  08A1  3466               	retlw	102
  2299  08A2  3466               	retlw	102
  2300  08A3  3442               	retlw	66
  2301  08A4  3441               	retlw	65
  2302                           
  2303                           ;initializer for _dianchi_guoya_huifu
  2304  08A5  3466               	retlw	102
  2305  08A6  3466               	retlw	102
  2306  08A7  3442               	retlw	66
  2307  08A8  3441               	retlw	65
  2308                           
  2309                           ;initializer for _shuchu_shortout_voltage
  2310  08A9  3400               	retlw	0
  2311  08AA  3400               	retlw	0
  2312  08AB  34F0               	retlw	240
  2313  08AC  3440               	retlw	64
  2314                           
  2315                           	psect	idataBANK4
  2316  08D1                     __pidataBANK4:	
  2317                           
  2318                           ;initializer for _bt_volt_00
  2319  08D1  3400               	retlw	0
  2320  08D2  3400               	retlw	0
  2321  08D3  3410               	retlw	16
  2322  08D4  3441               	retlw	65
  2323                           
  2324                           ;initializer for _bt_volt_20
  2325  08D5  345C               	retlw	92
  2326  08D6  348F               	retlw	143
  2327  08D7  341A               	retlw	26
  2328  08D8  3441               	retlw	65
  2329                           
  2330                           ;initializer for _bt_volt_40
  2331  08D9  34B8               	retlw	184
  2332  08DA  341E               	retlw	30
  2333  08DB  3425               	retlw	37
  2334  08DC  3441               	retlw	65
  2335                           
  2336                           ;initializer for _bt_volt_60
  2337  08DD  3414               	retlw	20
  2338  08DE  34AE               	retlw	174
  2339  08DF  342F               	retlw	47
  2340  08E0  3441               	retlw	65
  2341                           
  2342                           ;initializer for _bt_volt_80
  2343  08E1  3471               	retlw	113
  2344  08E2  343D               	retlw	61
  2345  08E3  343A               	retlw	58
  2346  08E4  3441               	retlw	65
  2347                           
  2348                           ;initializer for _ird_data
  2349  08E5  34BF               	retlw	191
  2350  08E6  3440               	retlw	64
  2351  08E7  34ED               	retlw	237
  2352  08E8  3410               	retlw	16
  2353                           
  2354                           	psect	idataBANK5
  2355  0908                     __pidataBANK5:	
  2356                           
  2357                           ;initializer for _Load_Pmax
  2358  0908  3400               	retlw	0
  2359  0909  3400               	retlw	0
  2360  090A  3480               	retlw	128
  2361  090B  3442               	retlw	66
  2362                           
  2363                           ;initializer for _charge_i_limit
  2364  090C  3400               	retlw	0
  2365  090D  3400               	retlw	0
  2366  090E  34A0               	retlw	160
  2367  090F  3440               	retlw	64
  2368                           
  2369                           ;initializer for _dianchi_qianya_baohu
  2370  0910  3400               	retlw	0
  2371  0911  3400               	retlw	0
  2372  0912  3410               	retlw	16
  2373  0913  3441               	retlw	65
  2374                           
  2375                           ;initializer for _dianchi_qianya_huifu
  2376  0914  3400               	retlw	0
  2377  0915  3400               	retlw	0
  2378  0916  3418               	retlw	24
  2379  0917  3441               	retlw	65
  2380                           
  2381                           ;initializer for _discharge_i_baohu
  2382  0918  3400               	retlw	0
  2383  0919  3400               	retlw	0
  2384  091A  3490               	retlw	144
  2385  091B  3440               	retlw	64
  2386                           
  2387                           ;initializer for _discharge_i_limit
  2388  091C  3400               	retlw	0
  2389  091D  3400               	retlw	0
  2390  091E  3480               	retlw	128
  2391  091F  3440               	retlw	64
  2392                           
  2393                           ;initializer for _light_off_pv_level
  2394  0920  3400               	retlw	0
  2395  0921  3400               	retlw	0
  2396  0922  3400               	retlw	0
  2397  0923  3441               	retlw	65
  2398                           
  2399                           ;initializer for _light_on_pv_level
  2400  0924  3400               	retlw	0
  2401  0925  3400               	retlw	0
  2402  0926  34C0               	retlw	192
  2403  0927  3440               	retlw	64
  2404                           
  2405                           ;initializer for _shuchu_open_voltage
  2406  0928  3400               	retlw	0
  2407  0929  3400               	retlw	0
  2408  092A  347C               	retlw	124
  2409  092B  3442               	retlw	66
  2410                           
  2411                           	psect	stringtext
  2412  3800                     __pstringtext:	
  2413  3800                     __stringtab:	
  2414  3800  3400               	retlw	0
  2415  3801                     __end_of__stringtab:	
  2416  3801                     _CRCHi:	
  2417  3801  3400               	retlw	0
  2418  3802  34C1               	retlw	193
  2419  3803  3481               	retlw	129
  2420  3804  3440               	retlw	64
  2421  3805  3401               	retlw	1
  2422  3806  34C0               	retlw	192
  2423  3807  3480               	retlw	128
  2424  3808  3441               	retlw	65
  2425  3809  3401               	retlw	1
  2426  380A  34C0               	retlw	192
  2427  380B  3480               	retlw	128
  2428  380C  3441               	retlw	65
  2429  380D  3400               	retlw	0
  2430  380E  34C1               	retlw	193
  2431  380F  3481               	retlw	129
  2432  3810  3440               	retlw	64
  2433  3811  3401               	retlw	1
  2434  3812  34C0               	retlw	192
  2435  3813  3480               	retlw	128
  2436  3814  3441               	retlw	65
  2437  3815  3400               	retlw	0
  2438  3816  34C1               	retlw	193
  2439  3817  3481               	retlw	129
  2440  3818  3440               	retlw	64
  2441  3819  3400               	retlw	0
  2442  381A  34C1               	retlw	193
  2443  381B  3481               	retlw	129
  2444  381C  3440               	retlw	64
  2445  381D  3401               	retlw	1
  2446  381E  34C0               	retlw	192
  2447  381F  3480               	retlw	128
  2448  3820  3441               	retlw	65
  2449  3821  3401               	retlw	1
  2450  3822  34C0               	retlw	192
  2451  3823  3480               	retlw	128
  2452  3824  3441               	retlw	65
  2453  3825  3400               	retlw	0
  2454  3826  34C1               	retlw	193
  2455  3827  3481               	retlw	129
  2456  3828  3440               	retlw	64
  2457  3829  3400               	retlw	0
  2458  382A  34C1               	retlw	193
  2459  382B  3481               	retlw	129
  2460  382C  3440               	retlw	64
  2461  382D  3401               	retlw	1
  2462  382E  34C0               	retlw	192
  2463  382F  3480               	retlw	128
  2464  3830  3441               	retlw	65
  2465  3831  3400               	retlw	0
  2466  3832  34C1               	retlw	193
  2467  3833  3481               	retlw	129
  2468  3834  3440               	retlw	64
  2469  3835  3401               	retlw	1
  2470  3836  34C0               	retlw	192
  2471  3837  3480               	retlw	128
  2472  3838  3441               	retlw	65
  2473  3839  3401               	retlw	1
  2474  383A  34C0               	retlw	192
  2475  383B  3480               	retlw	128
  2476  383C  3441               	retlw	65
  2477  383D  3400               	retlw	0
  2478  383E  34C1               	retlw	193
  2479  383F  3481               	retlw	129
  2480  3840  3440               	retlw	64
  2481  3841  3401               	retlw	1
  2482  3842  34C0               	retlw	192
  2483  3843  3480               	retlw	128
  2484  3844  3441               	retlw	65
  2485  3845  3400               	retlw	0
  2486  3846  34C1               	retlw	193
  2487  3847  3481               	retlw	129
  2488  3848  3440               	retlw	64
  2489  3849  3400               	retlw	0
  2490  384A  34C1               	retlw	193
  2491  384B  3481               	retlw	129
  2492  384C  3440               	retlw	64
  2493  384D  3401               	retlw	1
  2494  384E  34C0               	retlw	192
  2495  384F  3480               	retlw	128
  2496  3850  3441               	retlw	65
  2497  3851  3400               	retlw	0
  2498  3852  34C1               	retlw	193
  2499  3853  3481               	retlw	129
  2500  3854  3440               	retlw	64
  2501  3855  3401               	retlw	1
  2502  3856  34C0               	retlw	192
  2503  3857  3480               	retlw	128
  2504  3858  3441               	retlw	65
  2505  3859  3401               	retlw	1
  2506  385A  34C0               	retlw	192
  2507  385B  3480               	retlw	128
  2508  385C  3441               	retlw	65
  2509  385D  3400               	retlw	0
  2510  385E  34C1               	retlw	193
  2511  385F  3481               	retlw	129
  2512  3860  3440               	retlw	64
  2513  3861  3400               	retlw	0
  2514  3862  34C1               	retlw	193
  2515  3863  3481               	retlw	129
  2516  3864  3440               	retlw	64
  2517  3865  3401               	retlw	1
  2518  3866  34C0               	retlw	192
  2519  3867  3480               	retlw	128
  2520  3868  3441               	retlw	65
  2521  3869  3401               	retlw	1
  2522  386A  34C0               	retlw	192
  2523  386B  3480               	retlw	128
  2524  386C  3441               	retlw	65
  2525  386D  3400               	retlw	0
  2526  386E  34C1               	retlw	193
  2527  386F  3481               	retlw	129
  2528  3870  3440               	retlw	64
  2529  3871  3401               	retlw	1
  2530  3872  34C0               	retlw	192
  2531  3873  3480               	retlw	128
  2532  3874  3441               	retlw	65
  2533  3875  3400               	retlw	0
  2534  3876  34C1               	retlw	193
  2535  3877  3481               	retlw	129
  2536  3878  3440               	retlw	64
  2537  3879  3400               	retlw	0
  2538  387A  34C1               	retlw	193
  2539  387B  3481               	retlw	129
  2540  387C  3440               	retlw	64
  2541  387D  3401               	retlw	1
  2542  387E  34C0               	retlw	192
  2543  387F  3480               	retlw	128
  2544  3880  3441               	retlw	65
  2545  3881  3401               	retlw	1
  2546  3882  34C0               	retlw	192
  2547  3883  3480               	retlw	128
  2548  3884  3441               	retlw	65
  2549  3885  3400               	retlw	0
  2550  3886  34C1               	retlw	193
  2551  3887  3481               	retlw	129
  2552  3888  3440               	retlw	64
  2553  3889  3400               	retlw	0
  2554  388A  34C1               	retlw	193
  2555  388B  3481               	retlw	129
  2556  388C  3440               	retlw	64
  2557  388D  3401               	retlw	1
  2558  388E  34C0               	retlw	192
  2559  388F  3480               	retlw	128
  2560  3890  3441               	retlw	65
  2561  3891  3400               	retlw	0
  2562  3892  34C1               	retlw	193
  2563  3893  3481               	retlw	129
  2564  3894  3440               	retlw	64
  2565  3895  3401               	retlw	1
  2566  3896  34C0               	retlw	192
  2567  3897  3480               	retlw	128
  2568  3898  3441               	retlw	65
  2569  3899  3401               	retlw	1
  2570  389A  34C0               	retlw	192
  2571  389B  3480               	retlw	128
  2572  389C  3441               	retlw	65
  2573  389D  3400               	retlw	0
  2574  389E  34C1               	retlw	193
  2575  389F  3481               	retlw	129
  2576  38A0  3440               	retlw	64
  2577  38A1  3400               	retlw	0
  2578  38A2  34C1               	retlw	193
  2579  38A3  3481               	retlw	129
  2580  38A4  3440               	retlw	64
  2581  38A5  3401               	retlw	1
  2582  38A6  34C0               	retlw	192
  2583  38A7  3480               	retlw	128
  2584  38A8  3441               	retlw	65
  2585  38A9  3401               	retlw	1
  2586  38AA  34C0               	retlw	192
  2587  38AB  3480               	retlw	128
  2588  38AC  3441               	retlw	65
  2589  38AD  3400               	retlw	0
  2590  38AE  34C1               	retlw	193
  2591  38AF  3481               	retlw	129
  2592  38B0  3440               	retlw	64
  2593  38B1  3401               	retlw	1
  2594  38B2  34C0               	retlw	192
  2595  38B3  3480               	retlw	128
  2596  38B4  3441               	retlw	65
  2597  38B5  3400               	retlw	0
  2598  38B6  34C1               	retlw	193
  2599  38B7  3481               	retlw	129
  2600  38B8  3440               	retlw	64
  2601  38B9  3400               	retlw	0
  2602  38BA  34C1               	retlw	193
  2603  38BB  3481               	retlw	129
  2604  38BC  3440               	retlw	64
  2605  38BD  3401               	retlw	1
  2606  38BE  34C0               	retlw	192
  2607  38BF  3480               	retlw	128
  2608  38C0  3441               	retlw	65
  2609  38C1  3400               	retlw	0
  2610  38C2  34C1               	retlw	193
  2611  38C3  3481               	retlw	129
  2612  38C4  3440               	retlw	64
  2613  38C5  3401               	retlw	1
  2614  38C6  34C0               	retlw	192
  2615  38C7  3480               	retlw	128
  2616  38C8  3441               	retlw	65
  2617  38C9  3401               	retlw	1
  2618  38CA  34C0               	retlw	192
  2619  38CB  3480               	retlw	128
  2620  38CC  3441               	retlw	65
  2621  38CD  3400               	retlw	0
  2622  38CE  34C1               	retlw	193
  2623  38CF  3481               	retlw	129
  2624  38D0  3440               	retlw	64
  2625  38D1  3401               	retlw	1
  2626  38D2  34C0               	retlw	192
  2627  38D3  3480               	retlw	128
  2628  38D4  3441               	retlw	65
  2629  38D5  3400               	retlw	0
  2630  38D6  34C1               	retlw	193
  2631  38D7  3481               	retlw	129
  2632  38D8  3440               	retlw	64
  2633  38D9  3400               	retlw	0
  2634  38DA  34C1               	retlw	193
  2635  38DB  3481               	retlw	129
  2636  38DC  3440               	retlw	64
  2637  38DD  3401               	retlw	1
  2638  38DE  34C0               	retlw	192
  2639  38DF  3480               	retlw	128
  2640  38E0  3441               	retlw	65
  2641  38E1  3401               	retlw	1
  2642  38E2  34C0               	retlw	192
  2643  38E3  3480               	retlw	128
  2644  38E4  3441               	retlw	65
  2645  38E5  3400               	retlw	0
  2646  38E6  34C1               	retlw	193
  2647  38E7  3481               	retlw	129
  2648  38E8  3440               	retlw	64
  2649  38E9  3400               	retlw	0
  2650  38EA  34C1               	retlw	193
  2651  38EB  3481               	retlw	129
  2652  38EC  3440               	retlw	64
  2653  38ED  3401               	retlw	1
  2654  38EE  34C0               	retlw	192
  2655  38EF  3480               	retlw	128
  2656  38F0  3441               	retlw	65
  2657  38F1  3400               	retlw	0
  2658  38F2  34C1               	retlw	193
  2659  38F3  3481               	retlw	129
  2660  38F4  3440               	retlw	64
  2661  38F5  3401               	retlw	1
  2662  38F6  34C0               	retlw	192
  2663  38F7  3480               	retlw	128
  2664  38F8  3441               	retlw	65
  2665  38F9  3401               	retlw	1
  2666  38FA  34C0               	retlw	192
  2667  38FB  3480               	retlw	128
  2668  38FC  3441               	retlw	65
  2669  38FD  3400               	retlw	0
  2670  38FE  34C1               	retlw	193
  2671  38FF  3481               	retlw	129
  2672  3900  3440               	retlw	64
  2673  3901                     __end_of_CRCHi:	
  2674  3901                     _CRCLo:	
  2675  3901  3400               	retlw	0
  2676  3902  34C0               	retlw	192
  2677  3903  34C1               	retlw	193
  2678  3904  3401               	retlw	1
  2679  3905  34C3               	retlw	195
  2680  3906  3403               	retlw	3
  2681  3907  3402               	retlw	2
  2682  3908  34C2               	retlw	194
  2683  3909  34C6               	retlw	198
  2684  390A  3406               	retlw	6
  2685  390B  3407               	retlw	7
  2686  390C  34C7               	retlw	199
  2687  390D  3405               	retlw	5
  2688  390E  34C5               	retlw	197
  2689  390F  34C4               	retlw	196
  2690  3910  3404               	retlw	4
  2691  3911  34CC               	retlw	204
  2692  3912  340C               	retlw	12
  2693  3913  340D               	retlw	13
  2694  3914  34CD               	retlw	205
  2695  3915  340F               	retlw	15
  2696  3916  34CF               	retlw	207
  2697  3917  34CE               	retlw	206
  2698  3918  340E               	retlw	14
  2699  3919  340A               	retlw	10
  2700  391A  34CA               	retlw	202
  2701  391B  34CB               	retlw	203
  2702  391C  340B               	retlw	11
  2703  391D  34C9               	retlw	201
  2704  391E  3409               	retlw	9
  2705  391F  3408               	retlw	8
  2706  3920  34C8               	retlw	200
  2707  3921  34D8               	retlw	216
  2708  3922  3418               	retlw	24
  2709  3923  3419               	retlw	25
  2710  3924  34D9               	retlw	217
  2711  3925  341B               	retlw	27
  2712  3926  34DB               	retlw	219
  2713  3927  34DA               	retlw	218
  2714  3928  341A               	retlw	26
  2715  3929  341E               	retlw	30
  2716  392A  34DE               	retlw	222
  2717  392B  34DF               	retlw	223
  2718  392C  341F               	retlw	31
  2719  392D  34DD               	retlw	221
  2720  392E  341D               	retlw	29
  2721  392F  341C               	retlw	28
  2722  3930  34DC               	retlw	220
  2723  3931  3414               	retlw	20
  2724  3932  34D4               	retlw	212
  2725  3933  34D5               	retlw	213
  2726  3934  3415               	retlw	21
  2727  3935  34D7               	retlw	215
  2728  3936  3417               	retlw	23
  2729  3937  3416               	retlw	22
  2730  3938  34D6               	retlw	214
  2731  3939  34D2               	retlw	210
  2732  393A  3412               	retlw	18
  2733  393B  3413               	retlw	19
  2734  393C  34D3               	retlw	211
  2735  393D  3411               	retlw	17
  2736  393E  34D1               	retlw	209
  2737  393F  34D0               	retlw	208
  2738  3940  3410               	retlw	16
  2739  3941  34F0               	retlw	240
  2740  3942  3430               	retlw	48
  2741  3943  3431               	retlw	49
  2742  3944  34F1               	retlw	241
  2743  3945  3433               	retlw	51
  2744  3946  34F3               	retlw	243
  2745  3947  34F2               	retlw	242
  2746  3948  3432               	retlw	50
  2747  3949  3436               	retlw	54
  2748  394A  34F6               	retlw	246
  2749  394B  34F7               	retlw	247
  2750  394C  3437               	retlw	55
  2751  394D  34F5               	retlw	245
  2752  394E  3435               	retlw	53
  2753  394F  3434               	retlw	52
  2754  3950  34F4               	retlw	244
  2755  3951  343C               	retlw	60
  2756  3952  34FC               	retlw	252
  2757  3953  34FD               	retlw	253
  2758  3954  343D               	retlw	61
  2759  3955  34FF               	retlw	255
  2760  3956  343F               	retlw	63
  2761  3957  343E               	retlw	62
  2762  3958  34FE               	retlw	254
  2763  3959  34FA               	retlw	250
  2764  395A  343A               	retlw	58
  2765  395B  343B               	retlw	59
  2766  395C  34FB               	retlw	251
  2767  395D  3439               	retlw	57
  2768  395E  34F9               	retlw	249
  2769  395F  34F8               	retlw	248
  2770  3960  3438               	retlw	56
  2771  3961  3428               	retlw	40
  2772  3962  34E8               	retlw	232
  2773  3963  34E9               	retlw	233
  2774  3964  3429               	retlw	41
  2775  3965  34EB               	retlw	235
  2776  3966  342B               	retlw	43
  2777  3967  342A               	retlw	42
  2778  3968  34EA               	retlw	234
  2779  3969  34EE               	retlw	238
  2780  396A  342E               	retlw	46
  2781  396B  342F               	retlw	47
  2782  396C  34EF               	retlw	239
  2783  396D  342D               	retlw	45
  2784  396E  34ED               	retlw	237
  2785  396F  34EC               	retlw	236
  2786  3970  342C               	retlw	44
  2787  3971  34E4               	retlw	228
  2788  3972  3424               	retlw	36
  2789  3973  3425               	retlw	37
  2790  3974  34E5               	retlw	229
  2791  3975  3427               	retlw	39
  2792  3976  34E7               	retlw	231
  2793  3977  34E6               	retlw	230
  2794  3978  3426               	retlw	38
  2795  3979  3422               	retlw	34
  2796  397A  34E2               	retlw	226
  2797  397B  34E3               	retlw	227
  2798  397C  3423               	retlw	35
  2799  397D  34E1               	retlw	225
  2800  397E  3421               	retlw	33
  2801  397F  3420               	retlw	32
  2802  3980  34E0               	retlw	224
  2803  3981  34A0               	retlw	160
  2804  3982  3460               	retlw	96
  2805  3983  3461               	retlw	97
  2806  3984  34A1               	retlw	161
  2807  3985  3463               	retlw	99
  2808  3986  34A3               	retlw	163
  2809  3987  34A2               	retlw	162
  2810  3988  3462               	retlw	98
  2811  3989  3466               	retlw	102
  2812  398A  34A6               	retlw	166
  2813  398B  34A7               	retlw	167
  2814  398C  3467               	retlw	103
  2815  398D  34A5               	retlw	165
  2816  398E  3465               	retlw	101
  2817  398F  3464               	retlw	100
  2818  3990  34A4               	retlw	164
  2819  3991  346C               	retlw	108
  2820  3992  34AC               	retlw	172
  2821  3993  34AD               	retlw	173
  2822  3994  346D               	retlw	109
  2823  3995  34AF               	retlw	175
  2824  3996  346F               	retlw	111
  2825  3997  346E               	retlw	110
  2826  3998  34AE               	retlw	174
  2827  3999  34AA               	retlw	170
  2828  399A  346A               	retlw	106
  2829  399B  346B               	retlw	107
  2830  399C  34AB               	retlw	171
  2831  399D  3469               	retlw	105
  2832  399E  34A9               	retlw	169
  2833  399F  34A8               	retlw	168
  2834  39A0  3468               	retlw	104
  2835  39A1  3478               	retlw	120
  2836  39A2  34B8               	retlw	184
  2837  39A3  34B9               	retlw	185
  2838  39A4  3479               	retlw	121
  2839  39A5  34BB               	retlw	187
  2840  39A6  347B               	retlw	123
  2841  39A7  347A               	retlw	122
  2842  39A8  34BA               	retlw	186
  2843  39A9  34BE               	retlw	190
  2844  39AA  347E               	retlw	126
  2845  39AB  347F               	retlw	127
  2846  39AC  34BF               	retlw	191
  2847  39AD  347D               	retlw	125
  2848  39AE  34BD               	retlw	189
  2849  39AF  34BC               	retlw	188
  2850  39B0  347C               	retlw	124
  2851  39B1  34B4               	retlw	180
  2852  39B2  3474               	retlw	116
  2853  39B3  3475               	retlw	117
  2854  39B4  34B5               	retlw	181
  2855  39B5  3477               	retlw	119
  2856  39B6  34B7               	retlw	183
  2857  39B7  34B6               	retlw	182
  2858  39B8  3476               	retlw	118
  2859  39B9  3472               	retlw	114
  2860  39BA  34B2               	retlw	178
  2861  39BB  34B3               	retlw	179
  2862  39BC  3473               	retlw	115
  2863  39BD  34B1               	retlw	177
  2864  39BE  3471               	retlw	113
  2865  39BF  3470               	retlw	112
  2866  39C0  34B0               	retlw	176
  2867  39C1  3450               	retlw	80
  2868  39C2  3490               	retlw	144
  2869  39C3  3491               	retlw	145
  2870  39C4  3451               	retlw	81
  2871  39C5  3493               	retlw	147
  2872  39C6  3453               	retlw	83
  2873  39C7  3452               	retlw	82
  2874  39C8  3492               	retlw	146
  2875  39C9  3496               	retlw	150
  2876  39CA  3456               	retlw	86
  2877  39CB  3457               	retlw	87
  2878  39CC  3497               	retlw	151
  2879  39CD  3455               	retlw	85
  2880  39CE  3495               	retlw	149
  2881  39CF  3494               	retlw	148
  2882  39D0  3454               	retlw	84
  2883  39D1  349C               	retlw	156
  2884  39D2  345C               	retlw	92
  2885  39D3  345D               	retlw	93
  2886  39D4  349D               	retlw	157
  2887  39D5  345F               	retlw	95
  2888  39D6  349F               	retlw	159
  2889  39D7  349E               	retlw	158
  2890  39D8  345E               	retlw	94
  2891  39D9  345A               	retlw	90
  2892  39DA  349A               	retlw	154
  2893  39DB  349B               	retlw	155
  2894  39DC  345B               	retlw	91
  2895  39DD  3499               	retlw	153
  2896  39DE  3459               	retlw	89
  2897  39DF  3458               	retlw	88
  2898  39E0  3498               	retlw	152
  2899  39E1  3488               	retlw	136
  2900  39E2  3448               	retlw	72
  2901  39E3  3449               	retlw	73
  2902  39E4  3489               	retlw	137
  2903  39E5  344B               	retlw	75
  2904  39E6  348B               	retlw	139
  2905  39E7  348A               	retlw	138
  2906  39E8  344A               	retlw	74
  2907  39E9  344E               	retlw	78
  2908  39EA  348E               	retlw	142
  2909  39EB  348F               	retlw	143
  2910  39EC  344F               	retlw	79
  2911  39ED  348D               	retlw	141
  2912  39EE  344D               	retlw	77
  2913  39EF  344C               	retlw	76
  2914  39F0  348C               	retlw	140
  2915  39F1  3444               	retlw	68
  2916  39F2  3484               	retlw	132
  2917  39F3  3485               	retlw	133
  2918  39F4  3445               	retlw	69
  2919  39F5  3487               	retlw	135
  2920  39F6  3447               	retlw	71
  2921  39F7  3446               	retlw	70
  2922  39F8  3486               	retlw	134
  2923  39F9  3482               	retlw	130
  2924  39FA  3442               	retlw	66
  2925  39FB  3443               	retlw	67
  2926  39FC  3483               	retlw	131
  2927  39FD  3441               	retlw	65
  2928  39FE  3481               	retlw	129
  2929  39FF  3480               	retlw	128
  2930  3A00  3440               	retlw	64
  2931  3A01                     __end_of_CRCLo:	
  2932  0011                     _PIR1bits	set	17
  2933  0012                     _PIR2bits	set	18
  2934  001B                     _PR2	set	27
  2935  0018                     _T1CON	set	24
  2936  0019                     _T1GCONbits	set	25
  2937  001C                     _T2CONbits	set	28
  2938  0015                     _TMR0	set	21
  2939  0017                     _TMR1H	set	23
  2940  0016                     _TMR1L	set	22
  2941  0095                     _C1IF	set	149
  2942  0018                     _CARRY	set	24
  2943  005F                     _GIE	set	95
  2944  005B                     _IOCIE	set	91
  2945  0058                     _IOCIF	set	88
  2946  005E                     _PEIE	set	94
  2947  0071                     _RC1	set	113
  2948  008D                     _RCIF	set	141
  2949  005D                     _TMR0IE	set	93
  2950  005A                     _TMR0IF	set	90
  2951  0088                     _TMR1IF	set	136
  2952  00C0                     _TMR1ON	set	192
  2953  0089                     _TMR2IF	set	137
  2954  00E2                     _TMR2ON	set	226
  2955  0099                     _TMR4IF	set	153
  2956  009B                     _TMR6IF	set	155
  2957  008C                     _TXIF	set	140
  2958  009D                     _ADCON0bits	set	157
  2959  009E                     _ADCON1bits	set	158
  2960  009B                     _ADRESL	set	155
  2961  0095                     _OPTION_REGbits	set	149
  2962  0099                     _OSCCON	set	153
  2963  0091                     _PIE1bits	set	145
  2964  0092                     _PIE2bits	set	146
  2965  008C                     _TRISAbits	set	140
  2966  008D                     _TRISBbits	set	141
  2967  008E                     _TRISCbits	set	142
  2968  0097                     _WDTCONbits	set	151
  2969  009C                     _ADRESH	set	156
  2970  0495                     _C1IE	set	1173
  2971  04AB                     _PSA	set	1195
  2972  048D                     _RCIE	set	1165
  2973  04AD                     _TMR0CS	set	1197
  2974  0488                     _TMR1IE	set	1160
  2975  048C                     _TXIE	set	1164
  2976  011D                     _APFCONbits	set	285
  2977  0111                     _CM1CON0bits	set	273
  2978  0112                     _CM1CON1bits	set	274
  2979  0117                     _FVRCONbits	set	279
  2980  010E                     _LATCbits	set	270
  2981  0191                     _EEADR	set	401
  2982  018C                     _ANSELA	set	396
  2983  018D                     _ANSELB	set	397
  2984  019F                     _BAUDCON	set	415
  2985  0195                     _EECON1	set	405
  2986  0196                     _EECON2	set	406
  2987  0193                     _EEDATA	set	403
  2988  0199                     _RCREG	set	409
  2989  019D                     _RCSTA	set	413
  2990  019D                     _RCSTAbits	set	413
  2991  019C                     _SP1BRGH	set	412
  2992  019B                     _SP1BRGL	set	411
  2993  019A                     _TXREG	set	410
  2994  019E                     _TXSTA	set	414
  2995  019E                     _TXSTAbits	set	414
  2996  0C60                     _ANSA0	set	3168
  2997  0C61                     _ANSA1	set	3169
  2998  0C62                     _ANSA2	set	3170
  2999  0C63                     _ANSA3	set	3171
  3000  0C65                     _ANSA5	set	3173
  3001  0C68                     _ANSB0	set	3176
  3002  0C69                     _ANSB1	set	3177
  3003  0C6B                     _ANSB3	set	3179
  3004  0CA8                     _RD	set	3240
  3005  0CA9                     _WR	set	3241
  3006  0CAA                     _WREN	set	3242
  3007  0293                     _CCP1CONbits	set	659
  3008  0291                     _CCPR1L	set	657
  3009  029E                     _CCPTMRS0bits	set	670
  3010  029F                     _CCPTMRS1bits	set	671
  3011  0313                     _CCP3CONbits	set	787
  3012  031E                     _CCP5CONbits	set	798
  3013  0311                     _CCPR3L	set	785
  3014  031C                     _CCPR5L	set	796
  3015  0396                     _IOCBFbits	set	918
  3016  0395                     _IOCBNbits	set	917
  3017  1CB4                     _IOCBF4	set	7348
  3018  1CB7                     _IOCBF7	set	7351
  3019  0416                     _PR4	set	1046
  3020  041D                     _PR6	set	1053
  3021  0417                     _T4CONbits	set	1047
  3022  041E                     _T6CONbits	set	1054
  3023  20BA                     _TMR4ON	set	8378
  3024  20F2                     _TMR6ON	set	8434
  3025                           
  3026                           ; #config settings
  3027  0000                     
  3028                           	psect	cinit
  3029  0996                     start_initialization:	
  3030  0996                     __initialization:		;BIGRAM
  3031                           
  3032                           ; Clear objects allocated to BIGRAM
  3033  0996  3070               	movlw	112
  3034  0997  0084               	movwf	4
  3035  0998  3023               	movlw	35
  3036  0999  0085               	movwf	5
  3037  099A  3080               	movlw	128
  3038  099B  00FE               	movwf	126
  3039  099C  01FF               	clrf	127
  3040  099D  3188  2095  3189   	fcall	clear_ram0
  3041  09A0  30A0               	movlw	low __pbssBANK1
  3042                           
  3043                           ; Clear objects allocated to COMMON
  3044  09A1  01FC               	clrf	__pbssCOMMON& (0+127)
  3045  09A2  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3046                           
  3047                           ; Clear objects allocated to BANK0
  3048  09A3  01EA               	clrf	__pbssBANK0& (0+127)
  3049  09A4  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  3050  09A5  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  3051                           
  3052                           ; Clear objects allocated to BANK1
  3053  09A6  0084               	movwf	4
  3054  09A7  3000               	movlw	high __pbssBANK1
  3055  09A8  0085               	movwf	5
  3056  09A9  3020               	movlw	32
  3057  09AA  00FE               	movwf	126
  3058  09AB  3000               	movlw	0
  3059  09AC  00FF               	movwf	127
  3060  09AD  3188  2095  3189   	fcall	clear_ram0
  3061                           
  3062                           ; Clear objects allocated to BANK2
  3063  09B0  3020               	movlw	low __pbssBANK2
  3064  09B1  0084               	movwf	4
  3065  09B2  3001               	movlw	high __pbssBANK2
  3066  09B3  0085               	movwf	5
  3067  09B4  3031               	movlw	49
  3068  09B5  00FE               	movwf	126
  3069  09B6  3000               	movlw	0
  3070  09B7  00FF               	movwf	127
  3071  09B8  3188  2095  3189   	fcall	clear_ram0
  3072                           
  3073                           ; Clear objects allocated to BANK3
  3074  09BB  30A0               	movlw	low __pbssBANK3
  3075  09BC  0084               	movwf	4
  3076  09BD  3001               	movlw	high __pbssBANK3
  3077  09BE  0085               	movwf	5
  3078  09BF  3043               	movlw	67
  3079  09C0  00FE               	movwf	126
  3080  09C1  3000               	movlw	0
  3081  09C2  00FF               	movwf	127
  3082  09C3  3188  2095  3189   	fcall	clear_ram0
  3083                           
  3084                           ; Clear objects allocated to BANK4
  3085  09C6  3020               	movlw	low __pbssBANK4
  3086  09C7  0084               	movwf	4
  3087  09C8  3002               	movlw	high __pbssBANK4
  3088  09C9  0085               	movwf	5
  3089  09CA  3038               	movlw	56
  3090  09CB  00FE               	movwf	126
  3091  09CC  3000               	movlw	0
  3092  09CD  00FF               	movwf	127
  3093  09CE  3188  2095  3189   	fcall	clear_ram0
  3094                           
  3095                           ; Clear objects allocated to BANK5
  3096  09D1  30A0               	movlw	low __pbssBANK5
  3097  09D2  0084               	movwf	4
  3098  09D3  3002               	movlw	high __pbssBANK5
  3099  09D4  0085               	movwf	5
  3100  09D5  3028               	movlw	40
  3101  09D6  00FE               	movwf	126
  3102  09D7  3000               	movlw	0
  3103  09D8  00FF               	movwf	127
  3104  09D9  3188  2095  3189   	fcall	clear_ram0
  3105                           
  3106                           ; Clear objects allocated to BANK6
  3107  09DC  3020               	movlw	low __pbssBANK6
  3108  09DD  0084               	movwf	4
  3109  09DE  3003               	movlw	high __pbssBANK6
  3110  09DF  0085               	movwf	5
  3111  09E0  301C               	movlw	28
  3112  09E1  00FE               	movwf	126
  3113  09E2  3000               	movlw	0
  3114  09E3  00FF               	movwf	127
  3115  09E4  3188  2095  3189   	fcall	clear_ram0
  3116                           
  3117                           ; Clear objects allocated to BANK7
  3118  09E7  30A0               	movlw	low __pbssBANK7
  3119  09E8  0084               	movwf	4
  3120  09E9  3003               	movlw	high __pbssBANK7
  3121  09EA  0085               	movwf	5
  3122  09EB  3050               	movlw	80
  3123  09EC  00FE               	movwf	126
  3124  09ED  3000               	movlw	0
  3125  09EE  00FF               	movwf	127
  3126  09EF  3188  2095  3189   	fcall	clear_ram0
  3127                           
  3128                           ; Clear objects allocated to BANK8
  3129  09F2  3020               	movlw	low __pbssBANK8
  3130  09F3  0084               	movwf	4
  3131  09F4  3004               	movlw	high __pbssBANK8
  3132  09F5  0085               	movwf	5
  3133  09F6  3050               	movlw	80
  3134  09F7  00FE               	movwf	126
  3135  09F8  3000               	movlw	0
  3136  09F9  00FF               	movwf	127
  3137  09FA  3188  2095  3189   	fcall	clear_ram0
  3138                           
  3139                           ; Initialize objects allocated to BANK1
  3140  09FD  30AD               	movlw	low __pidataBANK1
  3141  09FE  0084               	movwf	4
  3142  09FF  3088               	movlw	(high __pidataBANK1)| (0+128)
  3143  0A00  0085               	movwf	5
  3144  0A01  30DE               	movlw	low __pdataBANK1
  3145  0A02  0086               	movwf	6
  3146  0A03  3000               	movlw	high __pdataBANK1
  3147  0A04  0087               	movwf	7
  3148  0A05  3000               	movlw	0
  3149  0A06  00FF               	movwf	127
  3150  0A07  300F               	movlw	15
  3151  0A08  3188  2089  3189   	fcall	init_ram
  3152                           
  3153                           ; Initialize objects allocated to BANK2
  3154  0A0B  30E9               	movlw	low __pidataBANK2
  3155  0A0C  0084               	movwf	4
  3156  0A0D  3088               	movlw	(high __pidataBANK2)| (0+128)
  3157  0A0E  0085               	movwf	5
  3158  0A0F  3051               	movlw	low __pdataBANK2
  3159  0A10  0086               	movwf	6
  3160  0A11  3001               	movlw	high __pdataBANK2
  3161  0A12  0087               	movwf	7
  3162  0A13  3000               	movlw	0
  3163  0A14  00FF               	movwf	127
  3164  0A15  301F               	movlw	31
  3165  0A16  3188  2089  3189   	fcall	init_ram
  3166                           
  3167                           ; Initialize objects allocated to BANK3
  3168  0A19  30A1               	movlw	low __pidataBANK3
  3169  0A1A  0084               	movwf	4
  3170  0A1B  3088               	movlw	(high __pidataBANK3)| (0+128)
  3171  0A1C  0085               	movwf	5
  3172  0A1D  30E3               	movlw	low __pdataBANK3
  3173  0A1E  0086               	movwf	6
  3174  0A1F  3001               	movlw	high __pdataBANK3
  3175  0A20  0087               	movwf	7
  3176  0A21  3000               	movlw	0
  3177  0A22  00FF               	movwf	127
  3178  0A23  300C               	movlw	12
  3179  0A24  3188  2089  3189   	fcall	init_ram
  3180                           
  3181                           ; Initialize objects allocated to BANK4
  3182  0A27  30D1               	movlw	low __pidataBANK4
  3183  0A28  0084               	movwf	4
  3184  0A29  3088               	movlw	(high __pidataBANK4)| (0+128)
  3185  0A2A  0085               	movwf	5
  3186  0A2B  3058               	movlw	low __pdataBANK4
  3187  0A2C  0086               	movwf	6
  3188  0A2D  3002               	movlw	high __pdataBANK4
  3189  0A2E  0087               	movwf	7
  3190  0A2F  3000               	movlw	0
  3191  0A30  00FF               	movwf	127
  3192  0A31  3018               	movlw	24
  3193  0A32  3188  2089  3189   	fcall	init_ram
  3194                           
  3195                           ; Initialize objects allocated to BANK5
  3196  0A35  3008               	movlw	low __pidataBANK5
  3197  0A36  0084               	movwf	4
  3198  0A37  3089               	movlw	(high __pidataBANK5)| (0+128)
  3199  0A38  0085               	movwf	5
  3200  0A39  30C8               	movlw	low __pdataBANK5
  3201  0A3A  0086               	movwf	6
  3202  0A3B  3002               	movlw	high __pdataBANK5
  3203  0A3C  0087               	movwf	7
  3204  0A3D  3000               	movlw	0
  3205  0A3E  00FF               	movwf	127
  3206  0A3F  3024               	movlw	36
  3207  0A40  3188  2089  3189   	fcall	init_ram
  3208  0A43                     end_of_initialization:	
  3209                           ;End of C runtime variable initialization code
  3210                           
  3211  0A43                     __end_of__initialization:	
  3212  0A43  0020               	movlb	0
  3213  0A44  2A45               	ljmp	_main	;jump to C main() function
  3214  0A45                     __pmaintext:	
  3215                           ; 0 bytes @ 0x4A
  3216 ;;
  3217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3218 ;;
  3219 ;; *************** function _main *****************
  3220 ;; Defined at:
  3221 ;;		line 349 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2  814[COMMON] int 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 17F/0
  3232 ;;		On exit  : 1F/2
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels required when called:    8
  3241 ;; This function calls:
  3242 ;;		_Key_Menu
  3243 ;;		_application_init
  3244 ;;		_driver_init
  3245 ;;		_handle_ad_loop
  3246 ;;		_handle_task_process
  3247 ;;		_handle_uart_rx_buf
  3248 ;;		_middle_init
  3249 ;; This function is called by:
  3250 ;;		Startup code after reset
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _main
  3256  0A45                     _main:	
  3257                           
  3258                           ;main.c: 351: driver_init();
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _main: [allreg]
  3262  0A45  242A  3189         	fcall	_driver_init
  3263                           
  3264                           ;main.c: 352: middle_init();
  3265  0A47  24AF  3189         	fcall	_middle_init
  3266                           
  3267                           ;main.c: 353: application_init();
  3268  0A49  23E5  3189         	fcall	_application_init
  3269  0A4B                     l815:	
  3270                           ;main.c: 356: while(1)
  3271                           
  3272  0A4B  0064               	clrwdt	;# 
  3273                           
  3274                           ;main.c: 361: if(handle_scan_key_flag==0x01)
  3275  0A4C  0022               	movlb	2	; select bank2
  3276  0A4D  0B32               	decfsz	_handle_scan_key_flag^(0+256),w
  3277  0A4E  2A59               	goto	l17138
  3278                           
  3279                           ;main.c: 362: {
  3280                           ;main.c: 365: if(RC1)
  3281  0A4F  0020               	movlb	0	; select bank0
  3282  0A50  1C8E               	btfss	14,1	;volatile
  3283  0A51  2A57               	goto	l817
  3284                           
  3285                           ;main.c: 366: {
  3286                           ;main.c: 368: have_person1_time_count=0x00;
  3287  0A52  0022               	movlb	2	; select bank2
  3288  0A53  01B4               	clrf	_have_person1_time_count^(0+256)
  3289                           
  3290                           ;main.c: 370: have_person1_flag=0x01;
  3291  0A54  0021               	movlb	1	; select bank1
  3292  0A55  01B6               	clrf	_have_person1_flag^(0+128)
  3293  0A56  0AB6               	incf	_have_person1_flag^(0+128),f
  3294  0A57                     l817:	
  3295                           
  3296                           ;main.c: 371: }
  3297                           ;main.c: 373: handle_scan_key_flag=0x00;
  3298  0A57  0022               	movlb	2	; select bank2
  3299  0A58  01B2               	clrf	_handle_scan_key_flag^(0+256)
  3300  0A59                     l17138:	
  3301                           
  3302                           ;main.c: 374: }
  3303                           ;main.c: 376: if(ird_receive_flag==0x01)
  3304  0A59  0B35               	decfsz	_ird_receive_flag^(0+256),w
  3305  0A5A  2A79               	goto	l17154
  3306                           
  3307                           ;main.c: 377: {
  3308                           ;main.c: 378: Key_Menu(ird_data);
  3309  0A5B  0024               	movlb	4	; select bank4
  3310  0A5C  086F               	movf	(_ird_data+3)^(0+512),w
  3311  0A5D  0020               	movlb	0	; select bank0
  3312  0A5E  00E9               	movwf	Key_Menu@key_value+3
  3313  0A5F  0024               	movlb	4	; select bank4
  3314  0A60  086E               	movf	(_ird_data+2)^(0+512),w
  3315  0A61  0020               	movlb	0	; select bank0
  3316  0A62  00E8               	movwf	Key_Menu@key_value+2
  3317  0A63  0024               	movlb	4	; select bank4
  3318  0A64  086D               	movf	(_ird_data+1)^(0+512),w
  3319  0A65  0020               	movlb	0	; select bank0
  3320  0A66  00E7               	movwf	Key_Menu@key_value+1
  3321  0A67  0024               	movlb	4	; select bank4
  3322  0A68  086C               	movf	_ird_data^(0+512),w
  3323  0A69  0020               	movlb	0	; select bank0
  3324  0A6A  00E6               	movwf	Key_Menu@key_value
  3325  0A6B  22A4               	fcall	_Key_Menu
  3326                           
  3327                           ;main.c: 380: receive_bit_count=0x00;
  3328  0A6C  0022               	movlb	2	; select bank2
  3329  0A6D  01C4               	clrf	_receive_bit_count^(0+256)
  3330                           
  3331                           ;main.c: 382: ird_status=0x00;
  3332  0A6E  01B7               	clrf	_ird_status^(0+256)
  3333                           
  3334                           ;main.c: 384: ird_data=0x00;
  3335  0A6F  0024               	movlb	4	; select bank4
  3336  0A70  01EC               	clrf	_ird_data^(0+512)
  3337  0A71  01ED               	clrf	(_ird_data+1)^(0+512)
  3338  0A72  01EE               	clrf	(_ird_data+2)^(0+512)
  3339  0A73  01EF               	clrf	(_ird_data+3)^(0+512)
  3340                           
  3341                           ;main.c: 386: TMR0=0;
  3342  0A74  0020               	movlb	0	; select bank0
  3343  0A75  0195               	clrf	21	;volatile
  3344                           
  3345                           ;main.c: 388: TMR0IF = 0;
  3346  0A76  110B               	bcf	11,2	;volatile
  3347                           
  3348                           ;main.c: 390: ird_receive_flag=0x00;
  3349  0A77  0022               	movlb	2	; select bank2
  3350  0A78  01B5               	clrf	_ird_receive_flag^(0+256)
  3351  0A79                     l17154:	
  3352                           
  3353                           ;main.c: 392: }
  3354                           ;main.c: 394: handle_ad_loop();
  3355  0A79  31AC  246B  3189   	fcall	_handle_ad_loop
  3356                           
  3357                           ;main.c: 396: handle_task_process();
  3358  0A7C  31A5  2516  3189   	fcall	_handle_task_process
  3359                           
  3360                           ;main.c: 398: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3361  0A7F  0023               	movlb	3	; select bank3
  3362  0A80  191D               	btfsc	29,2	;volatile
  3363  0A81  2A84               	goto	l821
  3364  0A82  1C9D               	btfss	29,1	;volatile
  3365  0A83  2A8C               	goto	l17162
  3366  0A84                     l821:	
  3367                           
  3368                           ;main.c: 399: {
  3369                           ;main.c: 400: RCSTAbits.CREN = 0x00;
  3370  0A84  121D               	bcf	29,4	;volatile
  3371                           
  3372                           ;main.c: 401: RCSTAbits.SPEN = 0x00;
  3373  0A85  139D               	bcf	29,7	;volatile
  3374                           
  3375                           ;main.c: 402: __nop();
  3376  0A86  0000               	nop
  3377                           
  3378                           ;main.c: 403: __nop();
  3379  0A87  0000               	nop
  3380                           
  3381                           ;main.c: 404: __nop();
  3382  0A88  0000               	nop
  3383                           
  3384                           ;main.c: 405: RCSTAbits.CREN = 0x01;
  3385  0A89  0023               	movlb	3	; select bank3
  3386  0A8A  161D               	bsf	29,4	;volatile
  3387                           
  3388                           ;main.c: 406: RCSTAbits.SPEN = 0x01;
  3389  0A8B  179D               	bsf	29,7	;volatile
  3390  0A8C                     l17162:	
  3391                           
  3392                           ;main.c: 407: }
  3393                           ;main.c: 409: if(uart1_receive_flag==TRUE)
  3394  0A8C  0022               	movlb	2	; select bank2
  3395  0A8D  0B4C               	decfsz	_uart1_receive_flag^(0+256),w
  3396  0A8E  2A4B               	goto	l815
  3397                           
  3398                           ;main.c: 410: {
  3399                           ;main.c: 411: handle_uart_rx_buf();
  3400  0A8F  31A9  2114  3189   	fcall	_handle_uart_rx_buf
  3401                           
  3402                           ;main.c: 413: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3403  0A92  0023               	movlb	3	; select bank3
  3404  0A93  191D               	btfsc	29,2	;volatile
  3405  0A94  2A97               	goto	l825
  3406  0A95  1C9D               	btfss	29,1	;volatile
  3407  0A96  2A9F               	goto	l17170
  3408  0A97                     l825:	
  3409                           
  3410                           ;main.c: 414: {
  3411                           ;main.c: 415: RCSTAbits.CREN = 0x00;
  3412  0A97  121D               	bcf	29,4	;volatile
  3413                           
  3414                           ;main.c: 416: RCSTAbits.SPEN = 0x00;
  3415  0A98  139D               	bcf	29,7	;volatile
  3416                           
  3417                           ;main.c: 417: __nop();
  3418  0A99  0000               	nop
  3419                           
  3420                           ;main.c: 418: __nop();
  3421  0A9A  0000               	nop
  3422                           
  3423                           ;main.c: 419: __nop();
  3424  0A9B  0000               	nop
  3425                           
  3426                           ;main.c: 420: RCSTAbits.CREN = 0x01;
  3427  0A9C  0023               	movlb	3	; select bank3
  3428  0A9D  161D               	bsf	29,4	;volatile
  3429                           
  3430                           ;main.c: 421: RCSTAbits.SPEN = 0x01;
  3431  0A9E  179D               	bsf	29,7	;volatile
  3432  0A9F                     l17170:	
  3433                           
  3434                           ;main.c: 422: }
  3435                           ;main.c: 424: uart1_receive_byte_count=0x00;
  3436  0A9F  0021               	movlb	1	; select bank1
  3437  0AA0  01BB               	clrf	_uart1_receive_byte_count^(0+128)
  3438                           
  3439                           ;main.c: 426: uart1_receive_flag=FALSE;
  3440  0AA1  0022               	movlb	2	; select bank2
  3441  0AA2  01CC               	clrf	_uart1_receive_flag^(0+256)
  3442  0AA3  2A4B               	goto	l815
  3443  0AA4                     __end_of_main:	
  3444  0AA4                     __ptext36:	
  3445 ;; *************** function _Key_Menu *****************
  3446 ;; Defined at:
  3447 ;;		line 568 in file "D:\MCUProject\ZH-SL-F60\src\ird_remote.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  key_value       4   70[BANK0 ] unsigned long 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  remote_mac      2    0        unsigned int 
  3452 ;;  code            1    2[BANK1 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 1F/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3463 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;Total ram usage:        7 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    3
  3469 ;; This function calls:
  3470 ;;		_Disable_Bost_Pwm
  3471 ;;		_Disable_Buck_Pwm
  3472 ;;		_Enable_Bost_Pwm
  3473 ;;		_Set_Bost_Pwm_Duty
  3474 ;;		_Set_Buck_Pwm_Duty
  3475 ;;		_delay_ms
  3476 ;;		_eeprom_write
  3477 ;; This function is called by:
  3478 ;;		_main
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           
  3483                           ;psect for function _Key_Menu
  3484  0AA4                     _Key_Menu:	
  3485                           
  3486                           ;ird_remote.c: 570: unsigned char code;
  3487                           ;ird_remote.c: 572: unsigned int remote_mac;
  3488                           ;ird_remote.c: 574: code=(unsigned char)(key_value>>8);
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _Key_Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3492  0AA4  0867               	movf	Key_Menu@key_value+1,w
  3493  0AA5  0021               	movlb	1	; select bank1
  3494  0AA6  00C2               	movwf	Key_Menu@code^(0+128)
  3495  0AA7  2B55               	goto	l17062
  3496  0AA8                     l531:	
  3497                           ;ird_remote.c: 587: {
  3498                           ;ird_remote.c: 588: case 0x00:
  3499                           
  3500                           
  3501                           ;ird_remote.c: 589: __nop();
  3502  0AA8  0000               	nop
  3503                           
  3504                           ;ird_remote.c: 590: break;
  3505  0AA9  0008               	return
  3506  0AAA                     l16822:	
  3507                           
  3508                           ;ird_remote.c: 592: if(device_status==0x01)
  3509  0AAA  0B34               	decfsz	_device_status^(0+128),w
  3510  0AAB  0008               	return
  3511                           
  3512                           ;ird_remote.c: 593: {
  3513                           ;ird_remote.c: 594: light_mode =0x00;
  3514  0AAC  01B8               	clrf	_light_mode^(0+128)
  3515  0AAD                     L90:	
  3516                           
  3517                           ;ird_remote.c: 595: eeprom_write(0x36,(unsigned char)(light_mode));
  3518  0AAD  0838               	movf	_light_mode^(0+128),w
  3519  0AAE  0020               	movlb	0	; select bank0
  3520  0AAF  00E4               	movwf	eeprom_write@value
  3521  0AB0  3036               	movlw	54
  3522  0AB1  31A7  2775  3189   	fcall	_eeprom_write
  3523                           
  3524                           ;ird_remote.c: 596: led_out_ctrl=0x00;
  3525  0AB4  0021               	movlb	1	; select bank1
  3526  0AB5  01B7               	clrf	_led_out_ctrl^(0+128)
  3527                           
  3528                           ;ird_remote.c: 597: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3529  0AB6  27BB               	fcall	PL242	;call to abstracted procedure
  3530  0AB7  31A7  2775  3189   	fcall	_eeprom_write
  3531                           
  3532                           ;ird_remote.c: 600: lr_cnt = 0x00;
  3533  0ABA  0021               	movlb	1	; select bank1
  3534  0ABB                     L92:	
  3535  0ABB  01BD               	clrf	_work_mode^(0+128)
  3536                           
  3537                           ;ird_remote.c: 602: nop_index=0x00;
  3538                           
  3539                           ;ird_remote.c: 603: discharge_index=0x00;
  3540                           
  3541                           ;ird_remote.c: 604: charge_index=0x00;
  3542  0ABC  27B5               	fcall	PL220	;call to abstracted procedure
  3543                           
  3544                           ;ird_remote.c: 606: Disable_Buck_Pwm();
  3545  0ABD  31A7  276F  3189   	fcall	_Disable_Buck_Pwm
  3546                           
  3547                           ;ird_remote.c: 607: Set_Buck_Pwm_Duty(0);
  3548  0AC0  0020               	movlb	0	; select bank0
  3549  0AC1  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  3550  0AC2  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  3551  0AC3  23BA  3189         	fcall	_Set_Buck_Pwm_Duty
  3552                           
  3553                           ;ird_remote.c: 608: Disable_Bost_Pwm();
  3554  0AC5  23B5  3189         	fcall	_Disable_Bost_Pwm
  3555                           
  3556                           ;ird_remote.c: 609: (LATCbits.LATC3 = 0x00);
  3557                           
  3558                           ;ird_remote.c: 610: Set_Bost_Pwm_Duty(0);
  3559  0AC7  279B  3189         	fcall	PL164	;call to abstracted procedure
  3560  0AC9  2367               	fcall	_Set_Bost_Pwm_Duty
  3561                           
  3562                           ;ird_remote.c: 613: (LATCbits.LATC3 = 0x01);
  3563  0ACA  0022               	movlb	2	; select bank2
  3564  0ACB  158E               	bsf	14,3	;volatile
  3565                           
  3566                           ;ird_remote.c: 615: Enable_Bost_Pwm();
  3567  0ACC  31A7  2792  3189   	fcall	_Enable_Bost_Pwm
  3568                           
  3569                           ;ird_remote.c: 617: Set_Bost_Pwm_Duty(25);
  3570  0ACF  3019               	movlw	25
  3571  0AD0  0020               	movlb	0	; select bank0
  3572  0AD1  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  3573  0AD2  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3574  0AD3  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3575                           
  3576                           ;ird_remote.c: 619: delay_ms(1000);
  3577  0AD5  30E8               	movlw	232
  3578  0AD6  0020               	movlb	0	; select bank0
  3579  0AD7  00A3               	movwf	delay_ms@count
  3580  0AD8  3003               	movlw	3
  3581  0AD9                     L91:	
  3582  0AD9  00A4               	movwf	delay_ms@count+1
  3583  0ADA  2392  3189         	fcall	_delay_ms
  3584                           
  3585                           ;ird_remote.c: 621: Set_Bost_Pwm_Duty(0);
  3586  0ADC  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3587  0ADD  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3588  0ADE  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3589                           
  3590                           ;ird_remote.c: 623: Disable_Bost_Pwm();
  3591  0AE0  23B5  3189         	fcall	_Disable_Bost_Pwm
  3592                           
  3593                           ;ird_remote.c: 624: (LATCbits.LATC3 = 0x00);
  3594                           
  3595                           ;ird_remote.c: 625: Set_Bost_Pwm_Duty(0);
  3596  0AE2  279B  3189         	fcall	PL164	;call to abstracted procedure
  3597  0AE4  2367               	fcall	_Set_Bost_Pwm_Duty
  3598                           
  3599                           ;ird_remote.c: 627: pv_voltage_status=0x00;
  3600  0AE5  0022               	movlb	2	; select bank2
  3601  0AE6  01C3               	clrf	_pv_voltage_status^(0+256)
  3602                           
  3603                           ;ird_remote.c: 629: day_time_count=0x00;
  3604                           
  3605                           ;ird_remote.c: 631: night_time_count=0x00;
  3606  0AE7  3186  26DF         	fcall	PL54	;call to abstracted procedure
  3607                           
  3608                           ;ird_remote.c: 633: pv_time_count=0x00;
  3609  0AE9  0025               	movlb	5	; select bank5
  3610  0AEA  01A8               	clrf	_pv_time_count^(0+640)
  3611  0AEB  01A9               	clrf	(_pv_time_count+1)^(0+640)
  3612  0AEC  01AA               	clrf	(_pv_time_count+2)^(0+640)
  3613  0AED  01AB               	clrf	(_pv_time_count+3)^(0+640)
  3614  0AEE  0008               	return
  3615  0AEF                     l16864:	
  3616                           
  3617                           ;ird_remote.c: 637: if(device_status==0x01)
  3618  0AEF  0B34               	decfsz	_device_status^(0+128),w
  3619  0AF0  0008               	return
  3620                           
  3621                           ;ird_remote.c: 638: {
  3622                           ;ird_remote.c: 639: light_mode =0x01;
  3623  0AF1  01B8               	clrf	_light_mode^(0+128)
  3624  0AF2  0AB8               	incf	_light_mode^(0+128),f
  3625  0AF3  2AAD               	goto	L90
  3626  0AF4                     l16906:	
  3627                           ;ird_remote.c: 672: pv_voltage_status=0x00;
  3628                           
  3629                           ;ird_remote.c: 670: Set_Bost_Pwm_Duty(0);
  3630                           
  3631                           ;ird_remote.c: 669: (LATCbits.LATC3 = 0x00);
  3632                           
  3633                           ;ird_remote.c: 668: Disable_Bost_Pwm();
  3634                           
  3635                           ;ird_remote.c: 666: Set_Bost_Pwm_Duty(0);
  3636                           
  3637                           ;ird_remote.c: 664: delay_ms(1000);
  3638                           
  3639                           ;ird_remote.c: 662: Set_Bost_Pwm_Duty(25);
  3640                           
  3641                           ;ird_remote.c: 660: Enable_Bost_Pwm();
  3642                           
  3643                           ;ird_remote.c: 658: (LATCbits.LATC3 = 0x01);
  3644                           
  3645                           ;ird_remote.c: 655: Set_Bost_Pwm_Duty(0);
  3646                           
  3647                           ;ird_remote.c: 654: (LATCbits.LATC3 = 0x00);
  3648                           
  3649                           ;ird_remote.c: 653: Disable_Bost_Pwm();
  3650                           
  3651                           ;ird_remote.c: 652: Set_Buck_Pwm_Duty(0);
  3652                           
  3653                           ;ird_remote.c: 651: Disable_Buck_Pwm();
  3654                           
  3655                           ;ird_remote.c: 649: charge_index=0x00;
  3656                           
  3657                           ;ird_remote.c: 648: discharge_index=0x00;
  3658                           
  3659                           ;ird_remote.c: 647: nop_index=0x00;
  3660                           
  3661                           ;ird_remote.c: 645: lr_cnt = 0x00;
  3662                           
  3663                           ;ird_remote.c: 642: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3664                           
  3665                           ;ird_remote.c: 641: led_out_ctrl=0x00;
  3666                           
  3667                           ;ird_remote.c: 640: eeprom_write(0x36,(unsigned char)(light_mode));
  3668                           
  3669                           
  3670                           ;ird_remote.c: 682: if(device_status==0x01)
  3671  0AF4  0B34               	decfsz	_device_status^(0+128),w
  3672  0AF5  0008               	return
  3673                           
  3674                           ;ird_remote.c: 683: {
  3675                           ;ird_remote.c: 684: light_mode =0x02;
  3676  0AF6  3002               	movlw	2
  3677  0AF7  00B8               	movwf	_light_mode^(0+128)
  3678  0AF8  2AAD               	goto	L90
  3679  0AF9                     l16958:	
  3680                           ;ird_remote.c: 711: Set_Bost_Pwm_Duty(0);
  3681                           
  3682                           ;ird_remote.c: 709: delay_ms(1000);
  3683                           
  3684                           ;ird_remote.c: 707: Set_Bost_Pwm_Duty(25);
  3685                           
  3686                           ;ird_remote.c: 705: Enable_Bost_Pwm();
  3687                           
  3688                           ;ird_remote.c: 703: (LATCbits.LATC3 = 0x01);
  3689                           
  3690                           ;ird_remote.c: 700: Set_Bost_Pwm_Duty(0);
  3691                           
  3692                           ;ird_remote.c: 699: (LATCbits.LATC3 = 0x00);
  3693                           
  3694                           ;ird_remote.c: 698: Disable_Bost_Pwm();
  3695                           
  3696                           ;ird_remote.c: 697: Set_Buck_Pwm_Duty(0);
  3697                           
  3698                           ;ird_remote.c: 696: Disable_Buck_Pwm();
  3699                           
  3700                           ;ird_remote.c: 694: charge_index=0x00;
  3701                           
  3702                           ;ird_remote.c: 693: discharge_index=0x00;
  3703                           
  3704                           ;ird_remote.c: 692: nop_index=0x00;
  3705                           
  3706                           ;ird_remote.c: 690: lr_cnt = 0x00;
  3707                           
  3708                           ;ird_remote.c: 687: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3709                           
  3710                           ;ird_remote.c: 686: led_out_ctrl=0x00;
  3711                           
  3712                           ;ird_remote.c: 685: eeprom_write(0x36,(unsigned char)(light_mode));
  3713                           
  3714                           
  3715                           ;ird_remote.c: 727: if(device_status==0x01)
  3716  0AF9  0B34               	decfsz	_device_status^(0+128),w
  3717  0AFA  2B02               	goto	l16966
  3718  0AFB  3001               	movlw	1
  3719                           
  3720                           ;ird_remote.c: 728: {
  3721                           ;ird_remote.c: 729: led_out_ctrl=led_out_ctrl+1;
  3722  0AFC  0AB7               	incf	_led_out_ctrl^(0+128),f
  3723                           
  3724                           ;ird_remote.c: 731: led_out_ctrl=led_out_ctrl%2;
  3725  0AFD  05B7               	andwf	_led_out_ctrl^(0+128),f
  3726                           
  3727                           ;ird_remote.c: 733: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3728  0AFE  27BB               	fcall	PL242	;call to abstracted procedure
  3729  0AFF  31A7  2775  3189   	fcall	_eeprom_write
  3730  0B02                     l16966:	
  3731                           
  3732                           ;ird_remote.c: 734: }
  3733                           ;ird_remote.c: 735: if(led_out_ctrl==0x00 && device_status==0x01)
  3734  0B02  0021               	movlb	1	; select bank1
  3735  0B03  08B7               	movf	_led_out_ctrl^(0+128),f
  3736  0B04  1D03               	skipz
  3737  0B05  2B09               	goto	l17004
  3738  0B06  0B34               	decfsz	_device_status^(0+128),w
  3739  0B07  2B09               	goto	l17004
  3740  0B08  2ABB               	goto	L92
  3741  0B09                     l17004:	
  3742                           ;ird_remote.c: 743: charge_index=0x00;
  3743                           
  3744                           ;ird_remote.c: 742: discharge_index=0x00;
  3745                           
  3746                           ;ird_remote.c: 741: nop_index=0x00;
  3747                           
  3748                           ;ird_remote.c: 739: lr_cnt = 0x00;
  3749                           
  3750                           
  3751                           ;ird_remote.c: 774: else if(led_out_ctrl==0x01 && device_status==0x01)
  3752  0B09  0B37               	decfsz	_led_out_ctrl^(0+128),w
  3753  0B0A  0008               	return
  3754  0B0B  0B34               	decfsz	_device_status^(0+128),w
  3755  0B0C  0008               	return
  3756                           
  3757                           ;ird_remote.c: 778: lr_cnt = 0x00;
  3758  0B0D  01BD               	clrf	_work_mode^(0+128)
  3759                           
  3760                           ;ird_remote.c: 780: nop_index=0x00;
  3761                           
  3762                           ;ird_remote.c: 781: discharge_index=0x00;
  3763                           
  3764                           ;ird_remote.c: 782: charge_index=0x00;
  3765  0B0E  27B5               	fcall	PL220	;call to abstracted procedure
  3766                           
  3767                           ;ird_remote.c: 784: Disable_Buck_Pwm();
  3768  0B0F  31A7  276F  3189   	fcall	_Disable_Buck_Pwm
  3769                           
  3770                           ;ird_remote.c: 785: Set_Buck_Pwm_Duty(0);
  3771  0B12  0020               	movlb	0	; select bank0
  3772  0B13  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  3773  0B14  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  3774  0B15  23BA  3189         	fcall	_Set_Buck_Pwm_Duty
  3775                           
  3776                           ;ird_remote.c: 787: Disable_Bost_Pwm();
  3777  0B17  23B5  3189         	fcall	_Disable_Bost_Pwm
  3778                           
  3779                           ;ird_remote.c: 789: Set_Bost_Pwm_Duty(0);
  3780  0B19  0020               	movlb	0	; select bank0
  3781  0B1A  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3782  0B1B  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3783  0B1C  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3784                           
  3785                           ;ird_remote.c: 791: delay_ms(200);
  3786  0B1E  30C8               	movlw	200
  3787  0B1F  0020               	movlb	0	; select bank0
  3788  0B20  00A3               	movwf	delay_ms@count
  3789  0B21  01A4               	clrf	delay_ms@count+1
  3790  0B22  2392               	fcall	_delay_ms
  3791                           
  3792                           ;ird_remote.c: 792: (LATCbits.LATC3 = 0x01);
  3793  0B23  0022               	movlb	2	; select bank2
  3794  0B24  158E               	bsf	14,3	;volatile
  3795                           
  3796                           ;ird_remote.c: 793: Enable_Bost_Pwm();
  3797  0B25  31A7  2792  3189   	fcall	_Enable_Bost_Pwm
  3798                           
  3799                           ;ird_remote.c: 795: Set_Bost_Pwm_Duty(35);
  3800  0B28  3023               	movlw	35
  3801  0B29  0020               	movlb	0	; select bank0
  3802  0B2A  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  3803  0B2B  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3804  0B2C  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3805                           
  3806                           ;ird_remote.c: 797: delay_ms(500);
  3807  0B2E  27A7  3189         	fcall	PL204	;call to abstracted procedure
  3808  0B30  2392  3189         	fcall	_delay_ms
  3809                           
  3810                           ;ird_remote.c: 799: Set_Bost_Pwm_Duty(0);
  3811  0B32  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3812  0B33  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3813  0B34  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3814                           
  3815                           ;ird_remote.c: 801: delay_ms(500);
  3816  0B36  27A7  3189         	fcall	PL204	;call to abstracted procedure
  3817  0B38  2392  3189         	fcall	_delay_ms
  3818                           
  3819                           ;ird_remote.c: 803: Set_Bost_Pwm_Duty(35);
  3820  0B3A  3023               	movlw	35
  3821  0B3B  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  3822  0B3C  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3823  0B3D  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3824                           
  3825                           ;ird_remote.c: 805: delay_ms(500);
  3826  0B3F  27A7  3189         	fcall	PL204	;call to abstracted procedure
  3827  0B41  2392  3189         	fcall	_delay_ms
  3828                           
  3829                           ;ird_remote.c: 807: Set_Bost_Pwm_Duty(0);
  3830  0B43  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3831  0B44  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3832  0B45  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3833                           
  3834                           ;ird_remote.c: 809: delay_ms(500);
  3835  0B47  27A7  3189         	fcall	PL204	;call to abstracted procedure
  3836  0B49  2392  3189         	fcall	_delay_ms
  3837                           
  3838                           ;ird_remote.c: 811: Set_Bost_Pwm_Duty(35);
  3839  0B4B  3023               	movlw	35
  3840  0B4C  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  3841  0B4D  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3842  0B4E  2367  3189         	fcall	_Set_Bost_Pwm_Duty
  3843                           
  3844                           ;ird_remote.c: 813: delay_ms(500);
  3845  0B50  30F4               	movlw	244
  3846  0B51  0020               	movlb	0	; select bank0
  3847  0B52  00A3               	movwf	delay_ms@count
  3848  0B53  3001               	movlw	1
  3849  0B54  2AD9               	goto	L91
  3850  0B55                     l17062:	
  3851  0B55  0842               	movf	Key_Menu@code^(0+128),w
  3852                           
  3853                           ; Switch size 1, requested type "space"
  3854                           ; Number of cases is 5, Range of values is 0 to 136
  3855                           ; switch strategies available:
  3856                           ; Name         Instructions Cycles
  3857                           ; simple_byte           16     9 (average)
  3858                           ; jumptable            260     6 (fixed)
  3859                           ;	Chosen strategy is simple_byte
  3860  0B56  3A00               	xorlw	0	; case 0
  3861  0B57  1903               	skipnz
  3862  0B58  2AA8               	goto	l531
  3863  0B59  3A10               	xorlw	16	; case 16
  3864  0B5A  1903               	skipnz
  3865  0B5B  2AEF               	goto	l16864
  3866  0B5C  3A50               	xorlw	80	; case 64
  3867  0B5D  1903               	skipnz
  3868  0B5E  2AAA               	goto	l16822
  3869  0B5F  3A10               	xorlw	16	; case 80
  3870  0B60  1903               	skipnz
  3871  0B61  2AF4               	goto	l16906
  3872  0B62  3AD8               	xorlw	216	; case 136
  3873  0B63  1903               	skipnz
  3874  0B64  2AF9               	goto	l16958
  3875  0B65  2B66               	goto	l545
  3876  0B66                     l545:	
  3877  0B66  0008               	return
  3878  0B67                     __end_of_Key_Menu:	
  3879  0B67                     __ptext40:	
  3880 ;; *************** function _Set_Bost_Pwm_Duty *****************
  3881 ;; Defined at:
  3882 ;;		line 218 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  dduty           2    3[BANK0 ] unsigned int 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  dnt             2    0        unsigned int 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 1F/0
  3893 ;;		On exit  : 1F/6
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3896 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;Total ram usage:        4 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    2
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_Key_Menu
  3907 ;;		_handle_ad_loop
  3908 ;;		_handle_task_process
  3909 ;;		_handle_uart_rx_buf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function _Set_Bost_Pwm_Duty
  3915  0B67                     _Set_Bost_Pwm_Duty:	
  3916                           
  3917                           ;pwm.c: 224: bost_pwm_value=dduty;
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _Set_Bost_Pwm_Duty: [wreg+status,2+status,0]
  3921  0B67  0824               	movf	Set_Bost_Pwm_Duty@dduty+1,w
  3922  0B68  0021               	movlb	1	; select bank1
  3923  0B69  00A5               	movwf	(_bost_pwm_value+1)^(0+128)
  3924  0B6A  0020               	movlb	0	; select bank0
  3925  0B6B  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  3926  0B6C  0021               	movlb	1	; select bank1
  3927  0B6D  00A4               	movwf	_bost_pwm_value^(0+128)
  3928                           
  3929                           ;pwm.c: 226: if(dduty<=900)
  3930  0B6E  3003               	movlw	3
  3931  0B6F  0020               	movlb	0	; select bank0
  3932  0B70  0224               	subwf	Set_Bost_Pwm_Duty@dduty+1,w
  3933  0B71  3085               	movlw	133
  3934  0B72  1903               	skipnz
  3935  0B73  0223               	subwf	Set_Bost_Pwm_Duty@dduty,w
  3936  0B74  1803               	skipnc
  3937  0B75  2B8F               	goto	l16582
  3938                           
  3939                           ;pwm.c: 227: {
  3940                           ;pwm.c: 228: CCPR3L=(unsigned char)(dduty>>2);
  3941  0B76  0824               	movf	Set_Bost_Pwm_Duty@dduty+1,w
  3942  0B77  00A6               	movwf	??_Set_Bost_Pwm_Duty+1
  3943  0B78  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  3944  0B79  00A5               	movwf	??_Set_Bost_Pwm_Duty
  3945  0B7A  36A6               	lsrf	??_Set_Bost_Pwm_Duty+1,f
  3946  0B7B  0CA5               	rrf	??_Set_Bost_Pwm_Duty,f
  3947  0B7C  36A6               	lsrf	??_Set_Bost_Pwm_Duty+1,f
  3948  0B7D  0CA5               	rrf	??_Set_Bost_Pwm_Duty,f
  3949  0B7E  0825               	movf	??_Set_Bost_Pwm_Duty,w
  3950  0B7F  0026               	movlb	6	; select bank6
  3951  0B80  0091               	movwf	17	;volatile
  3952                           
  3953                           ;pwm.c: 230: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  3954  0B81  0020               	movlb	0	; select bank0
  3955  0B82  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  3956  0B83  3903               	andlw	3
  3957  0B84  00A5               	movwf	??_Set_Bost_Pwm_Duty
  3958  0B85  0EA5               	swapf	??_Set_Bost_Pwm_Duty,f
  3959  0B86  0026               	movlb	6	; select bank6
  3960  0B87  0813               	movf	19,w	;volatile
  3961  0B88  0020               	movlb	0	; select bank0
  3962  0B89  0625               	xorwf	??_Set_Bost_Pwm_Duty,w
  3963  0B8A  39CF               	andlw	-49
  3964  0B8B  0625               	xorwf	??_Set_Bost_Pwm_Duty,w
  3965  0B8C  0026               	movlb	6	; select bank6
  3966  0B8D  0093               	movwf	19	;volatile
  3967                           
  3968                           ;pwm.c: 232: }
  3969  0B8E  0008               	return
  3970  0B8F                     l16582:	
  3971                           
  3972                           ;pwm.c: 237: CCPR3L=(unsigned char)(dduty>>2);
  3973  0B8F  30E1               	movlw	225
  3974  0B90  0026               	movlb	6	; select bank6
  3975                           
  3976                           ;pwm.c: 239: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  3977  0B91  2FFC               	ljmp	PL252	;call to abstracted procedure
  3978  0B92                     __end_of_Set_Bost_Pwm_Duty:	
  3979  0B92                     __ptext38:	
  3980 ;; *************** function _delay_ms *****************
  3981 ;; Defined at:
  3982 ;;		line 64 in file "D:\MCUProject\ZH-SL-F60\src\delay.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  count           2    3[BANK0 ] unsigned short 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  j               2    7[BANK0 ] unsigned short 
  3987 ;;  i               2    5[BANK0 ] unsigned short 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;		None               void
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 1F/0
  3994 ;;		On exit  : 1F/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;Total ram usage:        6 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_auto_system
  4008 ;;		_Key_Menu
  4009 ;;		_handle_ad_loop
  4010 ;;		_handle_task_process
  4011 ;;		_handle_uart_rx_buf
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function _delay_ms
  4017  0B92                     _delay_ms:	
  4018                           
  4019                           ;delay.c: 66: WORD i, j;
  4020                           ;delay.c: 68: for (i = 0; i < count; i++)
  4021                           
  4022                           ;incstack = 0
  4023                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4024  0B92  01A5               	clrf	delay_ms@i
  4025  0B93  01A6               	clrf	delay_ms@i+1
  4026  0B94                     l16574:	
  4027  0B94  0824               	movf	delay_ms@count+1,w
  4028  0B95  0226               	subwf	delay_ms@i+1,w
  4029  0B96  1D03               	skipz
  4030  0B97  2B9A               	goto	u9535
  4031  0B98  0823               	movf	delay_ms@count,w
  4032  0B99  0225               	subwf	delay_ms@i,w
  4033  0B9A                     u9535:	
  4034  0B9A  1803               	btfsc	3,0
  4035  0B9B  0008               	return
  4036                           
  4037                           ;delay.c: 69: {
  4038                           ;delay.c: 70: for (j = 0; j < 1000; j++)
  4039  0B9C  01A7               	clrf	delay_ms@j
  4040  0B9D  01A8               	clrf	delay_ms@j+1
  4041  0B9E                     l43:	
  4042                           
  4043                           ;delay.c: 71: {
  4044                           ;delay.c: 72: __nop();
  4045  0B9E  0000               	nop
  4046                           
  4047                           ;delay.c: 73: __nop();
  4048  0B9F  0000               	nop
  4049                           
  4050                           ;delay.c: 74: __nop();
  4051  0BA0  0000               	nop
  4052                           
  4053                           ;delay.c: 75: __nop();
  4054  0BA1  0000               	nop
  4055                           
  4056                           ;delay.c: 76: __nop();
  4057  0BA2  0000               	nop
  4058                           
  4059                           ;delay.c: 77: __nop();
  4060  0BA3  0000               	nop
  4061                           
  4062                           ;delay.c: 78: __nop();
  4063  0BA4  0000               	nop
  4064                           
  4065                           ;delay.c: 79: __nop();
  4066  0BA5  0000               	nop
  4067  0BA6  0020               	movlb	0	; select bank0
  4068  0BA7  0AA7               	incf	delay_ms@j,f
  4069  0BA8  1903               	skipnz
  4070  0BA9  0AA8               	incf	delay_ms@j+1,f
  4071  0BAA  3003               	movlw	3
  4072  0BAB  0228               	subwf	delay_ms@j+1,w
  4073  0BAC  30E8               	movlw	232
  4074  0BAD  1903               	skipnz
  4075  0BAE  0227               	subwf	delay_ms@j,w
  4076  0BAF  1C03               	skipc
  4077  0BB0  2B9E               	goto	l43
  4078  0BB1  0AA5               	incf	delay_ms@i,f
  4079  0BB2  1903               	skipnz
  4080  0BB3  0AA6               	incf	delay_ms@i+1,f
  4081  0BB4  2B94               	goto	l16574
  4082  0BB5                     __end_of_delay_ms:	
  4083  0BB5                     __ptext43:	
  4084 ;; *************** function _Disable_Bost_Pwm *****************
  4085 ;; Defined at:
  4086 ;;		line 203 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		None
  4095 ;; Tracked objects:
  4096 ;;		On entry : 18/5
  4097 ;;		On exit  : 1F/8
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_Key_Menu
  4111 ;;		_handle_ad_loop
  4112 ;;		_handle_task_process
  4113 ;;		_handle_uart_rx_buf
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function _Disable_Bost_Pwm
  4119  0BB5                     _Disable_Bost_Pwm:	
  4120                           
  4121                           ;pwm.c: 205: TRISBbits.TRISB5 =1;
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _Disable_Bost_Pwm: []
  4125  0BB5  0021               	movlb	1	; select bank1
  4126  0BB6  168D               	bsf	13,5	;volatile
  4127                           
  4128                           ;pwm.c: 207: TMR4ON=0;
  4129  0BB7  0028               	movlb	8	; select bank8
  4130  0BB8  1117               	bcf	23,2	;volatile
  4131  0BB9  0008               	return
  4132  0BBA                     __end_of_Disable_Bost_Pwm:	
  4133  0BBA                     __ptext39:	
  4134 ;; *************** function _Set_Buck_Pwm_Duty *****************
  4135 ;; Defined at:
  4136 ;;		line 157 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  duty            2    3[BANK0 ] unsigned int 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;		None               void
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 1F/0
  4147 ;;		On exit  : 1F/5
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;Total ram usage:        4 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    2
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_Key_Menu
  4161 ;;		_handle_ad_loop
  4162 ;;		_handle_task_process
  4163 ;;		_Mppt_Charge
  4164 ;;		_handle_uart_rx_buf
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _Set_Buck_Pwm_Duty
  4170  0BBA                     _Set_Buck_Pwm_Duty:	
  4171  0BBA                     l17066:	
  4172                           ;incstack = 0
  4173                           ; Regs used in _Set_Buck_Pwm_Duty: [wreg+status,2+status,0]
  4174                           
  4175                           
  4176                           ;pwm.c: 159: buck_pwm_value=duty;
  4177  0BBA  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
  4178  0BBB  0021               	movlb	1	; select bank1
  4179  0BBC  00A7               	movwf	(_buck_pwm_value+1)^(0+128)
  4180  0BBD  0020               	movlb	0	; select bank0
  4181  0BBE  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  4182  0BBF  0021               	movlb	1	; select bank1
  4183  0BC0  00A6               	movwf	_buck_pwm_value^(0+128)
  4184                           
  4185                           ;pwm.c: 161: if(duty<=900)
  4186  0BC1  3003               	movlw	3
  4187  0BC2  0020               	movlb	0	; select bank0
  4188  0BC3  0224               	subwf	Set_Buck_Pwm_Duty@duty+1,w
  4189  0BC4  3085               	movlw	133
  4190  0BC5  1903               	skipnz
  4191  0BC6  0223               	subwf	Set_Buck_Pwm_Duty@duty,w
  4192  0BC7  1803               	skipnc
  4193  0BC8  2BE2               	goto	l17072
  4194                           
  4195                           ;pwm.c: 162: {
  4196                           ;pwm.c: 163: CCPR1L=(unsigned char)(duty>>2);
  4197  0BC9  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
  4198  0BCA  00A6               	movwf	??_Set_Buck_Pwm_Duty+1
  4199  0BCB  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  4200  0BCC  00A5               	movwf	??_Set_Buck_Pwm_Duty
  4201  0BCD  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
  4202  0BCE  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
  4203  0BCF  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
  4204  0BD0  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
  4205  0BD1  0825               	movf	??_Set_Buck_Pwm_Duty,w
  4206  0BD2  0025               	movlb	5	; select bank5
  4207  0BD3  0091               	movwf	17	;volatile
  4208                           
  4209                           ;pwm.c: 165: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
  4210  0BD4  0020               	movlb	0	; select bank0
  4211  0BD5  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  4212  0BD6  3903               	andlw	3
  4213  0BD7  00A5               	movwf	??_Set_Buck_Pwm_Duty
  4214  0BD8  0EA5               	swapf	??_Set_Buck_Pwm_Duty,f
  4215  0BD9  0025               	movlb	5	; select bank5
  4216  0BDA  0813               	movf	19,w	;volatile
  4217  0BDB  0020               	movlb	0	; select bank0
  4218  0BDC  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
  4219  0BDD  39CF               	andlw	-49
  4220  0BDE  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
  4221  0BDF  0025               	movlb	5	; select bank5
  4222  0BE0  0093               	movwf	19	;volatile
  4223                           
  4224                           ;pwm.c: 168: }
  4225  0BE1  0008               	return
  4226  0BE2                     l17072:	
  4227                           
  4228                           ;pwm.c: 173: CCPR1L=(unsigned char)(duty>>2);
  4229  0BE2  30E1               	movlw	225
  4230  0BE3  0025               	movlb	5	; select bank5
  4231                           
  4232                           ;pwm.c: 175: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
  4233  0BE4  2FFC               	ljmp	PL252	;call to abstracted procedure
  4234  0BE5                     __end_of_Set_Buck_Pwm_Duty:	
  4235  0BE5                     __ptext33:	
  4236 ;; *************** function _application_init *****************
  4237 ;; Defined at:
  4238 ;;		line 266 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/2
  4249 ;;		On exit  : 1F/3
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		___fladd
  4261 ;;		___fldiv
  4262 ;;		___flmul
  4263 ;;		_pid_init
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _application_init
  4271  0BE5                     _application_init:	
  4272                           
  4273                           ;main.c: 269: TMR1ON =1;
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _application_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4277  0BE5  0020               	movlb	0	; select bank0
  4278  0BE6  1418               	bsf	24,0	;volatile
  4279                           
  4280                           ;main.c: 271: system_check_time=0x01;
  4281  0BE7  0022               	movlb	2	; select bank2
  4282  0BE8  3020               	movlw	low _PID_CC_charge
  4283  0BE9  01C7               	clrf	_system_check_time^(0+256)
  4284  0BEA  0AC7               	incf	_system_check_time^(0+256),f
  4285                           
  4286                           ;main.c: 273: open_an0_time=0x01;
  4287  0BEB  01B8               	clrf	_open_an0_time^(0+256)
  4288  0BEC  0AB8               	incf	_open_an0_time^(0+256),f
  4289                           
  4290                           ;main.c: 275: open_an1_time=0x01;
  4291  0BED  01BA               	clrf	_open_an1_time^(0+256)
  4292  0BEE  0ABA               	incf	_open_an1_time^(0+256),f
  4293                           
  4294                           ;main.c: 277: open_an2_time=0x01;
  4295  0BEF  01BB               	clrf	_open_an2_time^(0+256)
  4296  0BF0  0ABB               	incf	_open_an2_time^(0+256),f
  4297                           
  4298                           ;main.c: 279: open_an3_time=0x01;
  4299  0BF1  01BC               	clrf	_open_an3_time^(0+256)
  4300  0BF2  0ABC               	incf	_open_an3_time^(0+256),f
  4301                           
  4302                           ;main.c: 281: open_an4_time=0x01;
  4303  0BF3  01BD               	clrf	_open_an4_time^(0+256)
  4304  0BF4  0ABD               	incf	_open_an4_time^(0+256),f
  4305                           
  4306                           ;main.c: 283: open_an9_time=0x01;
  4307  0BF5  01BE               	clrf	_open_an9_time^(0+256)
  4308  0BF6  0ABE               	incf	_open_an9_time^(0+256),f
  4309                           
  4310                           ;main.c: 285: open_an10_time=0x01;
  4311  0BF7  01B9               	clrf	_open_an10_time^(0+256)
  4312  0BF8  0AB9               	incf	_open_an10_time^(0+256),f
  4313                           
  4314                           ;main.c: 289: pid_init ( &PID_CC_charge);
  4315  0BF9  27D0               	fcall	PL258	;call to abstracted procedure
  4316  0BFA  31A6  26DB  3189   	fcall	_pid_init
  4317                           
  4318                           ;main.c: 291: pid_init ( &PID_CV_charge);
  4319  0BFD  27CB               	fcall	PL254	;call to abstracted procedure
  4320  0BFE  31A6  26DB  3189   	fcall	_pid_init
  4321                           
  4322                           ;main.c: 293: pid_init ( &PID_CC_discharge);
  4323  0C01  30C7               	movlw	low _PID_CC_discharge
  4324  0C02  00AB               	movwf	pid_init@pp
  4325  0C03  3001               	movlw	high _PID_CC_discharge
  4326  0C04  00AC               	movwf	pid_init@pp+1
  4327  0C05  31A6  26DB  3189   	fcall	_pid_init
  4328                           
  4329                           ;main.c: 298: PID_CC_charge.Proportion = 0.001;
  4330                           
  4331                           ;main.c: 300: PID_CC_charge.Integral = 0;
  4332                           
  4333                           ;main.c: 302: PID_CC_charge.Derivative = 0;
  4334                           
  4335                           ;main.c: 304: PID_CC_charge.SetPoint = 5.0*15.0;
  4336                           
  4337                           ;main.c: 309: PID_CV_charge.Proportion = 0.001;
  4338                           
  4339                           ;main.c: 311: PID_CV_charge.Integral = 0;
  4340                           
  4341                           ;main.c: 313: PID_CV_charge.Derivative = 0;
  4342                           
  4343                           ;main.c: 315: PID_CV_charge.SetPoint = dianchi_cv_level+1;
  4344  0C08  2717  3189         	fcall	PL2	;call to abstracted procedure
  4345  0C0A  24C6  3189         	fcall	___fladd
  4346  0C0C  276B  3189         	fcall	PL64	;call to abstracted procedure
  4347                           
  4348                           ;main.c: 319: PID_CC_discharge.Proportion = 0.001;
  4349                           
  4350                           ;main.c: 321: PID_CC_discharge.Integral = 0;
  4351                           
  4352                           ;main.c: 323: PID_CC_discharge.Derivative = 0;
  4353                           
  4354                           ;main.c: 325: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
  4355  0C0E  2757               	fcall	PL14	;call to abstracted procedure
  4356  0C0F  31B3  2377  3189   	fcall	PL4	;call to abstracted procedure
  4357  0C12  31A6  26E5  3189   	fcall	___fldiv
  4358  0C15  3186  26CD  3189   	fcall	PL30	;call to abstracted procedure
  4359  0C18  2607               	fcall	___flmul
  4360  0C19  31B3  239C         	fcall	PL18	;call to abstracted procedure
  4361                           
  4362                           ;main.c: 327: open_discharge_time=0x00;
  4363  0C1B  0022               	movlb	2	; select bank2
  4364  0C1C  01BF               	clrf	_open_discharge_time^(0+256)
  4365                           
  4366                           ;main.c: 329: ms_cnt=0x00;
  4367  0C1D  0023               	movlb	3	; select bank3
  4368  0C1E  01B4               	clrf	_ms_cnt^(0+384)
  4369  0C1F  01B5               	clrf	(_ms_cnt+1)^(0+384)
  4370                           
  4371                           ;main.c: 330: se_cnt=0x00;
  4372  0C20  01B6               	clrf	_se_cnt^(0+384)
  4373  0C21  01B7               	clrf	(_se_cnt+1)^(0+384)
  4374                           
  4375                           ;main.c: 331: mi_cnt=0x00;
  4376  0C22  0022               	movlb	2	; select bank2
  4377  0C23  01A6               	clrf	_mi_cnt^(0+256)
  4378  0C24  01A7               	clrf	(_mi_cnt+1)^(0+256)
  4379                           
  4380                           ;main.c: 332: ho_cnt=0x00;
  4381  0C25  01FC               	clrf	_ho_cnt
  4382  0C26  01FD               	clrf	_ho_cnt+1
  4383                           
  4384                           ;main.c: 334: run_index=0x00;
  4385  0C27  0023               	movlb	3	; select bank3
  4386  0C28  01C3               	clrf	_run_index^(0+384)
  4387  0C29  0008               	return
  4388  0C2A                     __end_of_application_init:	
  4389  0C2A                     __ptext23:	
  4390 ;; *************** function _driver_init *****************
  4391 ;; Defined at:
  4392 ;;		line 214 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;		None               void
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 17F/0
  4403 ;;		On exit  : 17F/2
  4404 ;;		Unchanged: 160/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    3
  4413 ;; This function calls:
  4414 ;;		_Init_Ird
  4415 ;;		_init_adc
  4416 ;;		_init_interrupt
  4417 ;;		_init_key
  4418 ;;		_init_osc
  4419 ;;		_init_port
  4420 ;;		_init_pwm
  4421 ;;		_init_timer1
  4422 ;;		_init_uart1
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           
  4429                           ;psect for function _driver_init
  4430  0C2A                     _driver_init:	
  4431                           
  4432                           ;main.c: 216: init_osc();
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _driver_init: [wreg+status,2+status,0+pclath+cstack]
  4436  0C2A  2475  3189         	fcall	_init_osc
  4437                           
  4438                           ;main.c: 218: init_port();
  4439  0C2C  247D  3189         	fcall	_init_port
  4440                           
  4441                           ;main.c: 220: init_key();
  4442  0C2E  246F  3189         	fcall	_init_key
  4443                           
  4444                           ;main.c: 222: init_timer1();
  4445  0C30  2491  3189         	fcall	_init_timer1
  4446                           
  4447                           ;main.c: 224: init_uart1();
  4448  0C32  249E  3189         	fcall	_init_uart1
  4449                           
  4450                           ;main.c: 226: Init_Ird();
  4451  0C34  243B  3189         	fcall	_Init_Ird
  4452                           
  4453                           ;main.c: 228: init_adc();
  4454  0C36  2450  3189         	fcall	_init_adc
  4455                           
  4456                           ;main.c: 230: init_pwm();
  4457  0C38  26C0  3189         	fcall	_init_pwm
  4458                           
  4459                           ;main.c: 232: init_interrupt();
  4460  0C3A  2CB2               	ljmp	l12686
  4461  0C3B                     __end_of_driver_init:	
  4462  0C3B                     __ptext32:	
  4463 ;; *************** function _Init_Ird *****************
  4464 ;; Defined at:
  4465 ;;		line 532 in file "D:\MCUProject\ZH-SL-F60\src\ird_remote.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;		None               void
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 17F/1
  4476 ;;		On exit  : 17F/0
  4477 ;;		Unchanged: 160/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_driver_init
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _Init_Ird
  4495  0C3B                     _Init_Ird:	
  4496                           
  4497                           ;ird_remote.c: 534: TRISBbits.TRISB7 = 1;
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _Init_Ird: [wreg+status,2+status,0]
  4501  0C3B  178D               	bsf	13,7	;volatile
  4502                           
  4503                           ;ird_remote.c: 536: IOCBNbits.IOCBN7 = 1;
  4504  0C3C  0027               	movlb	7	; select bank7
  4505  0C3D  1795               	bsf	21,7	;volatile
  4506                           
  4507                           ;ird_remote.c: 538: IOCBFbits.IOCBF7 = 0;
  4508  0C3E  1396               	bcf	22,7	;volatile
  4509                           
  4510                           ;ird_remote.c: 540: TRISBbits.TRISB4 = 1;
  4511  0C3F  0021               	movlb	1	; select bank1
  4512  0C40  160D               	bsf	13,4	;volatile
  4513                           
  4514                           ;ird_remote.c: 542: IOCBNbits.IOCBN4 = 1;
  4515  0C41  0027               	movlb	7	; select bank7
  4516  0C42  1615               	bsf	21,4	;volatile
  4517                           
  4518                           ;ird_remote.c: 544: IOCBFbits.IOCBF4 = 0;
  4519  0C43  1216               	bcf	22,4	;volatile
  4520                           
  4521                           ;ird_remote.c: 546: IOCIF = 0;
  4522  0C44  100B               	bcf	11,0	;volatile
  4523                           
  4524                           ;ird_remote.c: 548: IOCIE = 1;
  4525  0C45  158B               	bsf	11,3	;volatile
  4526                           
  4527                           ;ird_remote.c: 551: TMR0CS = 0;
  4528  0C46  0021               	movlb	1	; select bank1
  4529  0C47  1295               	bcf	21,5	;volatile
  4530                           
  4531                           ;ird_remote.c: 553: PSA = 0;
  4532  0C48  1195               	bcf	21,3	;volatile
  4533                           
  4534                           ;ird_remote.c: 555: OPTION_REGbits.PS = 0b111;
  4535  0C49  3007               	movlw	7
  4536  0C4A  0495               	iorwf	21,f	;volatile
  4537                           
  4538                           ;ird_remote.c: 557: TMR0IF = 0;
  4539  0C4B  110B               	bcf	11,2	;volatile
  4540                           
  4541                           ;ird_remote.c: 559: TMR0 = 0;
  4542  0C4C  0020               	movlb	0	; select bank0
  4543  0C4D  0195               	clrf	21	;volatile
  4544                           
  4545                           ;ird_remote.c: 561: TMR0IE = 0;
  4546  0C4E  128B               	bcf	11,5	;volatile
  4547  0C4F  0008               	return
  4548  0C50                     __end_of_Init_Ird:	
  4549  0C50                     __ptext31:	
  4550 ;; *************** function _init_adc *****************
  4551 ;; Defined at:
  4552 ;;		line 37 in file "D:\MCUProject\ZH-SL-F60\src\adc.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 17F/0
  4563 ;;		On exit  : 17F/0
  4564 ;;		Unchanged: 160/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    2
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_driver_init
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _init_adc
  4582  0C50                     _init_adc:	
  4583                           
  4584                           ;adc.c: 40: TRISAbits.TRISA0 = 1;
  4585                           
  4586                           ;incstack = 0
  4587                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  4588  0C50  0021               	movlb	1	; select bank1
  4589                           
  4590                           ;adc.c: 42: TRISAbits.TRISA1 = 1;
  4591                           
  4592                           ;adc.c: 44: TRISAbits.TRISA2 = 1;
  4593                           
  4594                           ;adc.c: 46: TRISAbits.TRISA3 = 1;
  4595                           
  4596                           ;adc.c: 48: TRISAbits.TRISA5 = 1;
  4597  0C51  27C5               	fcall	PL250	;call to abstracted procedure
  4598                           
  4599                           ;adc.c: 50: TRISBbits.TRISB3 = 1;
  4600  0C52  158D               	bsf	13,3	;volatile
  4601                           
  4602                           ;adc.c: 52: TRISBbits.TRISB1 = 1;
  4603  0C53  148D               	bsf	13,1	;volatile
  4604                           
  4605                           ;adc.c: 54: TRISBbits.TRISB0 = 1;
  4606  0C54  140D               	bsf	13,0	;volatile
  4607                           
  4608                           ;adc.c: 58: ADCON1bits.ADFM =0b1;
  4609  0C55  179E               	bsf	30,7	;volatile
  4610                           
  4611                           ;adc.c: 60: ADCON1bits.ADCS =0b110;
  4612  0C56  081E               	movf	30,w	;volatile
  4613  0C57  398F               	andlw	-113
  4614  0C58  3860               	iorlw	96
  4615  0C59  009E               	movwf	30	;volatile
  4616                           
  4617                           ;adc.c: 62: ADCON1bits.ADNREF =0b0;
  4618  0C5A  111E               	bcf	30,2	;volatile
  4619                           
  4620                           ;adc.c: 64: ADCON1bits.ADPREF =0b11;
  4621  0C5B  3003               	movlw	3
  4622  0C5C  049E               	iorwf	30,f	;volatile
  4623                           
  4624                           ;adc.c: 66: FVRCONbits.ADFVR =0b01;
  4625  0C5D  0022               	movlb	2	; select bank2
  4626  0C5E  0817               	movf	23,w	;volatile
  4627  0C5F  39FC               	andlw	-4
  4628  0C60  3801               	iorlw	1
  4629  0C61  0097               	movwf	23	;volatile
  4630                           
  4631                           ;adc.c: 68: FVRCONbits.FVREN =0b1;
  4632  0C62  1797               	bsf	23,7	;volatile
  4633                           
  4634                           ;adc.c: 70: FVRCONbits.TSEN =0b1;
  4635  0C63  1697               	bsf	23,5	;volatile
  4636                           
  4637                           ;adc.c: 72: FVRCONbits.TSRNG=0b1;
  4638  0C64  1617               	bsf	23,4	;volatile
  4639                           
  4640                           ;adc.c: 74: ADCON0bits.CHS =0b11101;
  4641  0C65  0021               	movlb	1	; select bank1
  4642  0C66  081D               	movf	29,w	;volatile
  4643  0C67  3983               	andlw	-125
  4644  0C68  3874               	iorlw	116
  4645  0C69  009D               	movwf	29	;volatile
  4646                           
  4647                           ;adc.c: 76: ADCON0bits.ADON =0b0;
  4648  0C6A  101D               	bcf	29,0	;volatile
  4649                           
  4650                           ;adc.c: 78: PIE1bits.ADIE=0;
  4651  0C6B  1311               	bcf	17,6	;volatile
  4652                           
  4653                           ;adc.c: 80: PIR1bits.ADIF=0;
  4654  0C6C  0020               	movlb	0	; select bank0
  4655  0C6D  1311               	bcf	17,6	;volatile
  4656  0C6E  0008               	return
  4657  0C6F                     __end_of_init_adc:	
  4658  0C6F                     __ptext29:	
  4659 ;; *************** function _init_key *****************
  4660 ;; Defined at:
  4661 ;;		line 46 in file "D:\MCUProject\ZH-SL-F60\src\key.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;		None               void
  4668 ;; Registers used:
  4669 ;;		None
  4670 ;; Tracked objects:
  4671 ;;		On entry : 17F/2
  4672 ;;		On exit  : 17F/1
  4673 ;;		Unchanged: 160/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_driver_init
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _init_key
  4691  0C6F                     _init_key:	
  4692                           
  4693                           ;key.c: 48: (TRISBbits.TRISB4) = 1;
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _init_key: []
  4697  0C6F  0021               	movlb	1	; select bank1
  4698  0C70  160D               	bsf	13,4	;volatile
  4699                           
  4700                           ;key.c: 49: (TRISCbits.TRISC6) = 1;
  4701  0C71  170E               	bsf	14,6	;volatile
  4702                           
  4703                           ;key.c: 50: (TRISCbits.TRISC5) = 1;
  4704  0C72  168E               	bsf	14,5	;volatile
  4705                           
  4706                           ;key.c: 51: (TRISCbits.TRISC4) = 1;
  4707  0C73  160E               	bsf	14,4	;volatile
  4708  0C74  0008               	return
  4709  0C75                     __end_of_init_key:	
  4710  0C75                     __ptext28:	
  4711 ;; *************** function _init_osc *****************
  4712 ;; Defined at:
  4713 ;;		line 157 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;		None               void
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 17F/0
  4724 ;;		On exit  : 17F/1
  4725 ;;		Unchanged: 160/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    2
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_driver_init
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _init_osc
  4743  0C75                     _init_osc:	
  4744                           
  4745                           ;main.c: 159: OSCCON = 0x70;
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _init_osc: [wreg+status,2+status,0]
  4749  0C75  3070               	movlw	112
  4750  0C76  0021               	movlb	1	; select bank1
  4751  0C77  0099               	movwf	25	;volatile
  4752                           
  4753                           ;main.c: 160: WDTCONbits.WDTPS=0b01110;
  4754  0C78  0817               	movf	23,w	;volatile
  4755  0C79  39C1               	andlw	-63
  4756  0C7A  381C               	iorlw	28
  4757  0C7B  0097               	movwf	23	;volatile
  4758  0C7C  0008               	return
  4759  0C7D                     __end_of_init_osc:	
  4760  0C7D                     __ptext27:	
  4761 ;; *************** function _init_port *****************
  4762 ;; Defined at:
  4763 ;;		line 174 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;		None               void
  4770 ;; Registers used:
  4771 ;;		status,2
  4772 ;; Tracked objects:
  4773 ;;		On entry : 17F/1
  4774 ;;		On exit  : 17F/2
  4775 ;;		Unchanged: 160/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    2
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_driver_init
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _init_port
  4793  0C7D                     _init_port:	
  4794                           
  4795                           ;main.c: 176: ANSELA = 0x00;
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _init_port: [status,2]
  4799  0C7D  0023               	movlb	3	; select bank3
  4800  0C7E  018C               	clrf	12	;volatile
  4801                           
  4802                           ;main.c: 177: ANSELB = 0x00;
  4803  0C7F  018D               	clrf	13	;volatile
  4804                           
  4805                           ;main.c: 179: ANSA0 = 1;
  4806                           
  4807                           ;main.c: 180: ANSA1 = 1;
  4808                           
  4809                           ;main.c: 181: ANSA2 = 1;
  4810                           
  4811                           ;main.c: 182: ANSA3 = 1;
  4812                           
  4813                           ;main.c: 183: ANSA5 = 1;
  4814  0C80  27C5               	fcall	PL250	;call to abstracted procedure
  4815                           
  4816                           ;main.c: 185: ANSB1 = 1;
  4817  0C81  148D               	bsf	13,1	;volatile
  4818                           
  4819                           ;main.c: 186: ANSB3 = 1;
  4820  0C82  158D               	bsf	13,3	;volatile
  4821                           
  4822                           ;main.c: 187: ANSB0 = 1;
  4823  0C83  140D               	bsf	13,0	;volatile
  4824                           
  4825                           ;main.c: 189: TRISCbits.TRISC1=1;
  4826  0C84  0021               	movlb	1	; select bank1
  4827  0C85  148E               	bsf	14,1	;volatile
  4828                           
  4829                           ;main.c: 191: TRISCbits.TRISC3=0;
  4830  0C86  118E               	bcf	14,3	;volatile
  4831                           
  4832                           ;main.c: 193: (LATCbits.LATC3 = 0x00);
  4833  0C87  0022               	movlb	2	; select bank2
  4834  0C88  118E               	bcf	14,3	;volatile
  4835                           
  4836                           ;main.c: 195: TRISCbits.TRISC2=1;
  4837  0C89  0021               	movlb	1	; select bank1
  4838  0C8A  150E               	bsf	14,2	;volatile
  4839                           
  4840                           ;main.c: 197: TRISBbits.TRISB2=1;
  4841  0C8B  150D               	bsf	13,2	;volatile
  4842                           
  4843                           ;main.c: 199: TRISBbits.TRISB5 =1;
  4844  0C8C  168D               	bsf	13,5	;volatile
  4845                           
  4846                           ;main.c: 201: TRISCbits.TRISC0 = 0;
  4847  0C8D  100E               	bcf	14,0	;volatile
  4848                           
  4849                           ;main.c: 202: (LATCbits.LATC0 = 0x01);
  4850  0C8E  0022               	movlb	2	; select bank2
  4851  0C8F  140E               	bsf	14,0	;volatile
  4852  0C90  0008               	return
  4853  0C91                     __end_of_init_port:	
  4854  0C91                     __ptext25:	
  4855 ;; *************** function _init_timer1 *****************
  4856 ;; Defined at:
  4857 ;;		line 42 in file "D:\MCUProject\ZH-SL-F60\src\timer.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;		None               void
  4864 ;; Registers used:
  4865 ;;		wreg
  4866 ;; Tracked objects:
  4867 ;;		On entry : 17F/1
  4868 ;;		On exit  : 17F/0
  4869 ;;		Unchanged: 160/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    2
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_driver_init
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _init_timer1
  4887  0C91                     _init_timer1:	
  4888                           
  4889                           ;timer.c: 44: TMR1H = 0xE0;
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in _init_timer1: [wreg]
  4893  0C91  30E0               	movlw	224
  4894  0C92  0020               	movlb	0	; select bank0
  4895  0C93  0097               	movwf	23	;volatile
  4896                           
  4897                           ;timer.c: 45: TMR1L = 0xC0;
  4898  0C94  30C0               	movlw	192
  4899  0C95  0096               	movwf	22	;volatile
  4900                           
  4901                           ;timer.c: 46: T1CON = 0x60;
  4902  0C96  3060               	movlw	96
  4903  0C97  0098               	movwf	24	;volatile
  4904                           
  4905                           ;timer.c: 50: T1GCONbits.TMR1GE=0;
  4906  0C98  1399               	bcf	25,7	;volatile
  4907                           
  4908                           ;timer.c: 52: TMR1IE = 0x01;
  4909  0C99  0021               	movlb	1	; select bank1
  4910  0C9A  1411               	bsf	17,0	;volatile
  4911                           
  4912                           ;timer.c: 53: TMR1ON =0;
  4913  0C9B  0020               	movlb	0	; select bank0
  4914  0C9C  1018               	bcf	24,0	;volatile
  4915  0C9D  0008               	return
  4916  0C9E                     __end_of_init_timer1:	
  4917  0C9E                     __ptext24:	
  4918 ;; *************** function _init_uart1 *****************
  4919 ;; Defined at:
  4920 ;;		line 81 in file "D:\MCUProject\ZH-SL-F60\src\uart.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2
  4929 ;; Tracked objects:
  4930 ;;		On entry : 17F/0
  4931 ;;		On exit  : 17F/1
  4932 ;;		Unchanged: 160/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;Total ram usage:        0 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_driver_init
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _init_uart1
  4950  0C9E                     _init_uart1:	
  4951                           
  4952                           ;uart.c: 84: SP1BRGL = 0x40;
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _init_uart1: [wreg+status,2]
  4956  0C9E  3040               	movlw	64
  4957  0C9F  0023               	movlb	3	; select bank3
  4958  0CA0  009B               	movwf	27	;volatile
  4959                           
  4960                           ;uart.c: 85: SP1BRGH = 0x03;
  4961  0CA1  3003               	movlw	3
  4962  0CA2  009C               	movwf	28	;volatile
  4963                           
  4964                           ;uart.c: 86: BAUDCON = 0x08;
  4965  0CA3  3008               	movlw	8
  4966  0CA4  009F               	movwf	31	;volatile
  4967                           
  4968                           ;uart.c: 96: (TRISCbits.TRISC6) = 0x01;
  4969  0CA5  0021               	movlb	1	; select bank1
  4970  0CA6  170E               	bsf	14,6	;volatile
  4971                           
  4972                           ;uart.c: 97: (TRISCbits.TRISC7) = 0x01;
  4973  0CA7  178E               	bsf	14,7	;volatile
  4974                           
  4975                           ;uart.c: 98: TXSTA = 0x00;
  4976  0CA8  0023               	movlb	3	; select bank3
  4977  0CA9  019E               	clrf	30	;volatile
  4978                           
  4979                           ;uart.c: 107: RCSTA = 0x90;
  4980  0CAA  3090               	movlw	144
  4981  0CAB  009D               	movwf	29	;volatile
  4982                           
  4983                           ;uart.c: 108: RCIE = 0x01;
  4984  0CAC  0021               	movlb	1	; select bank1
  4985  0CAD  1691               	bsf	17,5	;volatile
  4986  0CAE  0008               	return
  4987  0CAF                     __end_of_init_uart1:	
  4988  0CAF                     __ptext1:	
  4989 ;; *************** function _middle_init *****************
  4990 ;; Defined at:
  4991 ;;		line 246 in file "D:\MCUProject\ZH-SL-F60\src\main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;		None               void
  4998 ;; Registers used:
  4999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 17F/2
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;Total ram usage:        0 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    5
  5012 ;; This function calls:
  5013 ;;		_auto_system
  5014 ;;		_read_param_eeprom
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function _middle_init
  5022  0CAF                     _middle_init:	
  5023                           
  5024                           ;main.c: 249: auto_system();
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _middle_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5028  0CAF  258D               	fcall	_auto_system
  5029                           
  5030                           ;main.c: 251: read_param_eeprom();
  5031  0CB0  31A1  29D7         	ljmp	l16588
  5032  0CB2                     __end_of_middle_init:	
  5033  0CB2                     __ptext30:	
  5034 ;; *************** function _init_interrupt *****************
  5035 ;; Defined at:
  5036 ;;		line 519 in file "D:\MCUProject\ZH-SL-F60\src\interrupt.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;		None               void
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 17F/0
  5047 ;;		On exit  : 17F/2
  5048 ;;		Unchanged: 160/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    2
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_driver_init
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _init_interrupt
  5066  0CB2                     _init_interrupt:	
  5067  0CB2                     l12686:	
  5068                           ;incstack = 0
  5069                           ; Regs used in _init_interrupt: [wreg+status,2+status,0]
  5070                           
  5071                           
  5072                           ;interrupt.c: 524: CM1CON0bits.C1POL=0;
  5073  0CB2  0022               	movlb	2	; select bank2
  5074  0CB3  1211               	bcf	17,4	;volatile
  5075                           
  5076                           ;interrupt.c: 526: CM1CON0bits.C1OE=0;
  5077  0CB4  1291               	bcf	17,5	;volatile
  5078                           
  5079                           ;interrupt.c: 528: CM1CON0bits.C1SP=1;
  5080  0CB5  1511               	bsf	17,2	;volatile
  5081                           
  5082                           ;interrupt.c: 530: CM1CON0bits.C1HYS=1;
  5083  0CB6  1491               	bsf	17,1	;volatile
  5084                           
  5085                           ;interrupt.c: 532: CM1CON0bits.C1SYNC=0;
  5086  0CB7  1011               	bcf	17,0	;volatile
  5087                           
  5088                           ;interrupt.c: 534: CM1CON1bits.C1INTN=1;
  5089  0CB8  1712               	bsf	18,6	;volatile
  5090                           
  5091                           ;interrupt.c: 536: CM1CON1bits.C1PCH=0b00;
  5092  0CB9  30CF               	movlw	-49
  5093  0CBA  0592               	andwf	18,f	;volatile
  5094                           
  5095                           ;interrupt.c: 538: CM1CON1bits.C1NCH=0b00;
  5096  0CBB  30FC               	movlw	-4
  5097  0CBC  0592               	andwf	18,f	;volatile
  5098                           
  5099                           ;interrupt.c: 540: PIE2bits.C1IE=1;
  5100  0CBD  0021               	movlb	1	; select bank1
  5101  0CBE  1692               	bsf	18,5	;volatile
  5102                           
  5103                           ;interrupt.c: 542: PIR2bits.C1IF=0;
  5104  0CBF  0020               	movlb	0	; select bank0
  5105  0CC0  1292               	bcf	18,5	;volatile
  5106                           
  5107                           ;interrupt.c: 544: CM1CON0bits.C1ON=1;
  5108  0CC1  0022               	movlb	2	; select bank2
  5109  0CC2  1791               	bsf	17,7	;volatile
  5110                           
  5111                           ;interrupt.c: 546: PEIE = 0x01;
  5112  0CC3  170B               	bsf	11,6	;volatile
  5113                           
  5114                           ;interrupt.c: 547: GIE = 0x01;
  5115  0CC4  178B               	bsf	11,7	;volatile
  5116  0CC5  0008               	return
  5117  0CC6                     __end_of_init_interrupt:	
  5118  0CC6                     __ptext45:	
  5119 ;; *************** function ___fladd *****************
  5120 ;; Defined at:
  5121 ;;		line 88 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fladd.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  f1              4   39[BANK0 ] unsigned char 
  5124 ;;  f2              4   43[BANK0 ] unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  exp1            1   53[BANK0 ] unsigned char 
  5127 ;;  exp2            1   52[BANK0 ] unsigned char 
  5128 ;;  sign            1   51[BANK0 ] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  4   39[BANK0 ] unsigned char 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 1F/0
  5135 ;;		On exit  : 1F/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:       15 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    3
  5145 ;; This function calls:
  5146 ;;		___flpack
  5147 ;; This function is called by:
  5148 ;;		_application_init
  5149 ;;		_pid_calc
  5150 ;;		_handle_ad_loop
  5151 ;;		_handle_task_process
  5152 ;;		_Mppt_Charge
  5153 ;;		___flsub
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function ___fladd
  5159  0CC6                     ___fladd:	
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
  5163  0CC6  0847               	movf	___fladd@f1,w
  5164  0CC7  00CF               	movwf	??___fladd
  5165  0CC8  0848               	movf	___fladd@f1+1,w
  5166  0CC9  00D0               	movwf	??___fladd+1
  5167  0CCA  0849               	movf	___fladd@f1+2,w
  5168  0CCB  00D1               	movwf	??___fladd+2
  5169  0CCC  084A               	movf	___fladd@f1+3,w
  5170  0CCD  00D2               	movwf	??___fladd+3
  5171  0CCE  1003               	clrc
  5172  0CCF  0D51               	rlf	??___fladd+2,w
  5173  0CD0  0D52               	rlf	??___fladd+3,w
  5174  0CD1  00D5               	movwf	___fladd@exp1
  5175  0CD2  084B               	movf	___fladd@f2,w
  5176  0CD3  00CF               	movwf	??___fladd
  5177  0CD4  084C               	movf	___fladd@f2+1,w
  5178  0CD5  00D0               	movwf	??___fladd+1
  5179  0CD6  084D               	movf	___fladd@f2+2,w
  5180  0CD7  00D1               	movwf	??___fladd+2
  5181  0CD8  084E               	movf	___fladd@f2+3,w
  5182  0CD9  00D2               	movwf	??___fladd+3
  5183  0CDA  1003               	clrc
  5184  0CDB  0D51               	rlf	??___fladd+2,w
  5185  0CDC  0D52               	rlf	??___fladd+3,w
  5186  0CDD  00D4               	movwf	___fladd@exp2
  5187  0CDE  0855               	movf	___fladd@exp1,w
  5188  0CDF  1903               	btfsc	3,2
  5189  0CE0  2CED               	goto	l18964
  5190  0CE1  0854               	movf	___fladd@exp2,w
  5191  0CE2  0255               	subwf	___fladd@exp1,w
  5192  0CE3  0854               	movf	___fladd@exp2,w
  5193  0CE4  1803               	skipnc
  5194  0CE5  2CF7               	goto	L93
  5195  0CE6  00CF               	movwf	??___fladd
  5196  0CE7  0855               	movf	___fladd@exp1,w
  5197  0CE8  02CF               	subwf	??___fladd,f
  5198  0CE9  3021               	movlw	33
  5199  0CEA  024F               	subwf	??___fladd,w
  5200  0CEB  1C03               	skipc
  5201  0CEC  2CF6               	goto	l18968
  5202  0CED                     l18964:	
  5203  0CED  084E               	movf	___fladd@f2+3,w
  5204  0CEE  00CA               	movwf	?___fladd+3
  5205  0CEF  084D               	movf	___fladd@f2+2,w
  5206  0CF0  00C9               	movwf	?___fladd+2
  5207  0CF1  084C               	movf	___fladd@f2+1,w
  5208  0CF2  00C8               	movwf	?___fladd+1
  5209  0CF3  084B               	movf	___fladd@f2,w
  5210  0CF4  00C7               	movwf	?___fladd
  5211  0CF5  0008               	return
  5212  0CF6                     l18968:	
  5213  0CF6  0854               	movf	___fladd@exp2,w
  5214  0CF7                     L93:	
  5215  0CF7  1903               	btfsc	3,2
  5216  0CF8  0008               	return
  5217  0CF9  0855               	movf	___fladd@exp1,w
  5218  0CFA  0254               	subwf	___fladd@exp2,w
  5219  0CFB  1803               	skipnc
  5220  0CFC  2D05               	goto	l18974
  5221  0CFD  0855               	movf	___fladd@exp1,w
  5222  0CFE  00CF               	movwf	??___fladd
  5223  0CFF  0854               	movf	___fladd@exp2,w
  5224  0D00  02CF               	subwf	??___fladd,f
  5225  0D01  3021               	movlw	33
  5226  0D02  024F               	subwf	??___fladd,w
  5227  0D03  1803               	btfsc	3,0
  5228  0D04  0008               	return
  5229  0D05                     l18974:	
  5230  0D05  3006               	movlw	6
  5231  0D06  00D3               	movwf	___fladd@sign
  5232  0D07  1BCA               	btfsc	___fladd@f1+3,7
  5233  0D08  17D3               	bsf	___fladd@sign,7
  5234  0D09  1BCE               	btfsc	___fladd@f2+3,7
  5235  0D0A  1753               	bsf	___fladd@sign,6
  5236  0D0B  17C9               	bsf	___fladd@f1+2,7
  5237  0D0C  01CA               	clrf	___fladd@f1+3
  5238  0D0D  17CD               	bsf	___fladd@f2+2,7
  5239  0D0E  01CE               	clrf	___fladd@f2+3
  5240  0D0F  0854               	movf	___fladd@exp2,w
  5241  0D10  0255               	subwf	___fladd@exp1,w
  5242  0D11  1803               	skipnc
  5243  0D12  2D2C               	goto	l18996
  5244  0D13                     l18986:	
  5245  0D13  35CB               	lslf	___fladd@f2,f
  5246  0D14  0DCC               	rlf	___fladd@f2+1,f
  5247  0D15  0DCD               	rlf	___fladd@f2+2,f
  5248  0D16  0DCE               	rlf	___fladd@f2+3,f
  5249  0D17  03D4               	decf	___fladd@exp2,f
  5250  0D18  0854               	movf	___fladd@exp2,w
  5251  0D19  0655               	xorwf	___fladd@exp1,w
  5252  0D1A  1903               	skipnz
  5253  0D1B  2D27               	goto	l18994
  5254  0D1C  03D3               	decf	___fladd@sign,f
  5255  0D1D  0853               	movf	___fladd@sign,w
  5256  0D1E  3907               	andlw	7
  5257  0D1F  1903               	btfsc	3,2
  5258  0D20  2D27               	goto	l18994
  5259  0D21  2D13               	goto	l18986
  5260  0D22                     l18992:	
  5261  0D22  36CA               	lsrf	___fladd@f1+3,f
  5262  0D23  0CC9               	rrf	___fladd@f1+2,f
  5263  0D24  0CC8               	rrf	___fladd@f1+1,f
  5264  0D25  0CC7               	rrf	___fladd@f1,f
  5265  0D26  0AD5               	incf	___fladd@exp1,f
  5266  0D27                     l18994:	
  5267  0D27  0855               	movf	___fladd@exp1,w
  5268  0D28  0654               	xorwf	___fladd@exp2,w
  5269  0D29  1903               	btfsc	3,2
  5270  0D2A  2D48               	goto	l2166
  5271  0D2B  2D22               	goto	l18992
  5272  0D2C                     l18996:	
  5273  0D2C  0855               	movf	___fladd@exp1,w
  5274  0D2D  0254               	subwf	___fladd@exp2,w
  5275  0D2E  1803               	skipnc
  5276  0D2F  2D48               	goto	l2166
  5277  0D30                     l18998:	
  5278  0D30  35C7               	lslf	___fladd@f1,f
  5279  0D31  0DC8               	rlf	___fladd@f1+1,f
  5280  0D32  0DC9               	rlf	___fladd@f1+2,f
  5281  0D33  0DCA               	rlf	___fladd@f1+3,f
  5282  0D34  03D5               	decf	___fladd@exp1,f
  5283  0D35  0854               	movf	___fladd@exp2,w
  5284  0D36  0655               	xorwf	___fladd@exp1,w
  5285  0D37  1903               	skipnz
  5286  0D38  2D44               	goto	l19006
  5287  0D39  03D3               	decf	___fladd@sign,f
  5288  0D3A  0853               	movf	___fladd@sign,w
  5289  0D3B  3907               	andlw	7
  5290  0D3C  1903               	btfsc	3,2
  5291  0D3D  2D44               	goto	l19006
  5292  0D3E  2D30               	goto	l18998
  5293  0D3F                     l19004:	
  5294  0D3F  36CE               	lsrf	___fladd@f2+3,f
  5295  0D40  0CCD               	rrf	___fladd@f2+2,f
  5296  0D41  0CCC               	rrf	___fladd@f2+1,f
  5297  0D42  0CCB               	rrf	___fladd@f2,f
  5298  0D43  0AD4               	incf	___fladd@exp2,f
  5299  0D44                     l19006:	
  5300  0D44  0855               	movf	___fladd@exp1,w
  5301  0D45  0654               	xorwf	___fladd@exp2,w
  5302  0D46  1D03               	skipz
  5303  0D47  2D3F               	goto	l19004
  5304  0D48                     l2166:	
  5305  0D48  1FD3               	btfss	___fladd@sign,7
  5306  0D49  2D56               	goto	l19012
  5307  0D4A  30FF               	movlw	255
  5308  0D4B  06C7               	xorwf	___fladd@f1,f
  5309  0D4C  06C8               	xorwf	___fladd@f1+1,f
  5310  0D4D  06C9               	xorwf	___fladd@f1+2,f
  5311  0D4E  06CA               	xorwf	___fladd@f1+3,f
  5312  0D4F  0AC7               	incf	___fladd@f1,f
  5313  0D50  1903               	skipnz
  5314  0D51  0AC8               	incf	___fladd@f1+1,f
  5315  0D52  1903               	skipnz
  5316  0D53  0AC9               	incf	___fladd@f1+2,f
  5317  0D54  1903               	skipnz
  5318  0D55  0ACA               	incf	___fladd@f1+3,f
  5319  0D56                     l19012:	
  5320  0D56  1F53               	btfss	___fladd@sign,6
  5321  0D57  2D61               	goto	l19018
  5322  0D58  30FF               	movlw	255
  5323  0D59  27BF  3189         	fcall	PL246	;call to abstracted procedure
  5324  0D5B  1903               	skipnz
  5325  0D5C  0ACC               	incf	___fladd@f2+1,f
  5326  0D5D  1903               	skipnz
  5327  0D5E  0ACD               	incf	___fladd@f2+2,f
  5328  0D5F  1903               	skipnz
  5329  0D60  0ACE               	incf	___fladd@f2+3,f
  5330  0D61                     l19018:	
  5331  0D61  01D3               	clrf	___fladd@sign
  5332  0D62  0847               	movf	___fladd@f1,w
  5333  0D63  07CB               	addwf	___fladd@f2,f
  5334  0D64  0848               	movf	___fladd@f1+1,w
  5335  0D65  3DCC               	addwfc	___fladd@f2+1,f
  5336  0D66  0849               	movf	___fladd@f1+2,w
  5337  0D67  3DCD               	addwfc	___fladd@f2+2,f
  5338  0D68  084A               	movf	___fladd@f1+3,w
  5339  0D69  3DCE               	addwfc	___fladd@f2+3,f
  5340  0D6A  1FCE               	btfss	___fladd@f2+3,7
  5341  0D6B  2D77               	goto	l19030
  5342  0D6C  30FF               	movlw	255
  5343  0D6D  27BF  3189         	fcall	PL246	;call to abstracted procedure
  5344  0D6F  1903               	skipnz
  5345  0D70  0ACC               	incf	___fladd@f2+1,f
  5346  0D71  1903               	skipnz
  5347  0D72  0ACD               	incf	___fladd@f2+2,f
  5348  0D73  1903               	skipnz
  5349  0D74  0ACE               	incf	___fladd@f2+3,f
  5350  0D75  01D3               	clrf	___fladd@sign
  5351  0D76  0AD3               	incf	___fladd@sign,f
  5352  0D77                     l19030:	
  5353  0D77  084E               	movf	___fladd@f2+3,w
  5354  0D78  00A6               	movwf	___flpack@arg+3
  5355  0D79  084D               	movf	___fladd@f2+2,w
  5356  0D7A  00A5               	movwf	___flpack@arg+2
  5357  0D7B  084C               	movf	___fladd@f2+1,w
  5358  0D7C  00A4               	movwf	___flpack@arg+1
  5359  0D7D  084B               	movf	___fladd@f2,w
  5360  0D7E  00A3               	movwf	___flpack@arg
  5361  0D7F  0855               	movf	___fladd@exp1,w
  5362  0D80  00A7               	movwf	___flpack@exp
  5363  0D81  0853               	movf	___fladd@sign,w
  5364  0D82  00A8               	movwf	___flpack@sign
  5365  0D83  2675               	fcall	___flpack
  5366  0D84  0826               	movf	?___flpack+3,w
  5367  0D85  00CA               	movwf	?___fladd+3
  5368  0D86  0825               	movf	?___flpack+2,w
  5369  0D87  00C9               	movwf	?___fladd+2
  5370  0D88  0824               	movf	?___flpack+1,w
  5371  0D89  00C8               	movwf	?___fladd+1
  5372  0D8A  0823               	movf	?___flpack,w
  5373  0D8B  00C7               	movwf	?___fladd
  5374  0D8C  0008               	return
  5375  0D8D                     __end_of___fladd:	
  5376  0D8D                     __ptext4:	
  5377 ;; *************** function _auto_system *****************
  5378 ;; Defined at:
  5379 ;;		line 471 in file "D:\MCUProject\ZH-SL-F60\src\ird_remote.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  sys_bt_volta    4   70[BANK0 ] float 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;		None               void
  5386 ;; Registers used:
  5387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 17F/2
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;Total ram usage:        4 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    4
  5400 ;; This function calls:
  5401 ;;		___fldiv
  5402 ;;		___flge
  5403 ;;		___flmul
  5404 ;;		___lwtofl
  5405 ;;		_delay_ms
  5406 ;;		_eeprom_read
  5407 ;;		_eeprom_write
  5408 ;;		_start_ad_convert
  5409 ;; This function is called by:
  5410 ;;		_middle_init
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           
  5415                           ;psect for function _auto_system
  5416  0D8D                     _auto_system:	
  5417                           
  5418                           ;ird_remote.c: 473: float sys_bt_voltage;
  5419                           ;ird_remote.c: 475: delay_ms(100);
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _auto_system: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5423  0D8D  3064               	movlw	100
  5424  0D8E  0020               	movlb	0	; select bank0
  5425  0D8F  00A3               	movwf	delay_ms@count
  5426  0D90  01A4               	clrf	delay_ms@count+1
  5427  0D91  2392               	fcall	_delay_ms
  5428                           
  5429                           ;ird_remote.c: 478: bt_id=eeprom_read(0x0a);
  5430  0D92  300A               	movlw	10
  5431  0D93  31A4  24EB  3189   	fcall	_eeprom_read
  5432  0D96  0021               	movlb	1	; select bank1
  5433  0D97  00EA               	movwf	_bt_id^(0+128)
  5434                           
  5435                           ;ird_remote.c: 483: battery_voltage_value=start_ad_convert(0b01100);
  5436  0D98  300C               	movlw	12
  5437  0D99  31B5  25A5  3189   	fcall	_start_ad_convert
  5438  0D9C  0831               	movf	?_start_ad_convert+1,w
  5439  0D9D  00EB               	movwf	_battery_voltage_value+1
  5440  0D9E  0830               	movf	?_start_ad_convert,w
  5441  0D9F  00EA               	movwf	_battery_voltage_value
  5442                           
  5443                           ;ird_remote.c: 485: sys_bt_voltage=(((float)battery_voltage_value)/1000)*31.04;
  5444  0DA0  3041               	movlw	65
  5445  0DA1  00B7               	movwf	___flmul@f1+3
  5446  0DA2  30F8               	movlw	248
  5447  0DA3  00B6               	movwf	___flmul@f1+2
  5448  0DA4  3051               	movlw	81
  5449  0DA5  00B5               	movwf	___flmul@f1+1
  5450  0DA6  30EC               	movlw	236
  5451  0DA7  00B4               	movwf	___flmul@f1
  5452  0DA8  3044               	movlw	68
  5453  0DA9  00CA               	movwf	___fldiv@f2+3
  5454  0DAA  307A               	movlw	122
  5455  0DAB  00C9               	movwf	___fldiv@f2+2
  5456  0DAC  01C8               	clrf	___fldiv@f2+1
  5457  0DAD  01C7               	clrf	___fldiv@f2
  5458  0DAE  086B               	movf	_battery_voltage_value+1,w
  5459  0DAF  00B1               	movwf	___lwtofl@c+1
  5460  0DB0  086A               	movf	_battery_voltage_value,w
  5461  0DB1  00B0               	movwf	___lwtofl@c
  5462  0DB2  319B  2346  3189   	fcall	___lwtofl
  5463  0DB5  3186  26D6  3189   	fcall	PL50	;call to abstracted procedure
  5464  0DB8  31A6  26E5  3189   	fcall	___fldiv
  5465  0DBB  3186  26CD  3189   	fcall	PL30	;call to abstracted procedure
  5466  0DBE  2607  3189         	fcall	___flmul
  5467  0DC0  0837               	movf	?___flmul+3,w
  5468  0DC1  00E9               	movwf	auto_system@sys_bt_voltage+3
  5469  0DC2  0836               	movf	?___flmul+2,w
  5470  0DC3  00E8               	movwf	auto_system@sys_bt_voltage+2
  5471  0DC4  0835               	movf	?___flmul+1,w
  5472  0DC5  00E7               	movwf	auto_system@sys_bt_voltage+1
  5473  0DC6  0834               	movf	?___flmul,w
  5474  0DC7  00E6               	movwf	auto_system@sys_bt_voltage
  5475                           
  5476                           ;ird_remote.c: 487: if(bt_id==0x01)
  5477  0DC8  0021               	movlb	1	; select bank1
  5478  0DC9  0B6A               	decfsz	_bt_id^(0+128),w
  5479  0DCA  2DDF               	goto	l16672
  5480                           
  5481                           ;ird_remote.c: 488: {
  5482                           ;ird_remote.c: 489: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
  5483  0DCB  0020               	movlb	0	; select bank0
  5484  0DCC  278B               	fcall	PL68	;call to abstracted procedure
  5485  0DCD  319E  2658  3189   	fcall	___flge
  5486  0DD0  1C03               	btfss	3,0
  5487  0DD1  2DDD               	goto	l514
  5488  0DD2  3041               	movlw	65
  5489  0DD3  277B               	fcall	PL66	;call to abstracted procedure
  5490  0DD4  319E  2658  3189   	fcall	___flge
  5491  0DD7  1C03               	btfss	3,0
  5492  0DD8  2DDD               	goto	l514
  5493                           
  5494                           ;ird_remote.c: 490: {
  5495                           ;ird_remote.c: 491: volt_id=0x01;
  5496  0DD9  0021               	movlb	1	; select bank1
  5497                           
  5498                           ;ird_remote.c: 493: eeprom_write(0x09,volt_id);
  5499  0DDA  27A1               	fcall	PL178	;call to abstracted procedure
  5500  0DDB  31A7  2F75         	ljmp	_eeprom_write
  5501  0DDD                     l514:	
  5502                           ;ird_remote.c: 494: }
  5503                           
  5504                           
  5505                           ;ird_remote.c: 495: else
  5506                           ;ird_remote.c: 496: {
  5507                           ;ird_remote.c: 497: __nop();
  5508  0DDD  0000               	nop
  5509  0DDE  0008               	return
  5510  0DDF                     l16672:	
  5511                           
  5512                           ;ird_remote.c: 500: else if(bt_id==0x02)
  5513  0DDF  086A               	movf	_bt_id^(0+128),w
  5514  0DE0  3A02               	xorlw	2
  5515  0DE1  1D03               	skipz
  5516  0DE2  2DF5               	goto	l16682
  5517                           
  5518                           ;ird_remote.c: 501: {
  5519                           ;ird_remote.c: 502: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
  5520  0DE3  0020               	movlb	0	; select bank0
  5521  0DE4  278B               	fcall	PL68	;call to abstracted procedure
  5522  0DE5  319E  2658  3189   	fcall	___flge
  5523  0DE8  1C03               	btfss	3,0
  5524  0DE9  2DDD               	goto	l514
  5525  0DEA  3041               	movlw	65
  5526  0DEB  277B               	fcall	PL66	;call to abstracted procedure
  5527  0DEC  319E  2658  3189   	fcall	___flge
  5528  0DEF  1C03               	btfss	3,0
  5529  0DF0  2DDD               	goto	l514
  5530                           
  5531                           ;ird_remote.c: 503: {
  5532                           ;ird_remote.c: 504: volt_id=0x01;
  5533  0DF1  0021               	movlb	1	; select bank1
  5534                           
  5535                           ;ird_remote.c: 506: eeprom_write(0x09,volt_id);
  5536  0DF2  27A1               	fcall	PL178	;call to abstracted procedure
  5537  0DF3  31A7  2F75         	ljmp	_eeprom_write
  5538  0DF5                     l16682:	
  5539                           ;ird_remote.c: 507: }
  5540                           
  5541                           
  5542                           ;ird_remote.c: 513: else
  5543                           ;ird_remote.c: 514: {
  5544                           ;ird_remote.c: 515: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
  5545  0DF5  0020               	movlb	0	; select bank0
  5546  0DF6  278B               	fcall	PL68	;call to abstracted procedure
  5547  0DF7  319E  2658  3189   	fcall	___flge
  5548  0DFA  1C03               	btfss	3,0
  5549  0DFB  2DDD               	goto	l514
  5550  0DFC  3041               	movlw	65
  5551  0DFD  277B               	fcall	PL66	;call to abstracted procedure
  5552  0DFE  319E  2658  3189   	fcall	___flge
  5553  0E01  1C03               	btfss	3,0
  5554  0E02  2DDD               	goto	l514
  5555                           
  5556                           ;ird_remote.c: 516: {
  5557                           ;ird_remote.c: 517: volt_id=0x01;
  5558  0E03  0021               	movlb	1	; select bank1
  5559                           
  5560                           ;ird_remote.c: 519: eeprom_write(0x09,volt_id);
  5561  0E04  27A1               	fcall	PL178	;call to abstracted procedure
  5562  0E05  31A7  2F75         	ljmp	_eeprom_write
  5563  0E07                     __end_of_auto_system:	
  5564                           ;ird_remote.c: 520: }
  5565                           
  5566  0E07                     __ptext47:	
  5567 ;; *************** function ___flmul *****************
  5568 ;; Defined at:
  5569 ;;		line 50 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flmul.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  f1              4   20[BANK0 ] unsigned char 
  5572 ;;  f2              4   24[BANK0 ] unsigned char 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  f3_as_produc    4   33[BANK0 ] unsigned long 
  5575 ;;  sign            1   38[BANK0 ] unsigned char 
  5576 ;;  cntr            1   37[BANK0 ] unsigned char 
  5577 ;;  exp             1   32[BANK0 ] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4   20[BANK0 ] unsigned char 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, pclath, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 1F/0
  5584 ;;		On exit  : 1F/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;Total ram usage:       19 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    3
  5594 ;; This function calls:
  5595 ;;		___flpack
  5596 ;; This function is called by:
  5597 ;;		_read_param_eeprom
  5598 ;;		_auto_system
  5599 ;;		_application_init
  5600 ;;		_pid_calc
  5601 ;;		_handle_ad_loop
  5602 ;;		_handle_task_process
  5603 ;;		_handle_uart_rx_buf
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function ___flmul
  5609  0E07                     ___flmul:	
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5613  0E07  0834               	movf	___flmul@f1,w
  5614  0E08  00BC               	movwf	??___flmul
  5615  0E09  0835               	movf	___flmul@f1+1,w
  5616  0E0A  00BD               	movwf	??___flmul+1
  5617  0E0B  0836               	movf	___flmul@f1+2,w
  5618  0E0C  00BE               	movwf	??___flmul+2
  5619  0E0D  0837               	movf	___flmul@f1+3,w
  5620  0E0E  00BF               	movwf	??___flmul+3
  5621  0E0F  1003               	clrc
  5622  0E10  0D3E               	rlf	??___flmul+2,w
  5623  0E11  0D3F               	rlf	??___flmul+3,w
  5624  0E12  00C0               	movwf	___flmul@exp
  5625  0E13  08C0               	movf	___flmul@exp,f
  5626  0E14  1D03               	skipz
  5627  0E15  2E18               	goto	l19092
  5628  0E16  01B4               	clrf	?___flmul
  5629  0E17  2FD5               	ljmp	PL268	;call to abstracted procedure
  5630  0E18                     l19092:	
  5631  0E18  0838               	movf	___flmul@f2,w
  5632  0E19  00BC               	movwf	??___flmul
  5633  0E1A  0839               	movf	___flmul@f2+1,w
  5634  0E1B  00BD               	movwf	??___flmul+1
  5635  0E1C  083A               	movf	___flmul@f2+2,w
  5636  0E1D  00BE               	movwf	??___flmul+2
  5637  0E1E  083B               	movf	___flmul@f2+3,w
  5638  0E1F  00BF               	movwf	??___flmul+3
  5639  0E20  1003               	clrc
  5640  0E21  0D3E               	rlf	??___flmul+2,w
  5641  0E22  0D3F               	rlf	??___flmul+3,w
  5642  0E23  00C6               	movwf	___flmul@sign
  5643  0E24  08C6               	movf	___flmul@sign,f
  5644  0E25  1D03               	skipz
  5645  0E26  2E29               	goto	l19096
  5646  0E27  01B4               	clrf	?___flmul
  5647  0E28  2FD5               	ljmp	PL268	;call to abstracted procedure
  5648  0E29                     l19096:	
  5649  0E29  0846               	movf	___flmul@sign,w
  5650  0E2A  3E7B               	addlw	123
  5651  0E2B  07C0               	addwf	___flmul@exp,f
  5652  0E2C  0837               	movf	___flmul@f1+3,w
  5653  0E2D  00C6               	movwf	___flmul@sign
  5654  0E2E  083B               	movf	___flmul@f2+3,w
  5655  0E2F  06C6               	xorwf	___flmul@sign,f
  5656  0E30  3080               	movlw	128
  5657  0E31  05C6               	andwf	___flmul@sign,f
  5658  0E32  30FF               	movlw	255
  5659  0E33  17B6               	bsf	___flmul@f1+2,7
  5660  0E34  17BA               	bsf	___flmul@f2+2,7
  5661  0E35  05B8               	andwf	___flmul@f2,f
  5662  0E36  05B9               	andwf	___flmul@f2+1,f
  5663  0E37  05BA               	andwf	___flmul@f2+2,f
  5664  0E38  3007               	movlw	7
  5665  0E39  01BB               	clrf	___flmul@f2+3
  5666  0E3A  01C1               	clrf	___flmul@f3_as_product
  5667  0E3B  01C2               	clrf	___flmul@f3_as_product+1
  5668  0E3C  01C3               	clrf	___flmul@f3_as_product+2
  5669  0E3D  01C4               	clrf	___flmul@f3_as_product+3
  5670  0E3E  00C5               	movwf	___flmul@cntr
  5671  0E3F                     l19114:	
  5672  0E3F  1C34               	btfss	___flmul@f1,0
  5673  0E40  2E44               	goto	l19118
  5674  0E41  0838               	movf	___flmul@f2,w
  5675  0E42  27AD  3189         	fcall	PL212	;call to abstracted procedure
  5676  0E44                     l19118:	
  5677  0E44  36B7               	lsrf	___flmul@f1+3,f
  5678  0E45  0CB6               	rrf	___flmul@f1+2,f
  5679  0E46  0CB5               	rrf	___flmul@f1+1,f
  5680  0E47  0CB4               	rrf	___flmul@f1,f
  5681  0E48  35B8               	lslf	___flmul@f2,f
  5682  0E49  0DB9               	rlf	___flmul@f2+1,f
  5683  0E4A  0DBA               	rlf	___flmul@f2+2,f
  5684  0E4B  0DBB               	rlf	___flmul@f2+3,f
  5685  0E4C  0BC5               	decfsz	___flmul@cntr,f
  5686  0E4D  2E3F               	goto	l19114
  5687  0E4E  3011               	movlw	17
  5688  0E4F  00C5               	movwf	___flmul@cntr
  5689  0E50                     l19126:	
  5690  0E50  1C34               	btfss	___flmul@f1,0
  5691  0E51  2E55               	goto	l19130
  5692  0E52  0838               	movf	___flmul@f2,w
  5693  0E53  27AD  3189         	fcall	PL212	;call to abstracted procedure
  5694  0E55                     l19130:	
  5695  0E55  36B7               	lsrf	___flmul@f1+3,f
  5696  0E56  0CB6               	rrf	___flmul@f1+2,f
  5697  0E57  0CB5               	rrf	___flmul@f1+1,f
  5698  0E58  0CB4               	rrf	___flmul@f1,f
  5699  0E59  36C4               	lsrf	___flmul@f3_as_product+3,f
  5700  0E5A  0CC3               	rrf	___flmul@f3_as_product+2,f
  5701  0E5B  0CC2               	rrf	___flmul@f3_as_product+1,f
  5702  0E5C  0CC1               	rrf	___flmul@f3_as_product,f
  5703  0E5D  0BC5               	decfsz	___flmul@cntr,f
  5704  0E5E  2E50               	goto	l19126
  5705  0E5F  0844               	movf	___flmul@f3_as_product+3,w
  5706  0E60  00A6               	movwf	___flpack@arg+3
  5707  0E61  0843               	movf	___flmul@f3_as_product+2,w
  5708  0E62  00A5               	movwf	___flpack@arg+2
  5709  0E63  0842               	movf	___flmul@f3_as_product+1,w
  5710  0E64  00A4               	movwf	___flpack@arg+1
  5711  0E65  0841               	movf	___flmul@f3_as_product,w
  5712  0E66  00A3               	movwf	___flpack@arg
  5713  0E67  0840               	movf	___flmul@exp,w
  5714  0E68  00A7               	movwf	___flpack@exp
  5715  0E69  0846               	movf	___flmul@sign,w
  5716  0E6A  00A8               	movwf	___flpack@sign
  5717  0E6B  2675               	fcall	___flpack
  5718  0E6C  0826               	movf	?___flpack+3,w
  5719  0E6D  00B7               	movwf	?___flmul+3
  5720  0E6E  0825               	movf	?___flpack+2,w
  5721  0E6F  00B6               	movwf	?___flmul+2
  5722  0E70  0824               	movf	?___flpack+1,w
  5723  0E71  00B5               	movwf	?___flmul+1
  5724  0E72  0823               	movf	?___flpack,w
  5725  0E73  00B4               	movwf	?___flmul
  5726  0E74  0008               	return
  5727  0E75                     __end_of___flmul:	
  5728  0E75                     __ptext46:	
  5729 ;; *************** function ___flpack *****************
  5730 ;; Defined at:
  5731 ;;		line 63 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\double.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  arg             4    3[BANK0 ] unsigned long 
  5734 ;;  exp             1    7[BANK0 ] unsigned char 
  5735 ;;  sign            1    8[BANK0 ] unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  4    3[BANK0 ] unsigned char 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 1F/0
  5744 ;;		On exit  : 1F/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5750 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;Total ram usage:       10 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    2
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		___awtofl
  5758 ;;		___fladd
  5759 ;;		___fldiv
  5760 ;;		___flmul
  5761 ;;		___lbtofl
  5762 ;;		___lwtofl
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function ___flpack
  5768  0E75                     ___flpack:	
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in ___flpack: [wreg+status,2+status,0]
  5772  0E75  0827               	movf	___flpack@exp,w
  5773  0E76  1903               	btfsc	3,2
  5774  0E77  2E7E               	goto	l2132
  5775  0E78  0826               	movf	___flpack@arg+3,w
  5776  0E79  0425               	iorwf	___flpack@arg+2,w
  5777  0E7A  0424               	iorwf	___flpack@arg+1,w
  5778  0E7B  0423               	iorwf	___flpack@arg,w
  5779  0E7C  1D03               	skipz
  5780  0E7D  2E88               	goto	l18926
  5781  0E7E                     l2132:	
  5782  0E7E  01A3               	clrf	?___flpack
  5783  0E7F  01A4               	clrf	?___flpack+1
  5784  0E80  01A5               	clrf	?___flpack+2
  5785  0E81  01A6               	clrf	?___flpack+3
  5786  0E82  0008               	return
  5787  0E83                     l18924:	
  5788  0E83  0AA7               	incf	___flpack@exp,f
  5789  0E84  36A6               	lsrf	___flpack@arg+3,f
  5790  0E85  0CA5               	rrf	___flpack@arg+2,f
  5791  0E86  0CA4               	rrf	___flpack@arg+1,f
  5792  0E87  0CA3               	rrf	___flpack@arg,f
  5793  0E88                     l18926:	
  5794  0E88  30FE               	movlw	254
  5795  0E89  0526               	andwf	___flpack@arg+3,w
  5796  0E8A  1903               	btfsc	3,2
  5797  0E8B  2E99               	goto	l18934
  5798  0E8C  2E83               	goto	l18924
  5799  0E8D                     l18928:	
  5800  0E8D  0AA7               	incf	___flpack@exp,f
  5801  0E8E  0AA3               	incf	___flpack@arg,f
  5802  0E8F  1903               	skipnz
  5803  0E90  0AA4               	incf	___flpack@arg+1,f
  5804  0E91  1903               	skipnz
  5805  0E92  0AA5               	incf	___flpack@arg+2,f
  5806  0E93  1903               	skipnz
  5807  0E94  0AA6               	incf	___flpack@arg+3,f
  5808  0E95  36A6               	lsrf	___flpack@arg+3,f
  5809  0E96  0CA5               	rrf	___flpack@arg+2,f
  5810  0E97  0CA4               	rrf	___flpack@arg+1,f
  5811  0E98  0CA3               	rrf	___flpack@arg,f
  5812  0E99                     l18934:	
  5813  0E99  30FF               	movlw	255
  5814  0E9A  0526               	andwf	___flpack@arg+3,w
  5815  0E9B  1903               	btfsc	3,2
  5816  0E9C  2EA3               	goto	l18938
  5817  0E9D  2E8D               	goto	l18928
  5818  0E9E                     l18936:	
  5819  0E9E  03A7               	decf	___flpack@exp,f
  5820  0E9F  35A3               	lslf	___flpack@arg,f
  5821  0EA0  0DA4               	rlf	___flpack@arg+1,f
  5822  0EA1  0DA5               	rlf	___flpack@arg+2,f
  5823  0EA2  0DA6               	rlf	___flpack@arg+3,f
  5824  0EA3                     l18938:	
  5825  0EA3  1FA5               	btfss	___flpack@arg+2,7
  5826  0EA4  2E9E               	goto	l18936
  5827  0EA5  1827               	btfsc	___flpack@exp,0
  5828  0EA6  2EAE               	goto	l18942
  5829  0EA7  30FF               	movlw	255
  5830  0EA8  05A3               	andwf	___flpack@arg,f
  5831  0EA9  05A4               	andwf	___flpack@arg+1,f
  5832  0EAA  307F               	movlw	127
  5833  0EAB  05A5               	andwf	___flpack@arg+2,f
  5834  0EAC  30FF               	movlw	255
  5835  0EAD  05A6               	andwf	___flpack@arg+3,f
  5836  0EAE                     l18942:	
  5837  0EAE  36A7               	lsrf	___flpack@exp,f
  5838  0EAF  0827               	movf	___flpack@exp,w
  5839  0EB0  00AC               	movwf	??___flpack+3
  5840  0EB1  01AB               	clrf	??___flpack+2
  5841  0EB2  01AA               	clrf	??___flpack+1
  5842  0EB3  01A9               	clrf	??___flpack
  5843  0EB4  0829               	movf	??___flpack,w
  5844  0EB5  04A3               	iorwf	___flpack@arg,f
  5845  0EB6  082A               	movf	??___flpack+1,w
  5846  0EB7  04A4               	iorwf	___flpack@arg+1,f
  5847  0EB8  082B               	movf	??___flpack+2,w
  5848  0EB9  04A5               	iorwf	___flpack@arg+2,f
  5849  0EBA  082C               	movf	??___flpack+3,w
  5850  0EBB  04A6               	iorwf	___flpack@arg+3,f
  5851  0EBC  0828               	movf	___flpack@sign,w
  5852  0EBD  1D03               	skipz
  5853  0EBE  17A6               	bsf	___flpack@arg+3,7
  5854  0EBF  0008               	return
  5855  0EC0                     __end_of___flpack:	
  5856  0EC0                     __ptext26:	
  5857 ;; *************** function _init_pwm *****************
  5858 ;; Defined at:
  5859 ;;		line 30 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;		None               void
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 17F/0
  5870 ;;		On exit  : 17F/0
  5871 ;;		Unchanged: 160/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    2
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_driver_init
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function _init_pwm
  5889  0EC0                     _init_pwm:	
  5890                           
  5891                           ;pwm.c: 33: TRISCbits.TRISC2=1;
  5892                           
  5893                           ;incstack = 0
  5894                           ; Regs used in _init_pwm: [wreg+status,2+status,0]
  5895  0EC0  0021               	movlb	1	; select bank1
  5896  0EC1  150E               	bsf	14,2	;volatile
  5897                           
  5898                           ;pwm.c: 35: TRISBbits.TRISB2=1;
  5899  0EC2  150D               	bsf	13,2	;volatile
  5900                           
  5901                           ;pwm.c: 37: TRISBbits.TRISB5 =1;
  5902  0EC3  168D               	bsf	13,5	;volatile
  5903                           
  5904                           ;pwm.c: 39: APFCONbits.CCP3SEL=1;
  5905  0EC4  0022               	movlb	2	; select bank2
  5906  0EC5  171D               	bsf	29,6	;volatile
  5907                           
  5908                           ;pwm.c: 45: PR6=0xFF;
  5909  0EC6  30FF               	movlw	255
  5910  0EC7  0028               	movlb	8	; select bank8
  5911  0EC8  009D               	movwf	29	;volatile
  5912                           
  5913                           ;pwm.c: 47: CCP1CONbits.CCP1M=0b1100;
  5914  0EC9  0025               	movlb	5	; select bank5
  5915  0ECA  0813               	movf	19,w	;volatile
  5916  0ECB  39F0               	andlw	-16
  5917  0ECC  380C               	iorlw	12
  5918  0ECD  0093               	movwf	19	;volatile
  5919                           
  5920                           ;pwm.c: 49: CCP1CONbits.P1M=0b10;
  5921  0ECE  0813               	movf	19,w	;volatile
  5922  0ECF  393F               	andlw	-193
  5923  0ED0  3880               	iorlw	128
  5924  0ED1  0093               	movwf	19	;volatile
  5925                           
  5926                           ;pwm.c: 51: CCPTMRS0bits.C1TSEL=0b10;
  5927  0ED2  081E               	movf	30,w	;volatile
  5928  0ED3  39FC               	andlw	-4
  5929  0ED4  3802               	iorlw	2
  5930  0ED5  009E               	movwf	30	;volatile
  5931                           
  5932                           ;pwm.c: 53: CCPR1L=0x00;
  5933  0ED6  0191               	clrf	17	;volatile
  5934                           
  5935                           ;pwm.c: 55: CCP1CONbits.DC1B=0b00;
  5936  0ED7  30CF               	movlw	-49
  5937  0ED8  0593               	andwf	19,f	;volatile
  5938                           
  5939                           ;pwm.c: 57: TMR6IF=0;
  5940  0ED9  0020               	movlb	0	; select bank0
  5941  0EDA  1193               	bcf	19,3	;volatile
  5942                           
  5943                           ;pwm.c: 59: T6CONbits.T6OUTPS=0b0000;
  5944  0EDB  3087               	movlw	-121
  5945  0EDC  0028               	movlb	8	; select bank8
  5946  0EDD  059E               	andwf	30,f	;volatile
  5947                           
  5948                           ;pwm.c: 61: TMR6ON=0;
  5949  0EDE  111E               	bcf	30,2	;volatile
  5950                           
  5951                           ;pwm.c: 63: T6CONbits.T6CKPS=0b00;
  5952  0EDF  30FC               	movlw	-4
  5953  0EE0  059E               	andwf	30,f	;volatile
  5954                           
  5955                           ;pwm.c: 69: PR4=0xFF;
  5956  0EE1  30FF               	movlw	255
  5957  0EE2  0096               	movwf	22	;volatile
  5958                           
  5959                           ;pwm.c: 71: CCP3CONbits.CCP3M=0b1100;
  5960  0EE3  0026               	movlb	6	; select bank6
  5961  0EE4  0813               	movf	19,w	;volatile
  5962  0EE5  39F0               	andlw	-16
  5963  0EE6  380C               	iorlw	12
  5964  0EE7  0093               	movwf	19	;volatile
  5965                           
  5966                           ;pwm.c: 73: CCP3CONbits.P3M=0b00;
  5967  0EE8  303F               	movlw	-193
  5968  0EE9  0593               	andwf	19,f	;volatile
  5969                           
  5970                           ;pwm.c: 75: CCPTMRS0bits.C3TSEL=0b01;
  5971  0EEA  0025               	movlb	5	; select bank5
  5972  0EEB  081E               	movf	30,w	;volatile
  5973  0EEC  39CF               	andlw	-49
  5974  0EED  3810               	iorlw	16
  5975  0EEE  009E               	movwf	30	;volatile
  5976                           
  5977                           ;pwm.c: 77: CCPR3L=0x00;
  5978  0EEF  0026               	movlb	6	; select bank6
  5979  0EF0  0191               	clrf	17	;volatile
  5980                           
  5981                           ;pwm.c: 79: CCP3CONbits.DC3B=0b00;
  5982  0EF1  30CF               	movlw	-49
  5983  0EF2  0593               	andwf	19,f	;volatile
  5984                           
  5985                           ;pwm.c: 81: TMR4IF=0;
  5986  0EF3  0020               	movlb	0	; select bank0
  5987  0EF4  1093               	bcf	19,1	;volatile
  5988                           
  5989                           ;pwm.c: 83: T4CONbits.T4OUTPS=0b0000;
  5990  0EF5  3087               	movlw	-121
  5991  0EF6  0028               	movlb	8	; select bank8
  5992  0EF7  0597               	andwf	23,f	;volatile
  5993                           
  5994                           ;pwm.c: 85: TMR4ON=0;
  5995  0EF8  1117               	bcf	23,2	;volatile
  5996                           
  5997                           ;pwm.c: 87: T4CONbits.T4CKPS=0b00;
  5998  0EF9  30FC               	movlw	-4
  5999  0EFA  0597               	andwf	23,f	;volatile
  6000                           
  6001                           ;pwm.c: 91: TRISAbits.TRISA4=0;
  6002  0EFB  0021               	movlb	1	; select bank1
  6003  0EFC  120C               	bcf	12,4	;volatile
  6004                           
  6005                           ;pwm.c: 93: PR2=0xCE;
  6006  0EFD  30CE               	movlw	206
  6007  0EFE  0020               	movlb	0	; select bank0
  6008  0EFF  009B               	movwf	27	;volatile
  6009                           
  6010                           ;pwm.c: 95: CCP5CONbits.CCP5M=0b1100;
  6011  0F00  0026               	movlb	6	; select bank6
  6012  0F01  081E               	movf	30,w	;volatile
  6013  0F02  39F0               	andlw	-16
  6014  0F03  380C               	iorlw	12
  6015  0F04  009E               	movwf	30	;volatile
  6016                           
  6017                           ;pwm.c: 97: CCP5CONbits.P5M=0b00;
  6018  0F05  303F               	movlw	-193
  6019  0F06  059E               	andwf	30,f	;volatile
  6020                           
  6021                           ;pwm.c: 99: CCPTMRS1bits.C5TSEL=0b00;
  6022  0F07  30FC               	movlw	-4
  6023  0F08  0025               	movlb	5	; select bank5
  6024  0F09  059F               	andwf	31,f	;volatile
  6025                           
  6026                           ;pwm.c: 101: CCPR5L=(unsigned char)(0x114>>2);
  6027  0F0A  3045               	movlw	69
  6028  0F0B  0026               	movlb	6	; select bank6
  6029  0F0C  009C               	movwf	28	;volatile
  6030                           
  6031                           ;pwm.c: 103: CCP5CONbits.DC5B=(unsigned char)(0x114&0b11);
  6032  0F0D  30CF               	movlw	-49
  6033  0F0E  059E               	andwf	30,f	;volatile
  6034                           
  6035                           ;pwm.c: 105: TMR2IF=0;
  6036  0F0F  0020               	movlb	0	; select bank0
  6037  0F10  1091               	bcf	17,1	;volatile
  6038                           
  6039                           ;pwm.c: 107: T2CONbits.T2OUTPS=0b0000;
  6040  0F11  3087               	movlw	-121
  6041  0F12  059C               	andwf	28,f	;volatile
  6042                           
  6043                           ;pwm.c: 109: TMR2ON=0;
  6044  0F13  111C               	bcf	28,2	;volatile
  6045                           
  6046                           ;pwm.c: 111: T2CONbits.T2CKPS=0b00;
  6047  0F14  30FC               	movlw	-4
  6048  0F15  059C               	andwf	28,f	;volatile
  6049  0F16  0008               	return
  6050  0F17                     __end_of_init_pwm:	
  6051  0F17                     PL2:	
  6052  0F17  303A               	movlw	58
  6053  0F18  0026               	movlb	6	; select bank6
  6054  0F19  00A7               	movwf	((_PID_CC_charge+3)^(0+768)+4)
  6055  0F1A  3083               	movlw	131
  6056  0F1B  00A6               	movwf	((_PID_CC_charge+2)^(0+768)+4)
  6057  0F1C  3012               	movlw	18
  6058  0F1D  00A5               	movwf	((_PID_CC_charge+1)^(0+768)+4)
  6059  0F1E  306F               	movlw	111
  6060  0F1F  00A4               	movwf	(_PID_CC_charge^(0+768)+4)
  6061  0F20  3042               	movlw	66
  6062  0F21  01A8               	clrf	(_PID_CC_charge^(0+768)+8)
  6063  0F22  01A9               	clrf	((_PID_CC_charge+1)^(0+768)+8)
  6064  0F23  01AA               	clrf	((_PID_CC_charge+2)^(0+768)+8)
  6065  0F24  01AB               	clrf	((_PID_CC_charge+3)^(0+768)+8)
  6066  0F25  01AC               	clrf	(_PID_CC_charge^(0+768)+12)
  6067  0F26  01AD               	clrf	((_PID_CC_charge+1)^(0+768)+12)
  6068  0F27  01AE               	clrf	((_PID_CC_charge+2)^(0+768)+12)
  6069  0F28  01AF               	clrf	((_PID_CC_charge+3)^(0+768)+12)
  6070  0F29  00A3               	movwf	(_PID_CC_charge+3)^(0+768)
  6071  0F2A  3096               	movlw	150
  6072  0F2B  00A2               	movwf	(_PID_CC_charge+2)^(0+768)
  6073  0F2C  303A               	movlw	58
  6074  0F2D  01A1               	clrf	(_PID_CC_charge+1)^(0+768)
  6075  0F2E  01A0               	clrf	_PID_CC_charge^(0+768)
  6076  0F2F  0025               	movlb	5	; select bank5
  6077  0F30  00B3               	movwf	((_PID_CV_charge+3)^(0+640)+4)
  6078  0F31  3083               	movlw	131
  6079  0F32  00B2               	movwf	((_PID_CV_charge+2)^(0+640)+4)
  6080  0F33  3012               	movlw	18
  6081  0F34  00B1               	movwf	((_PID_CV_charge+1)^(0+640)+4)
  6082  0F35  306F               	movlw	111
  6083  0F36  00B0               	movwf	(_PID_CV_charge^(0+640)+4)
  6084  0F37  303F               	movlw	63
  6085  0F38  01B4               	clrf	(_PID_CV_charge^(0+640)+8)
  6086  0F39  01B5               	clrf	((_PID_CV_charge+1)^(0+640)+8)
  6087  0F3A  01B6               	clrf	((_PID_CV_charge+2)^(0+640)+8)
  6088  0F3B  01B7               	clrf	((_PID_CV_charge+3)^(0+640)+8)
  6089  0F3C  01B8               	clrf	(_PID_CV_charge^(0+640)+12)
  6090  0F3D  01B9               	clrf	((_PID_CV_charge+1)^(0+640)+12)
  6091  0F3E  01BA               	clrf	((_PID_CV_charge+2)^(0+640)+12)
  6092  0F3F  01BB               	clrf	((_PID_CV_charge+3)^(0+640)+12)
  6093  0F40  0020               	movlb	0	; select bank0
  6094  0F41  00CA               	movwf	___fladd@f1+3
  6095  0F42  3080               	movlw	128
  6096  0F43  00C9               	movwf	___fladd@f1+2
  6097  0F44  01C8               	clrf	___fladd@f1+1
  6098  0F45  01C7               	clrf	___fladd@f1
  6099  0F46  0023               	movlb	3	; select bank3
  6100  0F47  0866               	movf	(_dianchi_cv_level+3)^(0+384),w
  6101  0F48  0020               	movlb	0	; select bank0
  6102  0F49  00CE               	movwf	___fladd@f2+3
  6103  0F4A  0023               	movlb	3	; select bank3
  6104  0F4B  0865               	movf	(_dianchi_cv_level+2)^(0+384),w
  6105  0F4C  0020               	movlb	0	; select bank0
  6106  0F4D  00CD               	movwf	___fladd@f2+2
  6107  0F4E  0023               	movlb	3	; select bank3
  6108  0F4F  0864               	movf	(_dianchi_cv_level+1)^(0+384),w
  6109  0F50  0020               	movlb	0	; select bank0
  6110  0F51  00CC               	movwf	___fladd@f2+1
  6111  0F52  0023               	movlb	3	; select bank3
  6112  0F53  0863               	movf	_dianchi_cv_level^(0+384),w
  6113  0F54  0020               	movlb	0	; select bank0
  6114  0F55  00CB               	movwf	___fladd@f2
  6115  0F56  0008               	return
  6116  0F57                     __end_ofPL2:	
  6117  0F57                     PL14:	
  6118  0F57  303A               	movlw	58
  6119  0F58  0023               	movlb	3	; select bank3
  6120  0F59  00CE               	movwf	((_PID_CC_discharge+3)^(0+384)+4)
  6121  0F5A  3083               	movlw	131
  6122  0F5B  00CD               	movwf	((_PID_CC_discharge+2)^(0+384)+4)
  6123  0F5C  3012               	movlw	18
  6124  0F5D  00CC               	movwf	((_PID_CC_discharge+1)^(0+384)+4)
  6125  0F5E  306F               	movlw	111
  6126  0F5F  00CB               	movwf	(_PID_CC_discharge^(0+384)+4)
  6127  0F60  3043               	movlw	67
  6128  0F61  01CF               	clrf	(_PID_CC_discharge^(0+384)+8)
  6129  0F62  01D0               	clrf	((_PID_CC_discharge+1)^(0+384)+8)
  6130  0F63  01D1               	clrf	((_PID_CC_discharge+2)^(0+384)+8)
  6131  0F64  01D2               	clrf	((_PID_CC_discharge+3)^(0+384)+8)
  6132  0F65  01D3               	clrf	(_PID_CC_discharge^(0+384)+12)
  6133  0F66  01D4               	clrf	((_PID_CC_discharge+1)^(0+384)+12)
  6134  0F67  01D5               	clrf	((_PID_CC_discharge+2)^(0+384)+12)
  6135  0F68  01D6               	clrf	((_PID_CC_discharge+3)^(0+384)+12)
  6136  0F69  0020               	movlb	0	; select bank0
  6137  0F6A  0008               	return
  6138  0F6B                     __end_ofPL14:	
  6139  0F6B                     PL64:	
  6140  0F6B  084A               	movf	?___fladd+3,w
  6141  0F6C  0025               	movlb	5	; select bank5
  6142  0F6D  00AF               	movwf	(_PID_CV_charge+3)^(0+640)
  6143  0F6E  0020               	movlb	0	; select bank0
  6144  0F6F  0849               	movf	?___fladd+2,w
  6145  0F70  0025               	movlb	5	; select bank5
  6146  0F71  00AE               	movwf	(_PID_CV_charge+2)^(0+640)
  6147  0F72  0020               	movlb	0	; select bank0
  6148  0F73  0848               	movf	?___fladd+1,w
  6149  0F74  0025               	movlb	5	; select bank5
  6150  0F75  00AD               	movwf	(_PID_CV_charge+1)^(0+640)
  6151  0F76  0020               	movlb	0	; select bank0
  6152  0F77  0847               	movf	?___fladd,w
  6153  0F78  0025               	movlb	5	; select bank5
  6154  0F79  00AC               	movwf	_PID_CV_charge^(0+640)
  6155  0F7A  0008               	return
  6156  0F7B                     __end_ofPL64:	
  6157  0F7B                     PL66:	
  6158  0F7B  00DD               	movwf	___flge@ff1+3
  6159  0F7C  3049               	movlw	73
  6160  0F7D  00DC               	movwf	___flge@ff1+2
  6161  0F7E  3099               	movlw	153
  6162  0F7F  00DB               	movwf	___flge@ff1+1
  6163  0F80  309A               	movlw	154
  6164  0F81  00DA               	movwf	___flge@ff1
  6165  0F82  0869               	movf	auto_system@sys_bt_voltage+3,w
  6166  0F83  00E1               	movwf	___flge@ff2+3
  6167  0F84  0868               	movf	auto_system@sys_bt_voltage+2,w
  6168  0F85  00E0               	movwf	___flge@ff2+2
  6169  0F86  0867               	movf	auto_system@sys_bt_voltage+1,w
  6170  0F87  00DF               	movwf	___flge@ff2+1
  6171  0F88  0866               	movf	auto_system@sys_bt_voltage,w
  6172  0F89  00DE               	movwf	___flge@ff2
  6173  0F8A  0008               	return
  6174  0F8B                     __end_ofPL66:	
  6175  0F8B                     PL68:	
  6176  0F8B  0869               	movf	auto_system@sys_bt_voltage+3,w
  6177  0F8C  00DD               	movwf	___flge@ff1+3
  6178  0F8D  0868               	movf	auto_system@sys_bt_voltage+2,w
  6179  0F8E  00DC               	movwf	___flge@ff1+2
  6180  0F8F  0867               	movf	auto_system@sys_bt_voltage+1,w
  6181  0F90  00DB               	movwf	___flge@ff1+1
  6182  0F91  0866               	movf	auto_system@sys_bt_voltage,w
  6183  0F92  00DA               	movwf	___flge@ff1
  6184  0F93  3040               	movlw	64
  6185  0F94  00E1               	movwf	___flge@ff2+3
  6186  0F95  30F0               	movlw	240
  6187  0F96  00E0               	movwf	___flge@ff2+2
  6188  0F97  3000               	movlw	0
  6189  0F98  01DF               	clrf	___flge@ff2+1
  6190  0F99  01DE               	clrf	___flge@ff2
  6191  0F9A  0008               	return
  6192  0F9B                     __end_ofPL68:	
  6193  0F9B                     PL164:	
  6194  0F9B  0022               	movlb	2	; select bank2
  6195  0F9C  118E               	bcf	14,3	;volatile
  6196  0F9D  0020               	movlb	0	; select bank0
  6197  0F9E  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  6198  0F9F  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  6199  0FA0  0008               	return
  6200  0FA1                     __end_ofPL164:	
  6201  0FA1                     PL178:	
  6202  0FA1  01EB               	clrf	_volt_id^(0+128)
  6203  0FA2  0AEB               	incf	_volt_id^(0+128),f
  6204  0FA3  086B               	movf	_volt_id^(0+128),w
  6205  0FA4  0020               	movlb	0	; select bank0
  6206  0FA5  00E4               	movwf	eeprom_write@value
  6207  0FA6  3409               	retlw	9
  6208  0FA7                     __end_ofPL178:	
  6209  0FA7                     PL204:	
  6210  0FA7  30F4               	movlw	244
  6211  0FA8  0020               	movlb	0	; select bank0
  6212  0FA9  00A3               	movwf	delay_ms@count
  6213  0FAA  3001               	movlw	1
  6214  0FAB  00A4               	movwf	delay_ms@count+1
  6215  0FAC  0008               	return
  6216  0FAD                     __end_ofPL204:	
  6217  0FAD                     PL212:	
  6218  0FAD  07C1               	addwf	___flmul@f3_as_product,f
  6219  0FAE  0839               	movf	___flmul@f2+1,w
  6220  0FAF  3DC2               	addwfc	___flmul@f3_as_product+1,f
  6221  0FB0  083A               	movf	___flmul@f2+2,w
  6222  0FB1  3DC3               	addwfc	___flmul@f3_as_product+2,f
  6223  0FB2  083B               	movf	___flmul@f2+3,w
  6224  0FB3  3DC4               	addwfc	___flmul@f3_as_product+3,f
  6225  0FB4  0008               	return
  6226  0FB5                     __end_ofPL212:	
  6227  0FB5                     PL220:	
  6228  0FB5  0023               	movlb	3	; select bank3
  6229  0FB6  01C1               	clrf	_nop_index^(0+384)
  6230  0FB7  0021               	movlb	1	; select bank1
  6231  0FB8  01B5               	clrf	_discharge_index^(0+128)
  6232  0FB9  01B3               	clrf	_charge_index^(0+128)
  6233  0FBA  0008               	return
  6234  0FBB                     __end_ofPL220:	
  6235  0FBB                     PL242:	
  6236  0FBB  0837               	movf	_led_out_ctrl^(0+128),w
  6237  0FBC  0020               	movlb	0	; select bank0
  6238  0FBD  00E4               	movwf	eeprom_write@value
  6239  0FBE  3439               	retlw	57
  6240  0FBF                     __end_ofPL242:	
  6241  0FBF                     PL246:	
  6242  0FBF  06CB               	xorwf	___fladd@f2,f
  6243  0FC0  06CC               	xorwf	___fladd@f2+1,f
  6244  0FC1  06CD               	xorwf	___fladd@f2+2,f
  6245  0FC2  06CE               	xorwf	___fladd@f2+3,f
  6246  0FC3  0ACB               	incf	___fladd@f2,f
  6247  0FC4  0008               	return
  6248  0FC5                     __end_ofPL246:	
  6249  0FC5                     PL250:	
  6250  0FC5  140C               	bsf	12,0	;volatile
  6251  0FC6  148C               	bsf	12,1	;volatile
  6252  0FC7  150C               	bsf	12,2	;volatile
  6253  0FC8  158C               	bsf	12,3	;volatile
  6254  0FC9  168C               	bsf	12,5	;volatile
  6255  0FCA  0008               	return
  6256  0FCB                     __end_ofPL250:	
  6257  0FCB                     PL254:	
  6258  0FCB  30AC               	movlw	low _PID_CV_charge
  6259  0FCC  00AB               	movwf	pid_init@pp
  6260  0FCD  3002               	movlw	high _PID_CV_charge
  6261  0FCE  00AC               	movwf	pid_init@pp+1
  6262  0FCF  0008               	return
  6263  0FD0                     __end_ofPL254:	
  6264  0FD0                     PL258:	
  6265  0FD0  0020               	movlb	0	; select bank0
  6266  0FD1  00AB               	movwf	pid_init@pp
  6267  0FD2  3003               	movlw	high _PID_CC_charge
  6268  0FD3  00AC               	movwf	pid_init@pp+1
  6269  0FD4  0008               	return
  6270  0FD5                     __end_ofPL258:	
  6271  0FD5                     PL268:	
  6272  0FD5  01B5               	clrf	?___flmul+1
  6273  0FD6  01B6               	clrf	?___flmul+2
  6274  0FD7  01B7               	clrf	?___flmul+3
  6275  0FD8  0008               	return
  6276  0FD9                     __end_ofPL268:	
  6277  0FD9                     __ptext49:	
  6278 ;; *************** function i1_Set_Bost_Pwm_Duty *****************
  6279 ;; Defined at:
  6280 ;;		line 218 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  dduty           2    0[COMMON] unsigned int 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  Set_Bost_Pwm    2    0        unsigned int 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;		None               void
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 1F/1
  6291 ;;		On exit  : 1F/6
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_isr
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function i1_Set_Bost_Pwm_Duty
  6309  0FD9                     i1_Set_Bost_Pwm_Duty:	
  6310                           
  6311                           ;pwm.c: 224: bost_pwm_value=dduty;
  6312                           
  6313                           ;incstack = 0
  6314                           ; Regs used in i1_Set_Bost_Pwm_Duty: [wreg+status,2+status,0]
  6315  0FD9  0871               	movf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6316  0FDA  00A5               	movwf	(_bost_pwm_value+1)^(0+128)
  6317  0FDB  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6318  0FDC  00A4               	movwf	_bost_pwm_value^(0+128)
  6319                           
  6320                           ;pwm.c: 226: if(dduty<=900)
  6321  0FDD  3003               	movlw	3
  6322  0FDE  0271               	subwf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6323  0FDF  3085               	movlw	133
  6324  0FE0  1903               	skipnz
  6325  0FE1  0270               	subwf	i1Set_Bost_Pwm_Duty@dduty,w
  6326  0FE2  1803               	skipnc
  6327  0FE3  2FF9               	goto	i1l15546
  6328                           
  6329                           ;pwm.c: 227: {
  6330                           ;pwm.c: 228: CCPR3L=(unsigned char)(dduty>>2);
  6331  0FE4  0871               	movf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6332  0FE5  00F3               	movwf	??i1_Set_Bost_Pwm_Duty+1
  6333  0FE6  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6334  0FE7  00F2               	movwf	??i1_Set_Bost_Pwm_Duty
  6335  0FE8  36F3               	lsrf	??i1_Set_Bost_Pwm_Duty+1,f
  6336  0FE9  0CF2               	rrf	??i1_Set_Bost_Pwm_Duty,f
  6337  0FEA  36F3               	lsrf	??i1_Set_Bost_Pwm_Duty+1,f
  6338  0FEB  0CF2               	rrf	??i1_Set_Bost_Pwm_Duty,f
  6339  0FEC  0872               	movf	??i1_Set_Bost_Pwm_Duty,w
  6340  0FED  0026               	movlb	6	; select bank6
  6341  0FEE  0091               	movwf	17	;volatile
  6342                           
  6343                           ;pwm.c: 230: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  6344  0FEF  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6345  0FF0  3903               	andlw	3
  6346  0FF1  00F2               	movwf	??i1_Set_Bost_Pwm_Duty
  6347  0FF2  0EF2               	swapf	??i1_Set_Bost_Pwm_Duty,f
  6348  0FF3  0813               	movf	19,w	;volatile
  6349  0FF4  0672               	xorwf	??i1_Set_Bost_Pwm_Duty,w
  6350  0FF5  39CF               	andlw	-49
  6351  0FF6  0672               	xorwf	??i1_Set_Bost_Pwm_Duty,w
  6352  0FF7  0093               	movwf	19	;volatile
  6353                           
  6354                           ;pwm.c: 232: }
  6355  0FF8  0008               	return
  6356  0FF9                     i1l15546:	
  6357                           
  6358                           ;pwm.c: 237: CCPR3L=(unsigned char)(dduty>>2);
  6359  0FF9  30E1               	movlw	225
  6360  0FFA  0026               	movlb	6	; select bank6
  6361                           
  6362                           ;pwm.c: 239: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  6363  0FFB  2FFC               	ljmp	PL252	;call to abstracted procedure
  6364  0FFC                     __end_ofi1_Set_Bost_Pwm_Duty:	
  6365  0FFC                     PL252:	
  6366  0FFC  0091               	movwf	17	;volatile
  6367  0FFD  30CF               	movlw	-49
  6368  0FFE  0593               	andwf	19,f	;volatile
  6369  0FFF  0008               	return
  6370  1000                     __end_ofPL252:	
  6371                           
  6372                           	psect	bssCOMMON
  6373  007C                     __pbssCOMMON:	
  6374  007C                     _ho_cnt:	
  6375  007C                     	ds	2
  6376                           
  6377                           	psect	bssBANK0
  6378  006A                     __pbssBANK0:	
  6379  006A                     _battery_voltage_value:	
  6380  006A                     	ds	2
  6381  006C                     _today_index:	
  6382  006C                     	ds	1
  6383                           
  6384                           	psect	bssBANK1
  6385  00A0                     __pbssBANK1:	
  6386  00A0                     _PWM:	
  6387  00A0                     	ds	4
  6388  00A4                     _bost_pwm_value:	
  6389  00A4                     	ds	2
  6390  00A6                     _buck_pwm_value:	
  6391  00A6                     	ds	2
  6392  00A8                     _crc_data:	
  6393  00A8                     	ds	2
  6394  00AA                     _discharge_current_value:	
  6395  00AA                     	ds	2
  6396  00AC                     _load_voltage_value:	
  6397  00AC                     	ds	2
  6398  00AE                     _mcu_value:	
  6399  00AE                     	ds	2
  6400  00B0                     _pv_voltage_value:	
  6401  00B0                     	ds	2
  6402  00B2                     _Adjust_Pout_Flag:	
  6403  00B2                     	ds	1
  6404  00B3                     _charge_index:	
  6405  00B3                     	ds	1
  6406  00B4                     _device_status:	
  6407  00B4                     	ds	1
  6408  00B5                     _discharge_index:	
  6409  00B5                     	ds	1
  6410  00B6                     _have_person1_flag:	
  6411  00B6                     	ds	1
  6412  00B7                     _led_out_ctrl:	
  6413  00B7                     	ds	1
  6414  00B8                     _light_mode:	
  6415  00B8                     	ds	1
  6416  00B9                     _mcu_temp_index:	
  6417  00B9                     	ds	1
  6418  00BA                     _system_status:	
  6419  00BA                     	ds	1
  6420  00BB                     _uart1_receive_byte_count:	
  6421  00BB                     	ds	1
  6422  00BC                     _uart1_time_count:	
  6423  00BC                     	ds	1
  6424  00BD                     _work_mode:	
  6425  00BD                     	ds	1
  6426  00BE                     _light_time:	
  6427  00BE                     	ds	2
  6428                           
  6429                           	psect	dataBANK1
  6430  00DE                     __pdataBANK1:	
  6431  00DE                     _light_pv:	
  6432  00DE                     	ds	4
  6433  00E2                     _load_cc_I:	
  6434  00E2                     	ds	4
  6435  00E6                     _step_01_time_limit:	
  6436  00E6                     	ds	2
  6437  00E8                     _step_02_time_limit:	
  6438  00E8                     	ds	2
  6439  00EA                     _bt_id:	
  6440  00EA                     	ds	1
  6441  00EB                     _volt_id:	
  6442  00EB                     	ds	1
  6443  00EC                     _voltage_adjust_index:	
  6444  00EC                     	ds	1
  6445                           
  6446                           	psect	bssBANK2
  6447  0120                     __pbssBANK2:	
  6448  0120                     _b_v:	
  6449  0120                     	ds	4
  6450  0124                     _charge_current_value:	
  6451  0124                     	ds	2
  6452  0126                     _mi_cnt:	
  6453  0126                     	ds	2
  6454  0128                     _temperature_value:	
  6455  0128                     	ds	2
  6456  012A                     _battery_voltage_status:	
  6457  012A                     	ds	1
  6458  012B                     _handle_an0_process_flag:	
  6459  012B                     	ds	1
  6460  012C                     _handle_an10_process_flag:	
  6461  012C                     	ds	1
  6462  012D                     _handle_an1_process_flag:	
  6463  012D                     	ds	1
  6464  012E                     _handle_an2_process_flag:	
  6465  012E                     	ds	1
  6466  012F                     _handle_an3_process_flag:	
  6467  012F                     	ds	1
  6468  0130                     _handle_an4_process_flag:	
  6469  0130                     	ds	1
  6470  0131                     _handle_an9_process_flag:	
  6471  0131                     	ds	1
  6472  0132                     _handle_scan_key_flag:	
  6473  0132                     	ds	1
  6474  0133                     _handle_short_flag:	
  6475  0133                     	ds	1
  6476  0134                     _have_person1_time_count:	
  6477  0134                     	ds	1
  6478  0135                     _ird_receive_flag:	
  6479  0135                     	ds	1
  6480  0136                     _ird_receive_time_count:	
  6481  0136                     	ds	1
  6482  0137                     _ird_status:	
  6483  0137                     	ds	1
  6484  0138                     _open_an0_time:	
  6485  0138                     	ds	1
  6486  0139                     _open_an10_time:	
  6487  0139                     	ds	1
  6488  013A                     _open_an1_time:	
  6489  013A                     	ds	1
  6490  013B                     _open_an2_time:	
  6491  013B                     	ds	1
  6492  013C                     _open_an3_time:	
  6493  013C                     	ds	1
  6494  013D                     _open_an4_time:	
  6495  013D                     	ds	1
  6496  013E                     _open_an9_time:	
  6497  013E                     	ds	1
  6498  013F                     _open_discharge_time:	
  6499  013F                     	ds	1
  6500  0140                     _open_sleep_time:	
  6501  0140                     	ds	1
  6502  0141                     _pid_index:	
  6503  0141                     	ds	1
  6504  0142                     _pv_index:	
  6505  0142                     	ds	1
  6506  0143                     _pv_voltage_status:	
  6507  0143                     	ds	1
  6508  0144                     _receive_bit_count:	
  6509  0144                     	ds	1
  6510  0145                     _rx_frame_kind:	
  6511  0145                     	ds	1
  6512  0146                     _scan_key_time_count:	
  6513  0146                     	ds	1
  6514  0147                     _system_check_time:	
  6515  0147                     	ds	1
  6516  0148                     _t1:	
  6517  0148                     	ds	1
  6518  0149                     _t2:	
  6519  0149                     	ds	1
  6520  014A                     _t3:	
  6521  014A                     	ds	1
  6522  014B                     _t4:	
  6523  014B                     	ds	1
  6524  014C                     _uart1_receive_flag:	
  6525  014C                     	ds	1
  6526  014D                     _uart_send_byte_count:	
  6527  014D                     	ds	1
  6528  014E                     _uart_send_delay_timer:	
  6529  014E                     	ds	1
  6530  014F                     _uart_send_end_flag:	
  6531  014F                     	ds	1
  6532  0150                     _uart_send_point:	
  6533  0150                     	ds	1
  6534                           
  6535                           	psect	dataBANK2
  6536  0151                     __pdataBANK2:	
  6537  0151                     _dianchi_guoya_baohu:	
  6538  0151                     	ds	4
  6539  0155                     _step_01_load_percent:	
  6540  0155                     	ds	4
  6541  0159                     _step_02_load_percent:	
  6542  0159                     	ds	4
  6543  015D                     _step_03_load_percent:	
  6544  015D                     	ds	4
  6545  0161                     _step_04_load_percent:	
  6546  0161                     	ds	4
  6547  0165                     _step_05_load_percent:	
  6548  0165                     	ds	4
  6549  0169                     _step_03_time_limit:	
  6550  0169                     	ds	2
  6551  016B                     _step_04_time_limit:	
  6552  016B                     	ds	2
  6553  016D                     _step_05_time_limit:	
  6554  016D                     	ds	2
  6555  016F                     _sys_temper_flag:	
  6556  016F                     	ds	1
  6557                           
  6558                           	psect	bssBANK3
  6559  01A0                     __pbssBANK3:	
  6560  01A0                     _light_time_level:	
  6561  01A0                     	ds	4
  6562  01A4                     _I_prev:	
  6563  01A4                     	ds	2
  6564  01A6                     _an0_time_count:	
  6565  01A6                     	ds	2
  6566  01A8                     _an1_time_count:	
  6567  01A8                     	ds	2
  6568  01AA                     _an2_time_count:	
  6569  01AA                     	ds	2
  6570  01AC                     _an3_time_count:	
  6571  01AC                     	ds	2
  6572  01AE                     _an4_time_count:	
  6573  01AE                     	ds	2
  6574  01B0                     _an9_time_count:	
  6575  01B0                     	ds	2
  6576  01B2                     _load_short_time_count:	
  6577  01B2                     	ds	2
  6578  01B4                     _ms_cnt:	
  6579  01B4                     	ds	2
  6580  01B6                     _se_cnt:	
  6581  01B6                     	ds	2
  6582  01B8                     _system_time_count:	
  6583  01B8                     	ds	2
  6584  01BA                     _bt_time_count:	
  6585  01BA                     	ds	1
  6586  01BB                     _limit_power_pid_flag:	
  6587  01BB                     	ds	1
  6588  01BC                     _mcu_t00_time_count:	
  6589  01BC                     	ds	1
  6590  01BD                     _mcu_t01_time_count:	
  6591  01BD                     	ds	1
  6592  01BE                     _mcu_t02_time_count:	
  6593  01BE                     	ds	1
  6594  01BF                     _mcu_t03_time_count:	
  6595  01BF                     	ds	1
  6596  01C0                     _mppt_status:	
  6597  01C0                     	ds	1
  6598  01C1                     _nop_index:	
  6599  01C1                     	ds	1
  6600  01C2                     _over_temper_time_count:	
  6601  01C2                     	ds	1
  6602  01C3                     _run_index:	
  6603  01C3                     	ds	1
  6604  01C4                     _sys_mode:	
  6605  01C4                     	ds	1
  6606  01C5                     _t5:	
  6607  01C5                     	ds	1
  6608  01C6                     _temper_time_count:	
  6609  01C6                     	ds	1
  6610  01C7                     _PID_CC_discharge:	
  6611  01C7                     	ds	28
  6612                           
  6613                           	psect	dataBANK3
  6614  01E3                     __pdataBANK3:	
  6615  01E3                     _dianchi_cv_level:	
  6616  01E3                     	ds	4
  6617  01E7                     _dianchi_guoya_huifu:	
  6618  01E7                     	ds	4
  6619  01EB                     _shuchu_shortout_voltage:	
  6620  01EB                     	ds	4
  6621                           
  6622                           	psect	bssBANK4
  6623  0220                     __pbssBANK4:	
  6624  0220                     _bt_00_hv:	
  6625  0220                     	ds	4
  6626  0224                     _bt_00_lv:	
  6627  0224                     	ds	4
  6628  0228                     _charge_I:	
  6629  0228                     	ds	4
  6630  022C                     _load_I:	
  6631  022C                     	ds	4
  6632  0230                     _load_v:	
  6633  0230                     	ds	4
  6634  0234                     _night_time_count:	
  6635  0234                     	ds	4
  6636  0238                     _p_v:	
  6637  0238                     	ds	4
  6638  023C                     _an10_time_count:	
  6639  023C                     	ds	2
  6640  023E                     _battery_low_time_count:	
  6641  023E                     	ds	2
  6642  0240                     _cv_level_time_count:	
  6643  0240                     	ds	2
  6644  0242                     _index_01_count:	
  6645  0242                     	ds	2
  6646  0244                     _index_02_count:	
  6647  0244                     	ds	2
  6648  0246                     _index_03_count:	
  6649  0246                     	ds	2
  6650  0248                     _index_04_count:	
  6651  0248                     	ds	2
  6652  024A                     _index_05_count:	
  6653  024A                     	ds	2
  6654  024C                     _index_06_count:	
  6655  024C                     	ds	2
  6656  024E                     _involid_time_count:	
  6657  024E                     	ds	2
  6658  0250                     _load_open_time_count:	
  6659  0250                     	ds	2
  6660  0252                     _mppt_time_count:	
  6661  0252                     	ds	2
  6662  0254                     _over_load_time_count:	
  6663  0254                     	ds	2
  6664  0256                     _sleep_time_count:	
  6665  0256                     	ds	2
  6666                           
  6667                           	psect	dataBANK4
  6668  0258                     __pdataBANK4:	
  6669  0258                     _bt_volt_00:	
  6670  0258                     	ds	4
  6671  025C                     _bt_volt_20:	
  6672  025C                     	ds	4
  6673  0260                     _bt_volt_40:	
  6674  0260                     	ds	4
  6675  0264                     _bt_volt_60:	
  6676  0264                     	ds	4
  6677  0268                     _bt_volt_80:	
  6678  0268                     	ds	4
  6679  026C                     _ird_data:	
  6680  026C                     	ds	4
  6681                           
  6682                           	psect	bssBANK5
  6683  02A0                     __pbssBANK5:	
  6684  02A0                     _PWM_I:	
  6685  02A0                     	ds	4
  6686  02A4                     _day_time_count:	
  6687  02A4                     	ds	4
  6688  02A8                     _pv_time_count:	
  6689  02A8                     	ds	4
  6690  02AC                     _PID_CV_charge:	
  6691  02AC                     	ds	28
  6692                           
  6693                           	psect	dataBANK5
  6694  02C8                     __pdataBANK5:	
  6695  02C8                     _Load_Pmax:	
  6696  02C8                     	ds	4
  6697  02CC                     _charge_i_limit:	
  6698  02CC                     	ds	4
  6699  02D0                     _dianchi_qianya_baohu:	
  6700  02D0                     	ds	4
  6701  02D4                     _dianchi_qianya_huifu:	
  6702  02D4                     	ds	4
  6703  02D8                     _discharge_i_baohu:	
  6704  02D8                     	ds	4
  6705  02DC                     _discharge_i_limit:	
  6706  02DC                     	ds	4
  6707  02E0                     _light_off_pv_level:	
  6708  02E0                     	ds	4
  6709  02E4                     _light_on_pv_level:	
  6710  02E4                     	ds	4
  6711  02E8                     _shuchu_open_voltage:	
  6712  02E8                     	ds	4
  6713                           
  6714                           	psect	bssBANK6
  6715  0320                     __pbssBANK6:	
  6716  0320                     _PID_CC_charge:	
  6717  0320                     	ds	28
  6718                           
  6719                           	psect	bssBANK7
  6720  03A0                     __pbssBANK7:	
  6721  03A0                     _uart1_tx_buf:	
  6722  03A0                     	ds	80
  6723                           
  6724                           	psect	bssBANK8
  6725  0420                     __pbssBANK8:	
  6726  0420                     _uart1_rx_buf:	
  6727  0420                     	ds	80
  6728                           
  6729                           	psect	clrtext
  6730  0895                     clear_ram0:	
  6731                           ;	Called with FSR0 containing the base address, and
  6732                           ;	btemp/btemp+1 has the size to clear
  6733                           
  6734  0895  0064               	clrwdt	;clear the watchdog before getting into this loop
  6735  0896                     clrloop0:	
  6736  0896  3001               	movlw	1
  6737  0897  0180               	clrf	0	;clear RAM location pointed to by FSR
  6738  0898  3101               	addfsr 0,1
  6739  0899  02FE               	subwf	126,f
  6740  089A  3000               	movlw	0
  6741  089B  3BFF               	subwfb	127,f
  6742  089C  087F               	movf	127,w
  6743  089D  047E               	iorwf	126,w
  6744  089E  1903               	btfsc	3,2
  6745  089F  3400               	retlw	0	;all done for this memory range, return
  6746  08A0  2896               	goto	clrloop0	;have we reached the end yet?
  6747                           
  6748                           	psect	inittext
  6749  0889                     init_ram:	
  6750  0889  00FE               	movwf	126
  6751  088A                     initloop:	
  6752  088A  0012               	moviw fsr0++
  6753  088B  001E               	movwi fsr1++
  6754  088C  3001               	movlw	1
  6755  088D  02FE               	subwf	126,f
  6756  088E  3000               	movlw	0
  6757  088F  3BFF               	subwfb	127,f
  6758  0890  087F               	movf	127,w
  6759  0891  047E               	iorwf	126,w
  6760  0892  1903               	btfsc	3,2
  6761  0893  3400               	retlw	0
  6762  0894  288A               	goto	initloop
  6763                           
  6764                           	psect	cstackBANK5
  6765  02EC                     __pcstackBANK5:	
  6766  02EC                     handle_ad_loop@data_cc_var:	
  6767                           
  6768                           ; 4 bytes @ 0x0
  6769  02EC                     	ds	4
  6770                           
  6771                           	psect	cstackBANK1
  6772  00C0                     __pcstackBANK1:	
  6773  00C0                     ??_pid_calc:	
  6774  00C0                     start_ad_convert@ch:	
  6775                           ; 0 bytes @ 0x0
  6776                           
  6777                           
  6778                           ; 1 bytes @ 0x0
  6779  00C0                     	ds	1
  6780  00C1                     start_ad_convert@ad_h:	
  6781                           
  6782                           ; 2 bytes @ 0x1
  6783  00C1                     	ds	1
  6784  00C2                     Key_Menu@code:	
  6785                           
  6786                           ; 1 bytes @ 0x2
  6787  00C2                     	ds	1
  6788  00C3                     start_ad_convert@ad_l:	
  6789                           
  6790                           ; 2 bytes @ 0x3
  6791  00C3                     	ds	1
  6792  00C4                     pid_calc@dError:	
  6793                           
  6794                           ; 4 bytes @ 0x4
  6795  00C4                     	ds	1
  6796  00C5                     start_ad_convert@temp:	
  6797                           
  6798                           ; 2 bytes @ 0x5
  6799  00C5                     	ds	2
  6800  00C7                     start_ad_convert@ad_ch:	
  6801                           
  6802                           ; 1 bytes @ 0x7
  6803  00C7                     	ds	1
  6804  00C8                     start_ad_convert@j:	
  6805  00C8                     _pid_calc$2854:	
  6806                           ; 1 bytes @ 0x8
  6807                           
  6808                           
  6809                           ; 4 bytes @ 0x8
  6810  00C8                     	ds	1
  6811  00C9                     start_ad_convert@i:	
  6812                           
  6813                           ; 1 bytes @ 0x9
  6814  00C9                     	ds	3
  6815  00CC                     _pid_calc$2855:	
  6816                           
  6817                           ; 4 bytes @ 0xC
  6818  00CC                     	ds	4
  6819  00D0                     pid_calc@dk:	
  6820                           
  6821                           ; 4 bytes @ 0x10
  6822  00D0                     	ds	4
  6823  00D4                     pid_calc@Error:	
  6824                           
  6825                           ; 4 bytes @ 0x14
  6826  00D4                     	ds	4
  6827  00D8                     pid_calc@PWM_var:	
  6828                           
  6829                           ; 4 bytes @ 0x18
  6830  00D8                     	ds	4
  6831  00DC                     ??_handle_ad_loop:	
  6832                           
  6833                           ; 0 bytes @ 0x1C
  6834  00DC                     	ds	2
  6835                           
  6836                           	psect	cstackCOMMON
  6837  0070                     __pcstackCOMMON:	
  6838  0070                     ?_Disable_Bost_Pwm:	
  6839  0070                     ?_Disable_Buck_Pwm:	
  6840                           ; 0 bytes @ 0x0
  6841                           
  6842  0070                     ?_Enable_Bost_Pwm:	
  6843                           ; 0 bytes @ 0x0
  6844                           
  6845  0070                     ?_init_timer1:	
  6846                           ; 0 bytes @ 0x0
  6847                           
  6848  0070                     ?_init_uart1:	
  6849                           ; 0 bytes @ 0x0
  6850                           
  6851  0070                     ?_init_pwm:	
  6852                           ; 0 bytes @ 0x0
  6853                           
  6854  0070                     ?_handle_ad_loop:	
  6855                           ; 0 bytes @ 0x0
  6856                           
  6857  0070                     ?_handle_task_process:	
  6858                           ; 0 bytes @ 0x0
  6859                           
  6860  0070                     ?_handle_uart_rx_buf:	
  6861                           ; 0 bytes @ 0x0
  6862                           
  6863  0070                     ?_Mppt_Charge:	
  6864                           ; 0 bytes @ 0x0
  6865                           
  6866  0070                     ?_init_adc:	
  6867                           ; 0 bytes @ 0x0
  6868                           
  6869  0070                     ?_isr:	
  6870                           ; 0 bytes @ 0x0
  6871                           
  6872  0070                     ?_init_interrupt:	
  6873                           ; 0 bytes @ 0x0
  6874                           
  6875  0070                     ?_read_param_eeprom:	
  6876                           ; 0 bytes @ 0x0
  6877                           
  6878  0070                     ?_auto_system:	
  6879                           ; 0 bytes @ 0x0
  6880                           
  6881  0070                     ?_Init_Ird:	
  6882                           ; 0 bytes @ 0x0
  6883                           
  6884  0070                     ?_init_key:	
  6885                           ; 0 bytes @ 0x0
  6886                           
  6887  0070                     ?_init_osc:	
  6888                           ; 0 bytes @ 0x0
  6889                           
  6890  0070                     ?_init_port:	
  6891                           ; 0 bytes @ 0x0
  6892                           
  6893  0070                     ?_driver_init:	
  6894                           ; 0 bytes @ 0x0
  6895                           
  6896  0070                     ?_middle_init:	
  6897                           ; 0 bytes @ 0x0
  6898                           
  6899  0070                     ?_application_init:	
  6900                           ; 0 bytes @ 0x0
  6901                           
  6902  0070                     ?_Enable_Buck_Pwm:	
  6903                           ; 0 bytes @ 0x0
  6904                           
  6905  0070                     ?i1_Disable_Bost_Pwm:	
  6906                           ; 0 bytes @ 0x0
  6907                           
  6908  0070                     ??i1_Disable_Bost_Pwm:	
  6909                           ; 0 bytes @ 0x0
  6910                           
  6911  0070                     ?i1_Set_Bost_Pwm_Duty:	
  6912                           ; 0 bytes @ 0x0
  6913                           
  6914  0070                     ?_eeprom_read:	
  6915                           ; 0 bytes @ 0x0
  6916                           
  6917  0070                     ?_main:	
  6918                           ; 1 bytes @ 0x0
  6919                           
  6920  0070                     i1Set_Bost_Pwm_Duty@dduty:	
  6921                           ; 2 bytes @ 0x0
  6922                           
  6923                           
  6924                           ; 2 bytes @ 0x0
  6925  0070                     	ds	2
  6926  0072                     ??i1_Set_Bost_Pwm_Duty:	
  6927                           
  6928                           ; 0 bytes @ 0x2
  6929  0072                     	ds	2
  6930  0074                     ??_isr:	
  6931                           
  6932                           ; 0 bytes @ 0x4
  6933  0074                     	ds	8
  6934                           
  6935                           	psect	cstackBANK0
  6936  0020                     __pcstackBANK0:	
  6937  0020                     isr@r1_data:	
  6938                           
  6939                           ; 1 bytes @ 0x0
  6940  0020                     	ds	1
  6941  0021                     isr@time_cnt:	
  6942                           
  6943                           ; 2 bytes @ 0x1
  6944  0021                     	ds	2
  6945  0023                     ?_Set_Bost_Pwm_Duty:	
  6946  0023                     ??_Disable_Bost_Pwm:	
  6947                           ; 0 bytes @ 0x3
  6948                           
  6949  0023                     ??_eeprom_read:	
  6950                           ; 0 bytes @ 0x3
  6951                           
  6952  0023                     ??_Disable_Buck_Pwm:	
  6953                           ; 0 bytes @ 0x3
  6954                           
  6955  0023                     ?_Set_Buck_Pwm_Duty:	
  6956                           ; 0 bytes @ 0x3
  6957                           
  6958  0023                     ??_Enable_Bost_Pwm:	
  6959                           ; 0 bytes @ 0x3
  6960                           
  6961  0023                     ??_init_timer1:	
  6962                           ; 0 bytes @ 0x3
  6963                           
  6964  0023                     ??_init_uart1:	
  6965                           ; 0 bytes @ 0x3
  6966                           
  6967  0023                     ??_init_pwm:	
  6968                           ; 0 bytes @ 0x3
  6969                           
  6970  0023                     ??_init_adc:	
  6971                           ; 0 bytes @ 0x3
  6972                           
  6973  0023                     ?_delay_ms:	
  6974                           ; 0 bytes @ 0x3
  6975                           
  6976  0023                     ??_init_interrupt:	
  6977                           ; 0 bytes @ 0x3
  6978                           
  6979  0023                     ??_Init_Ird:	
  6980                           ; 0 bytes @ 0x3
  6981                           
  6982  0023                     ??_init_key:	
  6983                           ; 0 bytes @ 0x3
  6984                           
  6985  0023                     ??_init_osc:	
  6986                           ; 0 bytes @ 0x3
  6987                           
  6988  0023                     ??_init_port:	
  6989                           ; 0 bytes @ 0x3
  6990                           
  6991  0023                     ??_driver_init:	
  6992                           ; 0 bytes @ 0x3
  6993                           
  6994  0023                     ??_Enable_Buck_Pwm:	
  6995                           ; 0 bytes @ 0x3
  6996                           
  6997  0023                     ?_memset:	
  6998                           ; 0 bytes @ 0x3
  6999                           
  7000  0023                     ?_crc16:	
  7001                           ; 2 bytes @ 0x3
  7002                           
  7003  0023                     ?___wmul:	
  7004                           ; 2 bytes @ 0x3
  7005                           
  7006  0023                     ?___flpack:	
  7007                           ; 2 bytes @ 0x3
  7008                           
  7009  0023                     ?___lldiv:	
  7010                           ; 4 bytes @ 0x3
  7011                           
  7012  0023                     ?___lmul:	
  7013                           ; 4 bytes @ 0x3
  7014                           
  7015  0023                     eeprom_read@addr:	
  7016                           ; 4 bytes @ 0x3
  7017                           
  7018  0023                     delay_ms@count:	
  7019                           ; 1 bytes @ 0x3
  7020                           
  7021  0023                     crc16@puchMsg:	
  7022                           ; 2 bytes @ 0x3
  7023                           
  7024  0023                     Set_Buck_Pwm_Duty@duty:	
  7025                           ; 2 bytes @ 0x3
  7026                           
  7027  0023                     Set_Bost_Pwm_Duty@dduty:	
  7028                           ; 2 bytes @ 0x3
  7029                           
  7030  0023                     memset@p1:	
  7031                           ; 2 bytes @ 0x3
  7032                           
  7033  0023                     ___wmul@multiplier:	
  7034                           ; 2 bytes @ 0x3
  7035                           
  7036  0023                     ___flpack@arg:	
  7037                           ; 2 bytes @ 0x3
  7038                           
  7039  0023                     ___lldiv@divisor:	
  7040                           ; 4 bytes @ 0x3
  7041                           
  7042  0023                     ___lmul@multiplier:	
  7043                           ; 4 bytes @ 0x3
  7044                           
  7045                           
  7046                           ; 4 bytes @ 0x3
  7047  0023                     	ds	2
  7048  0025                     ??_Set_Bost_Pwm_Duty:	
  7049  0025                     ??_Set_Buck_Pwm_Duty:	
  7050                           ; 0 bytes @ 0x5
  7051                           
  7052  0025                     ??_delay_ms:	
  7053                           ; 0 bytes @ 0x5
  7054                           
  7055  0025                     crc16@usDataLen:	
  7056                           ; 0 bytes @ 0x5
  7057                           
  7058  0025                     delay_ms@i:	
  7059                           ; 1 bytes @ 0x5
  7060                           
  7061  0025                     memset@c:	
  7062                           ; 2 bytes @ 0x5
  7063                           
  7064  0025                     ___wmul@multiplicand:	
  7065                           ; 2 bytes @ 0x5
  7066                           
  7067                           
  7068                           ; 2 bytes @ 0x5
  7069  0025                     	ds	1
  7070  0026                     ??_crc16:	
  7071  0026                     crc16@uIndex:	
  7072                           ; 0 bytes @ 0x6
  7073                           
  7074                           
  7075                           ; 4 bytes @ 0x6
  7076  0026                     	ds	1
  7077  0027                     ??___wmul:	
  7078  0027                     ___flpack@exp:	
  7079                           ; 0 bytes @ 0x7
  7080                           
  7081  0027                     delay_ms@j:	
  7082                           ; 1 bytes @ 0x7
  7083                           
  7084  0027                     memset@n:	
  7085                           ; 2 bytes @ 0x7
  7086                           
  7087  0027                     ___wmul@product:	
  7088                           ; 2 bytes @ 0x7
  7089                           
  7090  0027                     ___lldiv@dividend:	
  7091                           ; 2 bytes @ 0x7
  7092                           
  7093  0027                     ___lmul@multiplicand:	
  7094                           ; 4 bytes @ 0x7
  7095                           
  7096                           
  7097                           ; 4 bytes @ 0x7
  7098  0027                     	ds	1
  7099  0028                     ___flpack@sign:	
  7100                           
  7101                           ; 1 bytes @ 0x8
  7102  0028                     	ds	1
  7103  0029                     ??_memset:	
  7104  0029                     ??___flpack:	
  7105                           ; 0 bytes @ 0x9
  7106                           
  7107  0029                     ?___lwdiv:	
  7108                           ; 0 bytes @ 0x9
  7109                           
  7110  0029                     ___lwdiv@divisor:	
  7111                           ; 2 bytes @ 0x9
  7112                           
  7113  0029                     memset@p:	
  7114                           ; 2 bytes @ 0x9
  7115                           
  7116                           
  7117                           ; 2 bytes @ 0x9
  7118  0029                     	ds	1
  7119  002A                     crc16@uchCRCHi:	
  7120                           
  7121                           ; 1 bytes @ 0xA
  7122  002A                     	ds	1
  7123  002B                     ?_pid_init:	
  7124  002B                     ??___lldiv:	
  7125                           ; 0 bytes @ 0xB
  7126                           
  7127  002B                     ??___lmul:	
  7128                           ; 0 bytes @ 0xB
  7129                           
  7130  002B                     crc16@uchCRCLo:	
  7131                           ; 0 bytes @ 0xB
  7132                           
  7133  002B                     pid_init@pp:	
  7134                           ; 1 bytes @ 0xB
  7135                           
  7136  002B                     ___lwdiv@dividend:	
  7137                           ; 2 bytes @ 0xB
  7138                           
  7139  002B                     ___lldiv@quotient:	
  7140                           ; 2 bytes @ 0xB
  7141                           
  7142  002B                     ___lmul@product:	
  7143                           ; 4 bytes @ 0xB
  7144                           
  7145                           
  7146                           ; 4 bytes @ 0xB
  7147  002B                     	ds	2
  7148  002D                     ??_pid_init:	
  7149  002D                     ??___lwdiv:	
  7150                           ; 0 bytes @ 0xD
  7151                           
  7152  002D                     ?___awtofl:	
  7153                           ; 0 bytes @ 0xD
  7154                           
  7155  002D                     ?___lbtofl:	
  7156                           ; 4 bytes @ 0xD
  7157                           
  7158  002D                     ___lwdiv@counter:	
  7159                           ; 4 bytes @ 0xD
  7160                           
  7161  002D                     ___awtofl@c:	
  7162                           ; 1 bytes @ 0xD
  7163                           
  7164                           
  7165                           ; 2 bytes @ 0xD
  7166  002D                     	ds	1
  7167  002E                     ___lwdiv@quotient:	
  7168                           
  7169                           ; 2 bytes @ 0xE
  7170  002E                     	ds	1
  7171  002F                     ___lldiv@counter:	
  7172                           
  7173                           ; 1 bytes @ 0xF
  7174  002F                     	ds	1
  7175  0030                     ?_start_ad_convert:	
  7176  0030                     ?___lwtofl:	
  7177                           ; 2 bytes @ 0x10
  7178                           
  7179  0030                     ___lwtofl@c:	
  7180                           ; 4 bytes @ 0x10
  7181                           
  7182                           
  7183                           ; 2 bytes @ 0x10
  7184  0030                     	ds	1
  7185  0031                     ??___awtofl:	
  7186  0031                     ___awtofl@sign:	
  7187                           ; 0 bytes @ 0x11
  7188                           
  7189                           
  7190                           ; 1 bytes @ 0x11
  7191  0031                     	ds	1
  7192  0032                     ??_start_ad_convert:	
  7193  0032                     ??___lbtofl:	
  7194                           ; 0 bytes @ 0x12
  7195                           
  7196  0032                     ___lbtofl@c:	
  7197                           ; 0 bytes @ 0x12
  7198                           
  7199                           
  7200                           ; 1 bytes @ 0x12
  7201  0032                     	ds	2
  7202  0034                     ??___lwtofl:	
  7203  0034                     ?___flmul:	
  7204                           ; 0 bytes @ 0x14
  7205                           
  7206  0034                     ___flmul@f1:	
  7207                           ; 4 bytes @ 0x14
  7208                           
  7209                           
  7210                           ; 4 bytes @ 0x14
  7211  0034                     	ds	4
  7212  0038                     ___flmul@f2:	
  7213                           
  7214                           ; 4 bytes @ 0x18
  7215  0038                     	ds	4
  7216  003C                     ??___flmul:	
  7217                           
  7218                           ; 0 bytes @ 0x1C
  7219  003C                     	ds	4
  7220  0040                     ___flmul@exp:	
  7221                           
  7222                           ; 1 bytes @ 0x20
  7223  0040                     	ds	1
  7224  0041                     ___flmul@f3_as_product:	
  7225                           
  7226                           ; 4 bytes @ 0x21
  7227  0041                     	ds	4
  7228  0045                     ___flmul@cntr:	
  7229                           
  7230                           ; 1 bytes @ 0x25
  7231  0045                     	ds	1
  7232  0046                     ___flmul@sign:	
  7233                           
  7234                           ; 1 bytes @ 0x26
  7235  0046                     	ds	1
  7236  0047                     ?___fladd:	
  7237  0047                     ?___fldiv:	
  7238                           ; 4 bytes @ 0x27
  7239                           
  7240  0047                     ___fladd@f1:	
  7241                           ; 4 bytes @ 0x27
  7242                           
  7243  0047                     ___fldiv@f2:	
  7244                           ; 4 bytes @ 0x27
  7245                           
  7246                           
  7247                           ; 4 bytes @ 0x27
  7248  0047                     	ds	4
  7249  004B                     ___fladd@f2:	
  7250  004B                     ___fldiv@f1:	
  7251                           ; 4 bytes @ 0x2B
  7252                           
  7253                           
  7254                           ; 4 bytes @ 0x2B
  7255  004B                     	ds	4
  7256  004F                     ??___fladd:	
  7257  004F                     ??___fldiv:	
  7258                           ; 0 bytes @ 0x2F
  7259                           
  7260                           
  7261                           ; 0 bytes @ 0x2F
  7262  004F                     	ds	4
  7263  0053                     ___fladd@sign:	
  7264  0053                     ___fldiv@f3:	
  7265                           ; 1 bytes @ 0x33
  7266                           
  7267                           
  7268                           ; 4 bytes @ 0x33
  7269  0053                     	ds	1
  7270  0054                     ___fladd@exp2:	
  7271                           
  7272                           ; 1 bytes @ 0x34
  7273  0054                     	ds	1
  7274  0055                     ___fladd@exp1:	
  7275                           
  7276                           ; 1 bytes @ 0x35
  7277  0055                     	ds	1
  7278  0056                     ?___flsub:	
  7279  0056                     ___flsub@f2:	
  7280                           ; 4 bytes @ 0x36
  7281                           
  7282                           
  7283                           ; 4 bytes @ 0x36
  7284  0056                     	ds	1
  7285  0057                     ___fldiv@cntr:	
  7286                           
  7287                           ; 1 bytes @ 0x37
  7288  0057                     	ds	1
  7289  0058                     ___fldiv@exp:	
  7290                           
  7291                           ; 1 bytes @ 0x38
  7292  0058                     	ds	1
  7293  0059                     ___fldiv@sign:	
  7294                           
  7295                           ; 1 bytes @ 0x39
  7296  0059                     	ds	1
  7297  005A                     ??_read_param_eeprom:	
  7298  005A                     ??_application_init:	
  7299                           ; 0 bytes @ 0x3A
  7300                           
  7301  005A                     ?___flge:	
  7302                           ; 0 bytes @ 0x3A
  7303                           
  7304  005A                     ?___fltol:	
  7305                           ; 1 bit 
  7306                           
  7307  005A                     read_param_eeprom@byte_h:	
  7308                           ; 4 bytes @ 0x3A
  7309                           
  7310  005A                     ___flge@ff1:	
  7311                           ; 1 bytes @ 0x3A
  7312                           
  7313  005A                     ___flsub@f1:	
  7314                           ; 4 bytes @ 0x3A
  7315                           
  7316  005A                     ___fltol@f1:	
  7317                           ; 4 bytes @ 0x3A
  7318                           
  7319                           
  7320                           ; 4 bytes @ 0x3A
  7321  005A                     	ds	1
  7322  005B                     read_param_eeprom@byte_l:	
  7323                           
  7324                           ; 1 bytes @ 0x3B
  7325  005B                     	ds	3
  7326  005E                     ??___flsub:	
  7327  005E                     ??___fltol:	
  7328                           ; 0 bytes @ 0x3E
  7329                           
  7330  005E                     ___flge@ff2:	
  7331                           ; 0 bytes @ 0x3E
  7332                           
  7333                           
  7334                           ; 4 bytes @ 0x3E
  7335  005E                     	ds	4
  7336  0062                     ??___flge:	
  7337  0062                     ___fltol@sign1:	
  7338                           ; 0 bytes @ 0x42
  7339                           
  7340                           
  7341                           ; 1 bytes @ 0x42
  7342  0062                     	ds	1
  7343  0063                     ___fltol@exp1:	
  7344                           
  7345                           ; 1 bytes @ 0x43
  7346  0063                     	ds	1
  7347  0064                     ?_eeprom_write:	
  7348  0064                     eeprom_write@value:	
  7349                           ; 0 bytes @ 0x44
  7350                           
  7351                           
  7352                           ; 1 bytes @ 0x44
  7353  0064                     	ds	1
  7354  0065                     ??_eeprom_write:	
  7355  0065                     eeprom_write@addr:	
  7356                           ; 0 bytes @ 0x45
  7357                           
  7358                           
  7359                           ; 1 bytes @ 0x45
  7360  0065                     	ds	1
  7361  0066                     ??_handle_task_process:	
  7362  0066                     ??_handle_uart_rx_buf:	
  7363                           ; 0 bytes @ 0x46
  7364                           
  7365  0066                     ??_auto_system:	
  7366                           ; 0 bytes @ 0x46
  7367                           
  7368  0066                     ?_Key_Menu:	
  7369                           ; 0 bytes @ 0x46
  7370                           
  7371  0066                     ?_pid_calc:	
  7372                           ; 0 bytes @ 0x46
  7373                           
  7374  0066                     pid_calc@pp:	
  7375                           ; 4 bytes @ 0x46
  7376                           
  7377  0066                     handle_uart_rx_buf@crc_in:	
  7378                           ; 2 bytes @ 0x46
  7379                           
  7380  0066                     auto_system@sys_bt_voltage:	
  7381                           ; 2 bytes @ 0x46
  7382                           
  7383  0066                     Key_Menu@key_value:	
  7384                           ; 4 bytes @ 0x46
  7385                           
  7386                           
  7387                           ; 4 bytes @ 0x46
  7388  0066                     	ds	2
  7389  0068                     pid_calc@NowPoint:	
  7390                           
  7391                           ; 2 bytes @ 0x48
  7392  0068                     	ds	2
  7393  006A                     ??_Mppt_Charge:	
  7394  006A                     ??_Key_Menu:	
  7395                           ; 0 bytes @ 0x4A
  7396                           
  7397  006A                     ??_middle_init:	
  7398                           ; 0 bytes @ 0x4A
  7399                           
  7400  006A                     ??_main:	
  7401                           ; 0 bytes @ 0x4A
  7402                           
  7403                           
  7404                           	psect	text2
  7405  21D7                     __ptext2:	
  7406 ;; *************** function _read_param_eeprom *****************
  7407 ;; Defined at:
  7408 ;;		line 181 in file "D:\MCUProject\ZH-SL-F60\src\ird_remote.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  byte_l          1   59[BANK0 ] unsigned char 
  7413 ;;  byte_h          1   58[BANK0 ] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;		None               void
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, pclath, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/2
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        2 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    4
  7430 ;; This function calls:
  7431 ;;		___awtofl
  7432 ;;		___fldiv
  7433 ;;		___flmul
  7434 ;;		___lbtofl
  7435 ;;		___lmul
  7436 ;;		_eeprom_read
  7437 ;; This function is called by:
  7438 ;;		_middle_init
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _read_param_eeprom
  7444  21D7                     _read_param_eeprom:	
  7445  21D7                     l16588:	
  7446                           ;incstack = 0
  7447                           ; Regs used in _read_param_eeprom: [wreg+status,2+status,0+pclath+cstack]
  7448                           
  7449                           
  7450                           ;ird_remote.c: 183: unsigned char byte_h,byte_l;
  7451                           ;ird_remote.c: 186: byte_h=eeprom_read(0x00);
  7452  21D7  3000               	movlw	0
  7453  21D8  24EB  31A1         	fcall	_eeprom_read
  7454  21DA  0020               	movlb	0	; select bank0
  7455  21DB  00DA               	movwf	read_param_eeprom@byte_h
  7456                           
  7457                           ;ird_remote.c: 188: byte_l=eeprom_read(0x01);
  7458  21DC  3001               	movlw	1
  7459  21DD  24EB  31A1         	fcall	_eeprom_read
  7460                           
  7461                           ;ird_remote.c: 190: light_pv=(byte_h<<8)|byte_l;
  7462  21DF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7463  21E1  2751  31A1         	fcall	___awtofl
  7464  21E3  0830               	movf	?___awtofl+3,w
  7465  21E4  0021               	movlb	1	; select bank1
  7466  21E5  00E1               	movwf	(_light_pv+3)^(0+128)
  7467  21E6  0020               	movlb	0	; select bank0
  7468  21E7  082F               	movf	?___awtofl+2,w
  7469  21E8  0021               	movlb	1	; select bank1
  7470  21E9  00E0               	movwf	(_light_pv+2)^(0+128)
  7471  21EA  0020               	movlb	0	; select bank0
  7472  21EB  082E               	movf	?___awtofl+1,w
  7473  21EC  0021               	movlb	1	; select bank1
  7474  21ED  00DF               	movwf	(_light_pv+1)^(0+128)
  7475  21EE  0020               	movlb	0	; select bank0
  7476  21EF  082D               	movf	?___awtofl,w
  7477  21F0  0021               	movlb	1	; select bank1
  7478  21F1  00DE               	movwf	_light_pv^(0+128)
  7479                           
  7480                           ;ird_remote.c: 194: byte_h=eeprom_read(0x02);
  7481  21F2  3002               	movlw	2
  7482  21F3  24EB  31A1         	fcall	_eeprom_read
  7483  21F5  0020               	movlb	0	; select bank0
  7484  21F6  00DA               	movwf	read_param_eeprom@byte_h
  7485                           
  7486                           ;ird_remote.c: 196: byte_l=eeprom_read(0x03);
  7487  21F7  3003               	movlw	3
  7488  21F8  24EB  31A1         	fcall	_eeprom_read
  7489                           
  7490                           ;ird_remote.c: 198: load_cc_I=(byte_h<<8)|byte_l;
  7491  21FA  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7492  21FC  2751  31A1         	fcall	___awtofl
  7493  21FE  0830               	movf	?___awtofl+3,w
  7494  21FF  0021               	movlb	1	; select bank1
  7495  2200  00E5               	movwf	(_load_cc_I+3)^(0+128)
  7496  2201  0020               	movlb	0	; select bank0
  7497  2202  082F               	movf	?___awtofl+2,w
  7498  2203  0021               	movlb	1	; select bank1
  7499  2204  00E4               	movwf	(_load_cc_I+2)^(0+128)
  7500  2205  0020               	movlb	0	; select bank0
  7501  2206  082E               	movf	?___awtofl+1,w
  7502  2207  0021               	movlb	1	; select bank1
  7503  2208  00E3               	movwf	(_load_cc_I+1)^(0+128)
  7504  2209  0020               	movlb	0	; select bank0
  7505  220A  082D               	movf	?___awtofl,w
  7506  220B  0021               	movlb	1	; select bank1
  7507  220C  00E2               	movwf	_load_cc_I^(0+128)
  7508                           
  7509                           ;ird_remote.c: 202: byte_l=eeprom_read(0x04);
  7510  220D  3004               	movlw	4
  7511  220E  24EB  31A1         	fcall	_eeprom_read
  7512  2210  0020               	movlb	0	; select bank0
  7513  2211  00DB               	movwf	read_param_eeprom@byte_l
  7514                           
  7515                           ;ird_remote.c: 204: step_01_load_percent=byte_l;
  7516  2212  2502  31A1         	fcall	___lbtofl
  7517  2214  0830               	movf	?___lbtofl+3,w
  7518  2215  0022               	movlb	2	; select bank2
  7519  2216  00D8               	movwf	(_step_01_load_percent+3)^(0+256)
  7520  2217  0020               	movlb	0	; select bank0
  7521  2218  082F               	movf	?___lbtofl+2,w
  7522  2219  0022               	movlb	2	; select bank2
  7523  221A  00D7               	movwf	(_step_01_load_percent+2)^(0+256)
  7524  221B  0020               	movlb	0	; select bank0
  7525  221C  082E               	movf	?___lbtofl+1,w
  7526  221D  0022               	movlb	2	; select bank2
  7527  221E  00D6               	movwf	(_step_01_load_percent+1)^(0+256)
  7528  221F  0020               	movlb	0	; select bank0
  7529  2220  082D               	movf	?___lbtofl,w
  7530  2221  0022               	movlb	2	; select bank2
  7531  2222  00D5               	movwf	_step_01_load_percent^(0+256)
  7532                           
  7533                           ;ird_remote.c: 207: byte_l=eeprom_read(0x05);
  7534  2223  3005               	movlw	5
  7535  2224  24EB  31A1         	fcall	_eeprom_read
  7536  2226  0020               	movlb	0	; select bank0
  7537  2227  00DB               	movwf	read_param_eeprom@byte_l
  7538                           
  7539                           ;ird_remote.c: 209: step_02_load_percent=byte_l;
  7540  2228  2502  31A1         	fcall	___lbtofl
  7541  222A  0830               	movf	?___lbtofl+3,w
  7542  222B  0022               	movlb	2	; select bank2
  7543  222C  00DC               	movwf	(_step_02_load_percent+3)^(0+256)
  7544  222D  0020               	movlb	0	; select bank0
  7545  222E  082F               	movf	?___lbtofl+2,w
  7546  222F  0022               	movlb	2	; select bank2
  7547  2230  00DB               	movwf	(_step_02_load_percent+2)^(0+256)
  7548  2231  0020               	movlb	0	; select bank0
  7549  2232  082E               	movf	?___lbtofl+1,w
  7550  2233  0022               	movlb	2	; select bank2
  7551  2234  00DA               	movwf	(_step_02_load_percent+1)^(0+256)
  7552  2235  0020               	movlb	0	; select bank0
  7553  2236  082D               	movf	?___lbtofl,w
  7554  2237  0022               	movlb	2	; select bank2
  7555  2238  00D9               	movwf	_step_02_load_percent^(0+256)
  7556                           
  7557                           ;ird_remote.c: 212: byte_l=eeprom_read(0x06);
  7558  2239  3006               	movlw	6
  7559  223A  24EB  31A1         	fcall	_eeprom_read
  7560  223C  0020               	movlb	0	; select bank0
  7561  223D  00DB               	movwf	read_param_eeprom@byte_l
  7562                           
  7563                           ;ird_remote.c: 214: step_03_load_percent=byte_l;
  7564  223E  2502  31A1         	fcall	___lbtofl
  7565  2240  0830               	movf	?___lbtofl+3,w
  7566  2241  0022               	movlb	2	; select bank2
  7567  2242  00E0               	movwf	(_step_03_load_percent+3)^(0+256)
  7568  2243  0020               	movlb	0	; select bank0
  7569  2244  082F               	movf	?___lbtofl+2,w
  7570  2245  0022               	movlb	2	; select bank2
  7571  2246  00DF               	movwf	(_step_03_load_percent+2)^(0+256)
  7572  2247  0020               	movlb	0	; select bank0
  7573  2248  082E               	movf	?___lbtofl+1,w
  7574  2249  0022               	movlb	2	; select bank2
  7575  224A  00DE               	movwf	(_step_03_load_percent+1)^(0+256)
  7576  224B  0020               	movlb	0	; select bank0
  7577  224C  082D               	movf	?___lbtofl,w
  7578  224D  0022               	movlb	2	; select bank2
  7579  224E  00DD               	movwf	_step_03_load_percent^(0+256)
  7580                           
  7581                           ;ird_remote.c: 217: byte_l=eeprom_read(0x07);
  7582  224F  3007               	movlw	7
  7583  2250  24EB  31A1         	fcall	_eeprom_read
  7584  2252  0020               	movlb	0	; select bank0
  7585  2253  00DB               	movwf	read_param_eeprom@byte_l
  7586                           
  7587                           ;ird_remote.c: 219: step_04_load_percent=byte_l;
  7588  2254  2502  31A1         	fcall	___lbtofl
  7589  2256  0830               	movf	?___lbtofl+3,w
  7590  2257  0022               	movlb	2	; select bank2
  7591  2258  00E4               	movwf	(_step_04_load_percent+3)^(0+256)
  7592  2259  0020               	movlb	0	; select bank0
  7593  225A  082F               	movf	?___lbtofl+2,w
  7594  225B  0022               	movlb	2	; select bank2
  7595  225C  00E3               	movwf	(_step_04_load_percent+2)^(0+256)
  7596  225D  0020               	movlb	0	; select bank0
  7597  225E  082E               	movf	?___lbtofl+1,w
  7598  225F  0022               	movlb	2	; select bank2
  7599  2260  00E2               	movwf	(_step_04_load_percent+1)^(0+256)
  7600  2261  0020               	movlb	0	; select bank0
  7601  2262  082D               	movf	?___lbtofl,w
  7602  2263  0022               	movlb	2	; select bank2
  7603  2264  00E1               	movwf	_step_04_load_percent^(0+256)
  7604                           
  7605                           ;ird_remote.c: 222: byte_l=eeprom_read(0x08);
  7606  2265  3008               	movlw	8
  7607  2266  24EB  31A1         	fcall	_eeprom_read
  7608  2268  0020               	movlb	0	; select bank0
  7609  2269  00DB               	movwf	read_param_eeprom@byte_l
  7610                           
  7611                           ;ird_remote.c: 224: step_05_load_percent=byte_l;
  7612  226A  2502  31A1         	fcall	___lbtofl
  7613  226C  0830               	movf	?___lbtofl+3,w
  7614  226D  0022               	movlb	2	; select bank2
  7615  226E  00E8               	movwf	(_step_05_load_percent+3)^(0+256)
  7616  226F  0020               	movlb	0	; select bank0
  7617  2270  082F               	movf	?___lbtofl+2,w
  7618  2271  0022               	movlb	2	; select bank2
  7619  2272  00E7               	movwf	(_step_05_load_percent+2)^(0+256)
  7620  2273  0020               	movlb	0	; select bank0
  7621  2274  082E               	movf	?___lbtofl+1,w
  7622  2275  0022               	movlb	2	; select bank2
  7623  2276  00E6               	movwf	(_step_05_load_percent+1)^(0+256)
  7624  2277  0020               	movlb	0	; select bank0
  7625  2278  082D               	movf	?___lbtofl,w
  7626  2279  0022               	movlb	2	; select bank2
  7627  227A  00E5               	movwf	_step_05_load_percent^(0+256)
  7628                           
  7629                           ;ird_remote.c: 227: byte_l=eeprom_read(0x09);
  7630  227B  3009               	movlw	9
  7631  227C  24EB  31A1         	fcall	_eeprom_read
  7632  227E  0020               	movlb	0	; select bank0
  7633  227F  00DB               	movwf	read_param_eeprom@byte_l
  7634                           
  7635                           ;ird_remote.c: 229: volt_id=byte_l;
  7636  2280  085B               	movf	read_param_eeprom@byte_l,w
  7637  2281  0021               	movlb	1	; select bank1
  7638  2282  00EB               	movwf	_volt_id^(0+128)
  7639                           
  7640                           ;ird_remote.c: 232: byte_l=eeprom_read(0x0a);
  7641  2283  300A               	movlw	10
  7642  2284  24EB  31A1         	fcall	_eeprom_read
  7643  2286  0020               	movlb	0	; select bank0
  7644  2287  00DB               	movwf	read_param_eeprom@byte_l
  7645                           
  7646                           ;ird_remote.c: 234: bt_id=byte_l;
  7647  2288  085B               	movf	read_param_eeprom@byte_l,w
  7648  2289  0021               	movlb	1	; select bank1
  7649  228A  00EA               	movwf	_bt_id^(0+128)
  7650                           
  7651                           ;ird_remote.c: 236: byte_l=eeprom_read(0x0b);
  7652  228B  300B               	movlw	11
  7653  228C  24EB  31A1         	fcall	_eeprom_read
  7654  228E  0020               	movlb	0	; select bank0
  7655  228F  00DB               	movwf	read_param_eeprom@byte_l
  7656                           
  7657                           ;ird_remote.c: 238: light_time=byte_l;
  7658  2290  0021               	movlb	1	; select bank1
  7659  2291  00BE               	movwf	_light_time^(0+128)
  7660  2292  300C               	movlw	12
  7661  2293  01BF               	clrf	(_light_time+1)^(0+128)
  7662                           
  7663                           ;ird_remote.c: 240: byte_l=eeprom_read(0x0c);
  7664  2294  24EB  31A1         	fcall	_eeprom_read
  7665  2296  0020               	movlb	0	; select bank0
  7666  2297  00DB               	movwf	read_param_eeprom@byte_l
  7667                           
  7668                           ;ird_remote.c: 242: step_01_time_limit=byte_l;
  7669  2298  0021               	movlb	1	; select bank1
  7670  2299  00E6               	movwf	_step_01_time_limit^(0+128)
  7671  229A  300D               	movlw	13
  7672  229B  01E7               	clrf	(_step_01_time_limit+1)^(0+128)
  7673                           
  7674                           ;ird_remote.c: 244: byte_l=eeprom_read(0x0d);
  7675  229C  24EB  31A1         	fcall	_eeprom_read
  7676  229E  0020               	movlb	0	; select bank0
  7677  229F  00DB               	movwf	read_param_eeprom@byte_l
  7678                           
  7679                           ;ird_remote.c: 246: step_02_time_limit=byte_l;
  7680  22A0  0021               	movlb	1	; select bank1
  7681  22A1  00E8               	movwf	_step_02_time_limit^(0+128)
  7682  22A2  300E               	movlw	14
  7683  22A3  01E9               	clrf	(_step_02_time_limit+1)^(0+128)
  7684                           
  7685                           ;ird_remote.c: 248: byte_l=eeprom_read(0x0e);
  7686  22A4  24EB  31A1         	fcall	_eeprom_read
  7687  22A6  0020               	movlb	0	; select bank0
  7688  22A7  00DB               	movwf	read_param_eeprom@byte_l
  7689                           
  7690                           ;ird_remote.c: 250: step_03_time_limit=byte_l;
  7691  22A8  0022               	movlb	2	; select bank2
  7692  22A9  00E9               	movwf	_step_03_time_limit^(0+256)
  7693  22AA  300F               	movlw	15
  7694  22AB  01EA               	clrf	(_step_03_time_limit+1)^(0+256)
  7695                           
  7696                           ;ird_remote.c: 252: byte_l=eeprom_read(0x0f);
  7697  22AC  24EB  31A1         	fcall	_eeprom_read
  7698  22AE  0020               	movlb	0	; select bank0
  7699  22AF  00DB               	movwf	read_param_eeprom@byte_l
  7700                           
  7701                           ;ird_remote.c: 254: step_04_time_limit=byte_l;
  7702  22B0  0022               	movlb	2	; select bank2
  7703  22B1  00EB               	movwf	_step_04_time_limit^(0+256)
  7704  22B2  3010               	movlw	16
  7705  22B3  01EC               	clrf	(_step_04_time_limit+1)^(0+256)
  7706                           
  7707                           ;ird_remote.c: 256: byte_l=eeprom_read(0x10);
  7708  22B4  24EB  31A1         	fcall	_eeprom_read
  7709  22B6  0020               	movlb	0	; select bank0
  7710  22B7  00DB               	movwf	read_param_eeprom@byte_l
  7711                           
  7712                           ;ird_remote.c: 258: step_05_time_limit=byte_l;
  7713  22B8  0022               	movlb	2	; select bank2
  7714  22B9  00ED               	movwf	_step_05_time_limit^(0+256)
  7715  22BA  3011               	movlw	17
  7716  22BB  01EE               	clrf	(_step_05_time_limit+1)^(0+256)
  7717                           
  7718                           ;ird_remote.c: 260: byte_l=eeprom_read(0x11);
  7719  22BC  24EB  31A1         	fcall	_eeprom_read
  7720  22BE  0020               	movlb	0	; select bank0
  7721  22BF  00DB               	movwf	read_param_eeprom@byte_l
  7722                           
  7723                           ;ird_remote.c: 262: today_index=byte_l;
  7724  22C0  00EC               	movwf	_today_index
  7725                           
  7726                           ;ird_remote.c: 264: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
  7727  22C1  3E08               	addlw	8
  7728  22C2  3907               	andlw	7
  7729  22C3  0709               	addwf	9,w
  7730  22C4  0709               	addwf	9,w
  7731  22C5  3E12               	addlw	18
  7732  22C6  24EB  31A1         	fcall	_eeprom_read
  7733  22C8  0020               	movlb	0	; select bank0
  7734  22C9  00DA               	movwf	read_param_eeprom@byte_h
  7735                           
  7736                           ;ird_remote.c: 266: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
  7737  22CA  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  7738  22CC  3E13               	addlw	19
  7739  22CD  24EB  31A1         	fcall	_eeprom_read
  7740                           
  7741                           ;ird_remote.c: 268: bt_00_hv=(byte_h<<8)|byte_l;
  7742  22CF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7743  22D1  2751  31A1         	fcall	___awtofl
  7744  22D3  0830               	movf	?___awtofl+3,w
  7745  22D4  0024               	movlb	4	; select bank4
  7746  22D5  00A3               	movwf	(_bt_00_hv+3)^(0+512)
  7747  22D6  0020               	movlb	0	; select bank0
  7748  22D7  082F               	movf	?___awtofl+2,w
  7749  22D8  0024               	movlb	4	; select bank4
  7750  22D9  00A2               	movwf	(_bt_00_hv+2)^(0+512)
  7751  22DA  0020               	movlb	0	; select bank0
  7752  22DB  082E               	movf	?___awtofl+1,w
  7753  22DC  0024               	movlb	4	; select bank4
  7754  22DD  00A1               	movwf	(_bt_00_hv+1)^(0+512)
  7755  22DE  0020               	movlb	0	; select bank0
  7756  22DF  082D               	movf	?___awtofl,w
  7757  22E0  0024               	movlb	4	; select bank4
  7758  22E1  00A0               	movwf	_bt_00_hv^(0+512)
  7759                           
  7760                           ;ird_remote.c: 270: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
  7761  22E2  0020               	movlb	0	; select bank0
  7762  22E3  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  7763  22E5  3E14               	addlw	20
  7764  22E6  24EB  31A1         	fcall	_eeprom_read
  7765  22E8  0020               	movlb	0	; select bank0
  7766  22E9  00DA               	movwf	read_param_eeprom@byte_h
  7767                           
  7768                           ;ird_remote.c: 272: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
  7769  22EA  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  7770  22EC  3E15               	addlw	21
  7771  22ED  24EB  31A1         	fcall	_eeprom_read
  7772                           
  7773                           ;ird_remote.c: 274: bt_00_lv=(byte_h<<8)|byte_l;
  7774  22EF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7775  22F1  2751               	fcall	___awtofl
  7776  22F2  0830               	movf	?___awtofl+3,w
  7777  22F3  0024               	movlb	4	; select bank4
  7778  22F4  00A7               	movwf	(_bt_00_lv+3)^(0+512)
  7779  22F5  0020               	movlb	0	; select bank0
  7780  22F6  082F               	movf	?___awtofl+2,w
  7781  22F7  0024               	movlb	4	; select bank4
  7782  22F8  00A6               	movwf	(_bt_00_lv+2)^(0+512)
  7783  22F9  0020               	movlb	0	; select bank0
  7784  22FA  082E               	movf	?___awtofl+1,w
  7785  22FB  0024               	movlb	4	; select bank4
  7786  22FC  00A5               	movwf	(_bt_00_lv+1)^(0+512)
  7787  22FD  0020               	movlb	0	; select bank0
  7788  22FE  082D               	movf	?___awtofl,w
  7789  22FF  0024               	movlb	4	; select bank4
  7790  2300  00A4               	movwf	_bt_00_lv^(0+512)
  7791                           
  7792                           ;ird_remote.c: 277: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
  7793  2301  0020               	movlb	0	; select bank0
  7794  2302  3187  27A1  31A1   	fcall	PL146	;call to abstracted procedure
  7795  2305  3E12               	addlw	18
  7796  2306  24EB               	fcall	_eeprom_read
  7797  2307  0020               	movlb	0	; select bank0
  7798  2308  00DA               	movwf	read_param_eeprom@byte_h
  7799                           
  7800                           ;ird_remote.c: 279: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
  7801  2309  3187  27A1  31A1   	fcall	PL146	;call to abstracted procedure
  7802  230C  3E13               	addlw	19
  7803  230D  24EB  31A1         	fcall	_eeprom_read
  7804                           
  7805                           ;ird_remote.c: 281: bt_01_hv=(byte_h<<8)|byte_l;
  7806  230F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7807  2311  2751               	fcall	___awtofl
  7808                           
  7809                           ;ird_remote.c: 283: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
  7810  2312  3187  27A1  31A1   	fcall	PL146	;call to abstracted procedure
  7811  2315  3E14               	addlw	20
  7812  2316  24EB               	fcall	_eeprom_read
  7813  2317  0020               	movlb	0	; select bank0
  7814  2318  00DA               	movwf	read_param_eeprom@byte_h
  7815                           
  7816                           ;ird_remote.c: 285: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
  7817  2319  3187  27A1  31A1   	fcall	PL146	;call to abstracted procedure
  7818  231C  3E15               	addlw	21
  7819  231D  24EB  31A1         	fcall	_eeprom_read
  7820                           
  7821                           ;ird_remote.c: 287: bt_01_lv=(byte_h<<8)|byte_l;
  7822  231F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7823  2321  2751               	fcall	___awtofl
  7824                           
  7825                           ;ird_remote.c: 290: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
  7826  2322  3187  27A7  31A1   	fcall	PL148	;call to abstracted procedure
  7827  2325  3E12               	addlw	18
  7828  2326  24EB               	fcall	_eeprom_read
  7829  2327  0020               	movlb	0	; select bank0
  7830  2328  00DA               	movwf	read_param_eeprom@byte_h
  7831                           
  7832                           ;ird_remote.c: 292: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
  7833  2329  3187  27A7  31A1   	fcall	PL148	;call to abstracted procedure
  7834  232C  3E13               	addlw	19
  7835  232D  24EB  31A1         	fcall	_eeprom_read
  7836                           
  7837                           ;ird_remote.c: 294: bt_02_hv=(byte_h<<8)|byte_l;
  7838  232F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7839  2331  2751               	fcall	___awtofl
  7840                           
  7841                           ;ird_remote.c: 296: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
  7842  2332  3187  27A7  31A1   	fcall	PL148	;call to abstracted procedure
  7843  2335  3E14               	addlw	20
  7844  2336  24EB               	fcall	_eeprom_read
  7845  2337  0020               	movlb	0	; select bank0
  7846  2338  00DA               	movwf	read_param_eeprom@byte_h
  7847                           
  7848                           ;ird_remote.c: 298: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
  7849  2339  3187  27A7  31A1   	fcall	PL148	;call to abstracted procedure
  7850  233C  3E15               	addlw	21
  7851  233D  24EB  31A1         	fcall	_eeprom_read
  7852                           
  7853                           ;ird_remote.c: 300: bt_02_lv=(byte_h<<8)|byte_l;
  7854  233F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7855  2341  2751               	fcall	___awtofl
  7856                           
  7857                           ;ird_remote.c: 303: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
  7858  2342  3187  279B  31A1   	fcall	PL144	;call to abstracted procedure
  7859  2345  3E12               	addlw	18
  7860  2346  24EB               	fcall	_eeprom_read
  7861  2347  0020               	movlb	0	; select bank0
  7862  2348  00DA               	movwf	read_param_eeprom@byte_h
  7863                           
  7864                           ;ird_remote.c: 305: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
  7865  2349  3187  279B  31A1   	fcall	PL144	;call to abstracted procedure
  7866  234C  3E13               	addlw	19
  7867  234D  24EB  31A1         	fcall	_eeprom_read
  7868                           
  7869                           ;ird_remote.c: 307: bt_03_hv=(byte_h<<8)|byte_l;
  7870  234F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7871  2351  2751               	fcall	___awtofl
  7872                           
  7873                           ;ird_remote.c: 309: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
  7874  2352  3187  279B  31A1   	fcall	PL144	;call to abstracted procedure
  7875  2355  3E14               	addlw	20
  7876  2356  24EB               	fcall	_eeprom_read
  7877  2357  0020               	movlb	0	; select bank0
  7878  2358  00DA               	movwf	read_param_eeprom@byte_h
  7879                           
  7880                           ;ird_remote.c: 311: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
  7881  2359  3187  279B  31A1   	fcall	PL144	;call to abstracted procedure
  7882  235C  3E15               	addlw	21
  7883  235D  24EB  31A1         	fcall	_eeprom_read
  7884                           
  7885                           ;ird_remote.c: 313: bt_03_lv=(byte_h<<8)|byte_l;
  7886  235F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7887  2361  2751               	fcall	___awtofl
  7888                           
  7889                           ;ird_remote.c: 316: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
  7890  2362  3187  2795  31A1   	fcall	PL142	;call to abstracted procedure
  7891  2365  3E12               	addlw	18
  7892  2366  24EB               	fcall	_eeprom_read
  7893  2367  0020               	movlb	0	; select bank0
  7894  2368  00DA               	movwf	read_param_eeprom@byte_h
  7895                           
  7896                           ;ird_remote.c: 318: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
  7897  2369  3187  2795  31A1   	fcall	PL142	;call to abstracted procedure
  7898  236C  3E13               	addlw	19
  7899  236D  24EB  31A1         	fcall	_eeprom_read
  7900                           
  7901                           ;ird_remote.c: 320: bt_04_hv=(byte_h<<8)|byte_l;
  7902  236F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7903  2371  2751               	fcall	___awtofl
  7904                           
  7905                           ;ird_remote.c: 322: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
  7906  2372  3187  2795  31A1   	fcall	PL142	;call to abstracted procedure
  7907  2375  3E14               	addlw	20
  7908  2376  24EB               	fcall	_eeprom_read
  7909  2377  0020               	movlb	0	; select bank0
  7910  2378  00DA               	movwf	read_param_eeprom@byte_h
  7911                           
  7912                           ;ird_remote.c: 324: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
  7913  2379  3187  2795  31A1   	fcall	PL142	;call to abstracted procedure
  7914  237C  3E15               	addlw	21
  7915  237D  24EB  31A1         	fcall	_eeprom_read
  7916                           
  7917                           ;ird_remote.c: 326: bt_04_lv=(byte_h<<8)|byte_l;
  7918  237F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7919  2381  2751               	fcall	___awtofl
  7920                           
  7921                           ;ird_remote.c: 329: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
  7922  2382  3187  2783  31A1   	fcall	PL134	;call to abstracted procedure
  7923  2385  3E12               	addlw	18
  7924  2386  24EB               	fcall	_eeprom_read
  7925  2387  0020               	movlb	0	; select bank0
  7926  2388  00DA               	movwf	read_param_eeprom@byte_h
  7927                           
  7928                           ;ird_remote.c: 331: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
  7929  2389  3187  2783  31A1   	fcall	PL134	;call to abstracted procedure
  7930  238C  3E13               	addlw	19
  7931  238D  24EB  31A1         	fcall	_eeprom_read
  7932                           
  7933                           ;ird_remote.c: 333: bt_05_hv=(byte_h<<8)|byte_l;
  7934  238F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7935  2391  2751               	fcall	___awtofl
  7936                           
  7937                           ;ird_remote.c: 335: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
  7938  2392  3187  2783  31A1   	fcall	PL134	;call to abstracted procedure
  7939  2395  3E14               	addlw	20
  7940  2396  24EB               	fcall	_eeprom_read
  7941  2397  0020               	movlb	0	; select bank0
  7942  2398  00DA               	movwf	read_param_eeprom@byte_h
  7943                           
  7944                           ;ird_remote.c: 337: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
  7945  2399  3187  2783  31A1   	fcall	PL134	;call to abstracted procedure
  7946  239C  3E15               	addlw	21
  7947  239D  24EB  31A1         	fcall	_eeprom_read
  7948                           
  7949                           ;ird_remote.c: 339: bt_05_lv=(byte_h<<8)|byte_l;
  7950  239F  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7951  23A1  2751               	fcall	___awtofl
  7952                           
  7953                           ;ird_remote.c: 342: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
  7954  23A2  3187  2789  31A1   	fcall	PL136	;call to abstracted procedure
  7955  23A5  3E12               	addlw	18
  7956  23A6  24EB               	fcall	_eeprom_read
  7957  23A7  0020               	movlb	0	; select bank0
  7958  23A8  00DA               	movwf	read_param_eeprom@byte_h
  7959                           
  7960                           ;ird_remote.c: 344: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
  7961  23A9  3187  2789  31A1   	fcall	PL136	;call to abstracted procedure
  7962  23AC  3E13               	addlw	19
  7963  23AD  24EB  31A1         	fcall	_eeprom_read
  7964                           
  7965                           ;ird_remote.c: 346: bt_06_hv=(byte_h<<8)|byte_l;
  7966  23AF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7967  23B1  2751               	fcall	___awtofl
  7968                           
  7969                           ;ird_remote.c: 348: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
  7970  23B2  3187  2789  31A1   	fcall	PL136	;call to abstracted procedure
  7971  23B5  3E14               	addlw	20
  7972  23B6  24EB               	fcall	_eeprom_read
  7973  23B7  0020               	movlb	0	; select bank0
  7974  23B8  00DA               	movwf	read_param_eeprom@byte_h
  7975                           
  7976                           ;ird_remote.c: 350: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
  7977  23B9  3187  2789  31A1   	fcall	PL136	;call to abstracted procedure
  7978  23BC  3E15               	addlw	21
  7979  23BD  24EB  31A1         	fcall	_eeprom_read
  7980                           
  7981                           ;ird_remote.c: 352: bt_06_lv=(byte_h<<8)|byte_l;
  7982  23BF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7983  23C1  2751               	fcall	___awtofl
  7984                           
  7985                           ;ird_remote.c: 355: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
  7986  23C2  3187  278F  31A1   	fcall	PL140	;call to abstracted procedure
  7987  23C5  3E12               	addlw	18
  7988  23C6  24EB               	fcall	_eeprom_read
  7989  23C7  0020               	movlb	0	; select bank0
  7990  23C8  00DA               	movwf	read_param_eeprom@byte_h
  7991                           
  7992                           ;ird_remote.c: 357: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
  7993  23C9  3187  278F  31A1   	fcall	PL140	;call to abstracted procedure
  7994  23CC  3E13               	addlw	19
  7995  23CD  24EB  31A1         	fcall	_eeprom_read
  7996                           
  7997                           ;ird_remote.c: 359: bt_07_hv=(byte_h<<8)|byte_l;
  7998  23CF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  7999  23D1  2751               	fcall	___awtofl
  8000                           
  8001                           ;ird_remote.c: 361: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
  8002  23D2  3187  278F  31A1   	fcall	PL140	;call to abstracted procedure
  8003  23D5  3E14               	addlw	20
  8004  23D6  24EB               	fcall	_eeprom_read
  8005  23D7  0020               	movlb	0	; select bank0
  8006  23D8  00DA               	movwf	read_param_eeprom@byte_h
  8007                           
  8008                           ;ird_remote.c: 363: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
  8009  23D9  3187  278F  31A1   	fcall	PL140	;call to abstracted procedure
  8010  23DC  3E15               	addlw	21
  8011  23DD  24EB  31A1         	fcall	_eeprom_read
  8012                           
  8013                           ;ird_remote.c: 365: bt_07_lv=(byte_h<<8)|byte_l;
  8014  23DF  2797  31A1         	fcall	PL24	;call to abstracted procedure
  8015  23E1  2751  31A1         	fcall	___awtofl
  8016                           
  8017                           ;ird_remote.c: 368: byte_l=eeprom_read(0x36);
  8018  23E3  3036               	movlw	54
  8019  23E4  24EB  31A1         	fcall	_eeprom_read
  8020  23E6  0020               	movlb	0	; select bank0
  8021  23E7  00DB               	movwf	read_param_eeprom@byte_l
  8022                           
  8023                           ;ird_remote.c: 370: light_mode=byte_l;
  8024  23E8  085B               	movf	read_param_eeprom@byte_l,w
  8025  23E9  0021               	movlb	1	; select bank1
  8026  23EA  00B8               	movwf	_light_mode^(0+128)
  8027  23EB  3037               	movlw	55
  8028  23EC  24EB  31A1         	fcall	_eeprom_read
  8029                           
  8030                           ;ird_remote.c: 377: byte_l=eeprom_read(0x38);
  8031  23EE  3038               	movlw	56
  8032  23EF  24EB  31A1         	fcall	_eeprom_read
  8033  23F1  0020               	movlb	0	; select bank0
  8034  23F2  00DB               	movwf	read_param_eeprom@byte_l
  8035                           
  8036                           ;ird_remote.c: 379: device_status=byte_l;
  8037  23F3  0021               	movlb	1	; select bank1
  8038  23F4  00B4               	movwf	_device_status^(0+128)
  8039  23F5  3039               	movlw	57
  8040                           
  8041                           ;ird_remote.c: 381: device_status=0x01;
  8042  23F6  01B4               	clrf	_device_status^(0+128)
  8043  23F7  0AB4               	incf	_device_status^(0+128),f
  8044                           
  8045                           ;ird_remote.c: 384: {
  8046                           ;ird_remote.c: 386: work_mode =0x00;
  8047  23F8  01BD               	clrf	_work_mode^(0+128)
  8048                           
  8049                           ;ird_remote.c: 391: }
  8050                           ;ird_remote.c: 393: byte_l=eeprom_read(0x39);
  8051                           
  8052                           ;ird_remote.c: 387: }
  8053  23F9  24EB  31A1         	fcall	_eeprom_read
  8054  23FB  0020               	movlb	0	; select bank0
  8055  23FC  00DB               	movwf	read_param_eeprom@byte_l
  8056                           
  8057                           ;ird_remote.c: 395: led_out_ctrl=byte_l;
  8058  23FD  0021               	movlb	1	; select bank1
  8059  23FE  00B7               	movwf	_led_out_ctrl^(0+128)
  8060                           
  8061                           ;ird_remote.c: 400: if(light_time==0x00)
  8062  23FF  083F               	movf	(_light_time+1)^(0+128),w
  8063  2400  043E               	iorwf	_light_time^(0+128),w
  8064  2401  1D03               	skipz
  8065  2402  2C0A               	goto	l16638
  8066                           
  8067                           ;ird_remote.c: 401: {
  8068                           ;ird_remote.c: 402: light_time_level = 500;
  8069  2403  0023               	movlb	3	; select bank3
  8070  2404  3001               	movlw	1
  8071  2405  01A3               	clrf	(_light_time_level+3)^(0+384)
  8072  2406  01A2               	clrf	(_light_time_level+2)^(0+384)
  8073  2407  00A1               	movwf	(_light_time_level+1)^(0+384)
  8074  2408  30F4               	movlw	244
  8075  2409  2C29               	goto	L1
  8076  240A                     l16638:	
  8077                           ;ird_remote.c: 403: }
  8078                           
  8079                           
  8080                           ;ird_remote.c: 404: else
  8081                           ;ird_remote.c: 405: {
  8082                           ;ird_remote.c: 406: light_time_level = (unsigned long int)((unsigned long int)light_time
      +                          *6*180);
  8083  240A  083E               	movf	_light_time^(0+128),w
  8084  240B  0020               	movlb	0	; select bank0
  8085  240C  00A3               	movwf	___lmul@multiplier
  8086  240D  0021               	movlb	1	; select bank1
  8087  240E  083F               	movf	(_light_time+1)^(0+128),w
  8088  240F  0020               	movlb	0	; select bank0
  8089  2410  00A4               	movwf	___lmul@multiplier+1
  8090  2411  3004               	movlw	4
  8091  2412  01A5               	clrf	___lmul@multiplier+2
  8092  2413  01A6               	clrf	___lmul@multiplier+3
  8093  2414  01AA               	clrf	___lmul@multiplicand+3
  8094  2415  01A9               	clrf	___lmul@multiplicand+2
  8095  2416  00A8               	movwf	___lmul@multiplicand+1
  8096  2417  3038               	movlw	56
  8097  2418  00A7               	movwf	___lmul@multiplicand
  8098  2419  27C4  31A1         	fcall	___lmul
  8099  241B  0826               	movf	?___lmul+3,w
  8100  241C  0023               	movlb	3	; select bank3
  8101  241D  00A3               	movwf	(_light_time_level+3)^(0+384)
  8102  241E  0020               	movlb	0	; select bank0
  8103  241F  0825               	movf	?___lmul+2,w
  8104  2420  0023               	movlb	3	; select bank3
  8105  2421  00A2               	movwf	(_light_time_level+2)^(0+384)
  8106  2422  0020               	movlb	0	; select bank0
  8107  2423  0824               	movf	?___lmul+1,w
  8108  2424  0023               	movlb	3	; select bank3
  8109  2425  00A1               	movwf	(_light_time_level+1)^(0+384)
  8110  2426  0020               	movlb	0	; select bank0
  8111  2427  0823               	movf	?___lmul,w
  8112  2428  0023               	movlb	3	; select bank3
  8113  2429                     L1:	
  8114  2429  00A0               	movwf	_light_time_level^(0+384)
  8115                           
  8116                           ;ird_remote.c: 412: {
  8117                           ;ird_remote.c: 413: bt_volt_100 = (12.35/31.04)*1000;
  8118  242A  0021               	movlb	1	; select bank1
  8119  242B  036B               	decf	_volt_id^(0+128),w
  8120  242C  1D03               	skipz
  8121  242D  2CE9               	goto	l16652
  8122                           
  8123                           ;ird_remote.c: 415: bt_volt_80 = (11.80/31.04)*1000;
  8124  242E  3043               	movlw	67
  8125  242F  0024               	movlb	4	; select bank4
  8126  2430  00EB               	movwf	(_bt_volt_80+3)^(0+512)
  8127  2431  30BE               	movlw	190
  8128  2432  00EA               	movwf	(_bt_volt_80+2)^(0+512)
  8129  2433  3013               	movlw	19
  8130  2434  00E9               	movwf	(_bt_volt_80+1)^(0+512)
  8131  2435  30CB               	movlw	203
  8132  2436  00E8               	movwf	_bt_volt_80^(0+512)
  8133                           
  8134                           ;ird_remote.c: 417: bt_volt_60 = (11.30/31.04)*1000;
  8135  2437  3043               	movlw	67
  8136  2438  00E7               	movwf	(_bt_volt_60+3)^(0+512)
  8137  2439  30B6               	movlw	182
  8138  243A  00E6               	movwf	(_bt_volt_60+2)^(0+512)
  8139  243B  3005               	movlw	5
  8140  243C  00E5               	movwf	(_bt_volt_60+1)^(0+512)
  8141  243D  30F0               	movlw	240
  8142  243E  00E4               	movwf	_bt_volt_60^(0+512)
  8143                           
  8144                           ;ird_remote.c: 419: bt_volt_40 = (10.80/31.04)*1000;
  8145  243F  3043               	movlw	67
  8146  2440  00E3               	movwf	(_bt_volt_40+3)^(0+512)
  8147  2441  30AD               	movlw	173
  8148  2442  00E2               	movwf	(_bt_volt_40+2)^(0+512)
  8149  2443  30F8               	movlw	248
  8150  2444  00E1               	movwf	(_bt_volt_40+1)^(0+512)
  8151  2445  3015               	movlw	21
  8152  2446  00E0               	movwf	_bt_volt_40^(0+512)
  8153                           
  8154                           ;ird_remote.c: 421: bt_volt_20 = (10.30/31.04)*1000;
  8155  2447  3043               	movlw	67
  8156  2448  00DF               	movwf	(_bt_volt_20+3)^(0+512)
  8157  2449  30A5               	movlw	165
  8158  244A  00DE               	movwf	(_bt_volt_20+2)^(0+512)
  8159  244B  30EA               	movlw	234
  8160  244C  00DD               	movwf	(_bt_volt_20+1)^(0+512)
  8161  244D  303A               	movlw	58
  8162  244E  00DC               	movwf	_bt_volt_20^(0+512)
  8163                           
  8164                           ;ird_remote.c: 423: bt_volt_00 = (9.00/31.04)*1000;
  8165  244F  3043               	movlw	67
  8166  2450  00DB               	movwf	(_bt_volt_00+3)^(0+512)
  8167  2451  3090               	movlw	144
  8168  2452  00DA               	movwf	(_bt_volt_00+2)^(0+512)
  8169  2453  30F9               	movlw	249
  8170  2454  00D9               	movwf	(_bt_volt_00+1)^(0+512)
  8171  2455  3067               	movlw	103
  8172  2456  00D8               	movwf	_bt_volt_00^(0+512)
  8173                           
  8174                           ;ird_remote.c: 426: dianchi_guoya_baohu = (12.35/31.04)*1000;
  8175  2457  3043               	movlw	67
  8176  2458  0022               	movlb	2	; select bank2
  8177  2459  00D4               	movwf	(_dianchi_guoya_baohu+3)^(0+256)
  8178  245A  30C6               	movlw	198
  8179  245B  00D3               	movwf	(_dianchi_guoya_baohu+2)^(0+256)
  8180  245C  30EF               	movlw	239
  8181  245D  00D2               	movwf	(_dianchi_guoya_baohu+1)^(0+256)
  8182  245E  30D6               	movlw	214
  8183  245F  00D1               	movwf	_dianchi_guoya_baohu^(0+256)
  8184                           
  8185                           ;ird_remote.c: 428: dianchi_guoya_huifu = (12.15/31.04)*1000;
  8186  2460  3043               	movlw	67
  8187  2461  0023               	movlb	3	; select bank3
  8188  2462  00EA               	movwf	(_dianchi_guoya_huifu+3)^(0+384)
  8189  2463  30C3               	movlw	195
  8190  2464  00E9               	movwf	(_dianchi_guoya_huifu+2)^(0+384)
  8191  2465  30B7               	movlw	183
  8192  2466  00E8               	movwf	(_dianchi_guoya_huifu+1)^(0+384)
  8193  2467  3018               	movlw	24
  8194  2468  00E7               	movwf	_dianchi_guoya_huifu^(0+384)
  8195                           
  8196                           ;ird_remote.c: 430: dianchi_qianya_baohu = (9.00/31.04)*1000;
  8197  2469  3043               	movlw	67
  8198  246A  0025               	movlb	5	; select bank5
  8199  246B  00D3               	movwf	(_dianchi_qianya_baohu+3)^(0+640)
  8200  246C  3090               	movlw	144
  8201  246D  00D2               	movwf	(_dianchi_qianya_baohu+2)^(0+640)
  8202  246E  30F9               	movlw	249
  8203  246F  00D1               	movwf	(_dianchi_qianya_baohu+1)^(0+640)
  8204  2470  3067               	movlw	103
  8205  2471  00D0               	movwf	_dianchi_qianya_baohu^(0+640)
  8206                           
  8207                           ;ird_remote.c: 432: dianchi_qianya_huifu = (9.50/31.04)*1000;
  8208  2472  3043               	movlw	67
  8209  2473  00D7               	movwf	(_dianchi_qianya_huifu+3)^(0+640)
  8210  2474  3099               	movlw	153
  8211  2475  00D6               	movwf	(_dianchi_qianya_huifu+2)^(0+640)
  8212  2476  3007               	movlw	7
  8213  2477  00D5               	movwf	(_dianchi_qianya_huifu+1)^(0+640)
  8214  2478  3042               	movlw	66
  8215  2479  00D4               	movwf	_dianchi_qianya_huifu^(0+640)
  8216                           
  8217                           ;ird_remote.c: 434: dianchi_cv_level = (12.20/31.04)*1000;
  8218  247A  3043               	movlw	67
  8219  247B  0023               	movlb	3	; select bank3
  8220  247C  00E6               	movwf	(_dianchi_cv_level+3)^(0+384)
  8221  247D  30C4               	movlw	196
  8222  247E  00E5               	movwf	(_dianchi_cv_level+2)^(0+384)
  8223  247F  3085               	movlw	133
  8224  2480  00E4               	movwf	(_dianchi_cv_level+1)^(0+384)
  8225  2481  3047               	movlw	71
  8226  2482  00E3               	movwf	_dianchi_cv_level^(0+384)
  8227                           
  8228                           ;ird_remote.c: 436: charge_i_limit = 5.00*15.0;
  8229  2483  3042               	movlw	66
  8230  2484  0025               	movlb	5	; select bank5
  8231  2485  00CF               	movwf	(_charge_i_limit+3)^(0+640)
  8232  2486  3096               	movlw	150
  8233  2487  00CE               	movwf	(_charge_i_limit+2)^(0+640)
  8234  2488  3042               	movlw	66
  8235  2489  01CD               	clrf	(_charge_i_limit+1)^(0+640)
  8236  248A  01CC               	clrf	_charge_i_limit^(0+640)
  8237                           
  8238                           ;ird_remote.c: 438: shuchu_shortout_voltage = (7.50/61)*1000;
  8239  248B  0023               	movlb	3	; select bank3
  8240  248C  00EE               	movwf	(_shuchu_shortout_voltage+3)^(0+384)
  8241  248D  30F5               	movlw	245
  8242  248E  00ED               	movwf	(_shuchu_shortout_voltage+2)^(0+384)
  8243  248F  30E6               	movlw	230
  8244  2490  00EC               	movwf	(_shuchu_shortout_voltage+1)^(0+384)
  8245  2491  30D2               	movlw	210
  8246  2492  00EB               	movwf	_shuchu_shortout_voltage^(0+384)
  8247                           
  8248                           ;ird_remote.c: 440: shuchu_open_voltage = (61.00/61)*1000;
  8249  2493  3044               	movlw	68
  8250  2494  0025               	movlb	5	; select bank5
  8251  2495  00EB               	movwf	(_shuchu_open_voltage+3)^(0+640)
  8252  2496  307A               	movlw	122
  8253  2497  00EA               	movwf	(_shuchu_open_voltage+2)^(0+640)
  8254  2498  3044               	movlw	68
  8255  2499  01E9               	clrf	(_shuchu_open_voltage+1)^(0+640)
  8256  249A  01E8               	clrf	_shuchu_open_voltage^(0+640)
  8257                           
  8258                           ;ird_remote.c: 442: discharge_i_baohu = 4.50*160;
  8259  249B  00DB               	movwf	(_discharge_i_baohu+3)^(0+640)
  8260  249C  3034               	movlw	52
  8261  249D  00DA               	movwf	(_discharge_i_baohu+2)^(0+640)
  8262  249E  3044               	movlw	68
  8263  249F  01D9               	clrf	(_discharge_i_baohu+1)^(0+640)
  8264  24A0  01D8               	clrf	_discharge_i_baohu^(0+640)
  8265                           
  8266                           ;ird_remote.c: 444: discharge_i_limit = 4.00*160;
  8267  24A1  00DF               	movwf	(_discharge_i_limit+3)^(0+640)
  8268  24A2  3020               	movlw	32
  8269  24A3  00DE               	movwf	(_discharge_i_limit+2)^(0+640)
  8270  24A4  3042               	movlw	66
  8271  24A5  01DD               	clrf	(_discharge_i_limit+1)^(0+640)
  8272  24A6  01DC               	clrf	_discharge_i_limit^(0+640)
  8273                           
  8274                           ;ird_remote.c: 446: light_on_pv_level = (light_pv*10)/61;
  8275  24A7  0020               	movlb	0	; select bank0
  8276  24A8  00CA               	movwf	___fldiv@f2+3
  8277  24A9  3074               	movlw	116
  8278  24AA  00C9               	movwf	___fldiv@f2+2
  8279  24AB  3041               	movlw	65
  8280  24AC  01C8               	clrf	___fldiv@f2+1
  8281  24AD  01C7               	clrf	___fldiv@f2
  8282  24AE  00B7               	movwf	___flmul@f1+3
  8283  24AF  3020               	movlw	32
  8284  24B0  00B6               	movwf	___flmul@f1+2
  8285  24B1  01B5               	clrf	___flmul@f1+1
  8286  24B2  01B4               	clrf	___flmul@f1
  8287  24B3  0021               	movlb	1	; select bank1
  8288  24B4  0861               	movf	(_light_pv+3)^(0+128),w
  8289  24B5  0020               	movlb	0	; select bank0
  8290  24B6  00BB               	movwf	___flmul@f2+3
  8291  24B7  0021               	movlb	1	; select bank1
  8292  24B8  0860               	movf	(_light_pv+2)^(0+128),w
  8293  24B9  0020               	movlb	0	; select bank0
  8294  24BA  00BA               	movwf	___flmul@f2+2
  8295  24BB  0021               	movlb	1	; select bank1
  8296  24BC  085F               	movf	(_light_pv+1)^(0+128),w
  8297  24BD  0020               	movlb	0	; select bank0
  8298  24BE  00B9               	movwf	___flmul@f2+1
  8299  24BF  0021               	movlb	1	; select bank1
  8300  24C0  085E               	movf	_light_pv^(0+128),w
  8301  24C1  0020               	movlb	0	; select bank0
  8302  24C2  00B8               	movwf	___flmul@f2
  8303  24C3  318E  2607  31A1   	fcall	___flmul
  8304  24C6  31B4  2460  31A1   	fcall	PL82	;call to abstracted procedure
  8305  24C9  26E5               	fcall	___fldiv
  8306  24CA  084A               	movf	?___fldiv+3,w
  8307  24CB  0025               	movlb	5	; select bank5
  8308  24CC  00E7               	movwf	(_light_on_pv_level+3)^(0+640)
  8309  24CD  0020               	movlb	0	; select bank0
  8310  24CE  0849               	movf	?___fldiv+2,w
  8311  24CF  0025               	movlb	5	; select bank5
  8312  24D0  00E6               	movwf	(_light_on_pv_level+2)^(0+640)
  8313  24D1  0020               	movlb	0	; select bank0
  8314  24D2  0848               	movf	?___fldiv+1,w
  8315  24D3  0025               	movlb	5	; select bank5
  8316  24D4  00E5               	movwf	(_light_on_pv_level+1)^(0+640)
  8317  24D5  0020               	movlb	0	; select bank0
  8318  24D6  0847               	movf	?___fldiv,w
  8319  24D7  0025               	movlb	5	; select bank5
  8320  24D8  00E4               	movwf	_light_on_pv_level^(0+640)
  8321                           
  8322                           ;ird_remote.c: 448: light_off_pv_level = (10.0/61)*1000;
  8323  24D9  3043               	movlw	67
  8324  24DA  00E3               	movwf	(_light_off_pv_level+3)^(0+640)
  8325  24DB  3023               	movlw	35
  8326  24DC  00E2               	movwf	(_light_off_pv_level+2)^(0+640)
  8327  24DD  30EF               	movlw	239
  8328  24DE  00E1               	movwf	(_light_off_pv_level+1)^(0+640)
  8329  24DF  3037               	movlw	55
  8330  24E0  00E0               	movwf	_light_off_pv_level^(0+640)
  8331                           
  8332                           ;ird_remote.c: 450: Load_Pmax=64.00;
  8333  24E1  3042               	movlw	66
  8334  24E2  00CB               	movwf	(_Load_Pmax+3)^(0+640)
  8335  24E3  3080               	movlw	128
  8336  24E4  00CA               	movwf	(_Load_Pmax+2)^(0+640)
  8337  24E5  3000               	movlw	0
  8338  24E6  01C9               	clrf	(_Load_Pmax+1)^(0+640)
  8339  24E7  01C8               	clrf	_Load_Pmax^(0+640)
  8340                           
  8341                           ;ird_remote.c: 452: }
  8342  24E8  0008               	return
  8343  24E9                     l16652:	
  8344                           
  8345                           ;ird_remote.c: 454: {
  8346                           ;ird_remote.c: 455: __nop();
  8347  24E9  0000               	nop
  8348                           
  8349                           ;ird_remote.c: 456: }
  8350  24EA  0008               	return
  8351  24EB                     __end_of_read_param_eeprom:	
  8352  24EB                     __ptext6:	
  8353 ;; *************** function _eeprom_read *****************
  8354 ;; Defined at:
  8355 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  addr            1    wreg     unsigned char 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  addr            1    3[BANK0 ] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      unsigned char 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/2
  8366 ;;		On exit  : 1F/3
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;Total ram usage:        1 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    2
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_read_param_eeprom
  8380 ;;		_auto_system
  8381 ;;		_handle_uart_rx_buf
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           
  8386                           ;psect for function _eeprom_read
  8387  24EB                     _eeprom_read:	
  8388                           
  8389                           ;incstack = 0
  8390                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  8391                           ;eeprom_read@addr stored from wreg
  8392  24EB  0020               	movlb	0	; select bank0
  8393  24EC  00A3               	movwf	eeprom_read@addr
  8394  24ED  2CEF               	goto	l1885
  8395  24EE                     u4821:	
  8396  24EE  0020               	movlb	0	; select bank0
  8397  24EF                     l1885:	
  8398  24EF  0064               	clrwdt	;# 
  8399  24F0  0023               	movlb	3	; select bank3
  8400  24F1  1895               	btfsc	21,1	;volsfr
  8401  24F2  2CEE               	goto	u4821
  8402  24F3  0020               	movlb	0	; select bank0
  8403  24F4  0823               	movf	eeprom_read@addr,w
  8404  24F5  0023               	movlb	3	; select bank3
  8405  24F6  0091               	movwf	17	;volatile
  8406  24F7  0192               	clrf	18	;volatile
  8407  24F8  303F               	movlw	63
  8408  24F9  0595               	andwf	21,f	;volsfr
  8409  24FA  1415               	bsf	21,0	;volsfr
  8410  24FB  1003               	clrc
  8411  24FC  1815               	btfsc	21,0	;volsfr
  8412  24FD  1403               	setc
  8413  24FE  3000               	movlw	0
  8414  24FF  3D09               	addwfc	9,w
  8415  2500  0813               	movf	19,w	;volatile
  8416  2501  0008               	return
  8417  2502                     __end_of_eeprom_read:	
  8418  2502                     __ptext8:	
  8419 ;; *************** function ___lbtofl *****************
  8420 ;; Defined at:
  8421 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtofl.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  c               1    wreg     unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  c               1   18[BANK0 ] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  4   13[BANK0 ] unsigned char 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0, pclath, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 17/0
  8432 ;;		On exit  : 1F/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8435 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;Total ram usage:        6 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    3
  8442 ;; This function calls:
  8443 ;;		___flpack
  8444 ;; This function is called by:
  8445 ;;		_read_param_eeprom
  8446 ;;		_handle_uart_rx_buf
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           
  8451                           ;psect for function ___lbtofl
  8452  2502                     ___lbtofl:	
  8453                           
  8454                           ;incstack = 0
  8455                           ; Regs used in ___lbtofl: [wreg+status,2+status,0+pclath+cstack]
  8456                           ;___lbtofl@c stored from wreg
  8457  2502  0020               	movlb	0	; select bank0
  8458  2503  00B2               	movwf	___lbtofl@c
  8459  2504  00A3               	movwf	___flpack@arg
  8460  2505  3096               	movlw	150
  8461  2506  01A4               	clrf	___flpack@arg+1
  8462  2507  01A5               	clrf	___flpack@arg+2
  8463  2508  01A6               	clrf	___flpack@arg+3
  8464  2509  00A7               	movwf	___flpack@exp
  8465  250A  01A8               	clrf	___flpack@sign
  8466  250B  318E  2675         	fcall	___flpack
  8467  250D  0826               	movf	?___flpack+3,w
  8468  250E  00B0               	movwf	?___lbtofl+3
  8469  250F  0825               	movf	?___flpack+2,w
  8470  2510  00AF               	movwf	?___lbtofl+2
  8471  2511  0824               	movf	?___flpack+1,w
  8472  2512  00AE               	movwf	?___lbtofl+1
  8473  2513  0823               	movf	?___flpack,w
  8474  2514  00AD               	movwf	?___lbtofl
  8475  2515  0008               	return
  8476  2516                     __end_of___lbtofl:	
  8477  2516                     __ptext9:	
  8478 ;; *************** function _handle_task_process *****************
  8479 ;; Defined at:
  8480 ;;		line 1232 in file "D:\MCUProject\ZH-SL-F60\src\task.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;		None               void
  8487 ;; Registers used:
  8488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 1F/2
  8491 ;;		On exit  : 18/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    4
  8501 ;; This function calls:
  8502 ;;		_Disable_Bost_Pwm
  8503 ;;		_Disable_Buck_Pwm
  8504 ;;		_Enable_Bost_Pwm
  8505 ;;		_Set_Bost_Pwm_Duty
  8506 ;;		_Set_Buck_Pwm_Duty
  8507 ;;		___fladd
  8508 ;;		___fldiv
  8509 ;;		___flmul
  8510 ;;		___fltol
  8511 ;;		_delay_ms
  8512 ;;		_eeprom_write
  8513 ;;		_pid_init
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _handle_task_process
  8521  2516                     _handle_task_process:	
  8522                           
  8523                           ;task.c: 1236: if(handle_short_flag==0x01)
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in _handle_task_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8527  2516  0B33               	decfsz	_handle_short_flag^(0+256),w
  8528  2517  2D1E               	goto	l18002
  8529                           
  8530                           ;task.c: 1240: load_voltage_status=0x01;
  8531  2518  0024               	movlb	4	; select bank4
  8532  2519  01D4               	clrf	_over_load_time_count^(0+512)
  8533  251A  01D5               	clrf	(_over_load_time_count+1)^(0+512)
  8534                           
  8535                           ;task.c: 1244: discharge_led_status=0x00;
  8536  251B  0022               	movlb	2	; select bank2
  8537  251C  01B3               	clrf	_handle_short_flag^(0+256)
  8538  251D                     l1556:	
  8539                           ;task.c: 1246: while(1);
  8540                           
  8541  251D  2D1D               	goto	l1556
  8542  251E                     l18002:	
  8543                           
  8544                           ;task.c: 1247: }
  8545                           ;task.c: 1249: if(work_mode==0x00)
  8546  251E  0021               	movlb	1	; select bank1
  8547  251F  08BD               	movf	_work_mode^(0+128),f
  8548  2520  1D03               	skipz
  8549  2521  2D4F               	goto	l18026
  8550                           
  8551                           ;task.c: 1250: {
  8552                           ;task.c: 1251: if((pv_voltage_status==0x01)&&(battery_voltage_status==0x01)&&(sys_temper
      +                          _flag==0x01)&&(mcu_temp_index<0x03))
  8553  2522  0022               	movlb	2	; select bank2
  8554  2523  0B43               	decfsz	_pv_voltage_status^(0+256),w
  8555  2524  2D3B               	goto	l18014
  8556  2525  0B2A               	decfsz	_battery_voltage_status^(0+256),w
  8557  2526  2D3B               	goto	l18014
  8558  2527  0B6F               	decfsz	_sys_temper_flag^(0+256),w
  8559  2528  2D3B               	goto	l18014
  8560  2529  3003               	movlw	3
  8561  252A  0021               	movlb	1	; select bank1
  8562  252B  0239               	subwf	_mcu_temp_index^(0+128),w
  8563  252C  1803               	skipnc
  8564  252D  2D3B               	goto	l18014
  8565  252E                     l18012:	
  8566                           
  8567                           ;task.c: 1252: {
  8568                           ;task.c: 1254: system_status = 0x01;
  8569  252E  01BA               	clrf	_system_status^(0+128)
  8570  252F  0ABA               	incf	_system_status^(0+128),f
  8571  2530                     l18252:	
  8572                           ;task.c: 1256: }
  8573                           
  8574  2530  083A               	movf	_system_status^(0+128),w
  8575                           
  8576                           ; Switch size 1, requested type "space"
  8577                           ; Number of cases is 3, Range of values is 0 to 2
  8578                           ; switch strategies available:
  8579                           ; Name         Instructions Cycles
  8580                           ; simple_byte           10     6 (average)
  8581                           ; direct_byte           12     6 (fixed)
  8582                           ; jumptable            260     6 (fixed)
  8583                           ;	Chosen strategy is simple_byte
  8584  2531  3A00               	xorlw	0	; case 0
  8585  2532  1903               	skipnz
  8586  2533  2D57               	goto	l18036
  8587  2534  3A01               	xorlw	1	; case 1
  8588  2535  1903               	skipnz
  8589  2536  2DDD               	goto	l18130
  8590  2537  3A03               	xorlw	3	; case 2
  8591  2538  1903               	skipnz
  8592  2539  2E29               	goto	l18194
  8593  253A  2EDA               	goto	l1579
  8594  253B                     l18014:	
  8595                           
  8596                           ;task.c: 1257: else if((pv_voltage_status==0x02)&&(battery_voltage_status==0x01)&&(sys_t
      +                          emper_flag==0x01)&&(mcu_temp_index<0x03))
  8597  253B  0022               	movlb	2	; select bank2
  8598  253C  0843               	movf	_pv_voltage_status^(0+256),w
  8599  253D  3A02               	xorlw	2
  8600  253E  1D03               	skipz
  8601  253F  2D4C               	goto	l18024
  8602  2540  0B2A               	decfsz	_battery_voltage_status^(0+256),w
  8603  2541  2D4C               	goto	l18024
  8604  2542  0B6F               	decfsz	_sys_temper_flag^(0+256),w
  8605  2543  2D4C               	goto	l18024
  8606  2544  3003               	movlw	3
  8607  2545  0021               	movlb	1	; select bank1
  8608  2546  0239               	subwf	_mcu_temp_index^(0+128),w
  8609  2547  1803               	skipnc
  8610  2548  2D4C               	goto	l18024
  8611  2549                     l18022:	
  8612                           
  8613                           ;task.c: 1258: {
  8614                           ;task.c: 1260: system_status = 0x02;
  8615  2549  3002               	movlw	2
  8616  254A  00BA               	movwf	_system_status^(0+128)
  8617                           
  8618                           ;task.c: 1262: }
  8619  254B  2D30               	goto	l18252
  8620  254C                     l18024:	
  8621                           
  8622                           ;task.c: 1263: else
  8623                           ;task.c: 1264: {
  8624                           ;task.c: 1265: system_status = 0x00;
  8625  254C  0021               	movlb	1	; select bank1
  8626  254D  01BA               	clrf	_system_status^(0+128)
  8627  254E  2D30               	goto	l18252
  8628  254F                     l18026:	
  8629                           
  8630                           ;task.c: 1268: else if(work_mode==0x01)
  8631  254F  0B3D               	decfsz	_work_mode^(0+128),w
  8632  2550  2D52               	goto	l18030
  8633  2551  2D2E               	goto	l18012
  8634  2552                     l18030:	
  8635                           
  8636                           ;task.c: 1272: else if(work_mode==0x02)
  8637  2552  083D               	movf	_work_mode^(0+128),w
  8638  2553  3A02               	xorlw	2
  8639  2554  1903               	btfsc	3,2
  8640  2555  2D49               	goto	l18022
  8641  2556  2D4C               	goto	l18024
  8642  2557                     l18036:	
  8643                           
  8644                           ;task.c: 1291: discharge_led_status=0x00;
  8645  2557  0023               	movlb	3	; select bank3
  8646  2558  08C1               	movf	_nop_index^(0+384),f
  8647  2559  1D03               	skipz
  8648  255A  2DA6               	goto	l18104
  8649                           
  8650                           ;task.c: 1293: Disable_Buck_Pwm();
  8651  255B  276F               	fcall	_Disable_Buck_Pwm
  8652                           
  8653                           ;task.c: 1295: Set_Buck_Pwm_Duty(0);
  8654  255C  0020               	movlb	0	; select bank0
  8655  255D  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  8656  255E  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  8657  255F  318B  23BA  31A1   	fcall	_Set_Buck_Pwm_Duty
  8658                           
  8659                           ;task.c: 1297: Disable_Bost_Pwm();
  8660  2562  318B  23B5  31A1   	fcall	_Disable_Bost_Pwm
  8661                           
  8662                           ;task.c: 1299: Set_Bost_Pwm_Duty(0);
  8663  2565  0020               	movlb	0	; select bank0
  8664  2566  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  8665  2567  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  8666  2568  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8667                           
  8668                           ;task.c: 1307: pv_prev=0;
  8669  256B  0022               	movlb	2	; select bank2
  8670  256C  118E               	bcf	14,3	;volatile
  8671                           
  8672                           ;task.c: 1309: buck_pwm_value=0;
  8673  256D  0021               	movlb	1	; select bank1
  8674  256E  3041               	movlw	65
  8675  256F  01A6               	clrf	_buck_pwm_value^(0+128)
  8676  2570  01A7               	clrf	(_buck_pwm_value+1)^(0+128)
  8677                           
  8678                           ;task.c: 1311: bost_pwm_value=0;
  8679  2571  01A4               	clrf	_bost_pwm_value^(0+128)
  8680  2572  01A5               	clrf	(_bost_pwm_value+1)^(0+128)
  8681                           
  8682                           ;task.c: 1313: PWM =20;
  8683  2573  00A3               	movwf	(_PWM+3)^(0+128)
  8684  2574  30A0               	movlw	160
  8685  2575  00A2               	movwf	(_PWM+2)^(0+128)
  8686  2576  3020               	movlw	low _PID_CC_charge
  8687  2577  01A1               	clrf	(_PWM+1)^(0+128)
  8688  2578  01A0               	clrf	_PWM^(0+128)
  8689                           
  8690                           ;task.c: 1315: pid_init ( &PID_CC_charge);
  8691  2579  318F  27D0  31A1   	fcall	PL258	;call to abstracted procedure
  8692  257C  26DB               	fcall	_pid_init
  8693                           
  8694                           ;task.c: 1317: pid_init ( &PID_CV_charge);
  8695  257D  318F  27CB  31A1   	fcall	PL254	;call to abstracted procedure
  8696  2580  26DB  31A1         	fcall	_pid_init
  8697                           
  8698                           ;task.c: 1319: pid_init ( &PID_CC_discharge);
  8699  2582  30C7               	movlw	low _PID_CC_discharge
  8700  2583  00AB               	movwf	pid_init@pp
  8701  2584  3001               	movlw	high _PID_CC_discharge
  8702  2585  00AC               	movwf	pid_init@pp+1
  8703  2586  26DB               	fcall	_pid_init
  8704                           
  8705                           ;task.c: 1323: PID_CC_charge.Proportion = 0.001;
  8706                           
  8707                           ;task.c: 1325: PID_CC_charge.Integral = 0;
  8708                           
  8709                           ;task.c: 1327: PID_CC_charge.Derivative = 0;
  8710                           
  8711                           ;task.c: 1329: PID_CC_charge.SetPoint = 5.0*15.0;
  8712                           
  8713                           ;task.c: 1334: PID_CV_charge.Proportion = 0.001;
  8714                           
  8715                           ;task.c: 1336: PID_CV_charge.Integral = 0;
  8716                           
  8717                           ;task.c: 1338: PID_CV_charge.Derivative = 0;
  8718                           
  8719                           ;task.c: 1340: PID_CV_charge.SetPoint = dianchi_cv_level+1;
  8720  2587  318F  2717  31A1   	fcall	PL2	;call to abstracted procedure
  8721  258A  318C  24C6  31A1   	fcall	___fladd
  8722  258D  318F  276B  31A1   	fcall	PL64	;call to abstracted procedure
  8723                           
  8724                           ;task.c: 1344: PID_CC_discharge.Proportion = 0.001;
  8725                           
  8726                           ;task.c: 1346: PID_CC_discharge.Integral = 0.;
  8727                           
  8728                           ;task.c: 1348: PID_CC_discharge.Derivative = 0;
  8729                           
  8730                           ;task.c: 1350: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
  8731  2590  318F  2757  31A1   	fcall	PL14	;call to abstracted procedure
  8732  2593  31B3  2377  31A1   	fcall	PL4	;call to abstracted procedure
  8733  2596  26E5               	fcall	___fldiv
  8734  2597  3186  26CD  31A1   	fcall	PL30	;call to abstracted procedure
  8735  259A  318E  2607  31A1   	fcall	___flmul
  8736  259D  31B3  239C  31A1   	fcall	PL18	;call to abstracted procedure
  8737                           
  8738                           ;task.c: 1352: open_discharge_time=0x00;
  8739                           
  8740                           ;task.c: 1354: ms_cnt=0x00;
  8741                           
  8742                           ;task.c: 1355: se_cnt=0x00;
  8743                           
  8744                           ;task.c: 1356: mi_cnt=0x00;
  8745                           
  8746                           ;task.c: 1357: ho_cnt=0x00;
  8747                           
  8748                           ;task.c: 1358: limit_power_pid_flag=0x00;
  8749                           
  8750                           ;task.c: 1359: Adjust_Pout_Flag=0x00;
  8751                           
  8752                           ;task.c: 1360: voltage_adjust_index=0x01;
  8753                           
  8754                           ;task.c: 1362: nop_index=0x01;
  8755  25A0  279F  31A1         	fcall	PL42	;call to abstracted procedure
  8756  25A2  0AC1               	incf	_nop_index^(0+384),f
  8757                           
  8758                           ;task.c: 1364: discharge_index=0x00;
  8759  25A3  0021               	movlb	1	; select bank1
  8760  25A4  01B5               	clrf	_discharge_index^(0+128)
  8761                           
  8762                           ;task.c: 1366: charge_index=0x00;
  8763  25A5  01B3               	clrf	_charge_index^(0+128)
  8764  25A6                     l18104:	
  8765                           
  8766                           ;task.c: 1367: }
  8767                           ;task.c: 1368: if(run_index==0x00)
  8768  25A6  0023               	movlb	3	; select bank3
  8769  25A7  08C3               	movf	_run_index^(0+384),f
  8770  25A8  1D03               	skipz
  8771  25A9  0008               	return
  8772                           
  8773                           ;task.c: 1369: {
  8774                           ;task.c: 1370: Disable_Buck_Pwm();
  8775  25AA  276F               	fcall	_Disable_Buck_Pwm
  8776                           
  8777                           ;task.c: 1371: Set_Buck_Pwm_Duty(0);
  8778  25AB  0020               	movlb	0	; select bank0
  8779  25AC  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  8780  25AD  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  8781  25AE  318B  23BA  31A1   	fcall	_Set_Buck_Pwm_Duty
  8782                           
  8783                           ;task.c: 1372: Disable_Bost_Pwm();
  8784  25B1  318B  23B5  31A1   	fcall	_Disable_Bost_Pwm
  8785                           
  8786                           ;task.c: 1373: (LATCbits.LATC3 = 0x00);
  8787                           
  8788                           ;task.c: 1374: Set_Bost_Pwm_Duty(0);
  8789  25B4  318F  279B  31A1   	fcall	PL164	;call to abstracted procedure
  8790  25B7  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8791                           
  8792                           ;task.c: 1377: (LATCbits.LATC3 = 0x01);
  8793  25BA  0022               	movlb	2	; select bank2
  8794  25BB  158E               	bsf	14,3	;volatile
  8795                           
  8796                           ;task.c: 1379: Enable_Bost_Pwm();
  8797  25BC  2792               	fcall	_Enable_Bost_Pwm
  8798                           
  8799                           ;task.c: 1381: Set_Bost_Pwm_Duty(25);
  8800  25BD  3019               	movlw	25
  8801  25BE  0020               	movlb	0	; select bank0
  8802  25BF  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  8803  25C0  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  8804  25C1  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8805                           
  8806                           ;task.c: 1383: delay_ms(3000);
  8807  25C4  30B8               	movlw	184
  8808  25C5  0020               	movlb	0	; select bank0
  8809  25C6  00A3               	movwf	delay_ms@count
  8810  25C7  300B               	movlw	11
  8811  25C8  00A4               	movwf	delay_ms@count+1
  8812  25C9  318B  2392  31A1   	fcall	_delay_ms
  8813                           
  8814                           ;task.c: 1385: Set_Bost_Pwm_Duty(0);
  8815  25CC  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  8816  25CD  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  8817  25CE  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8818                           
  8819                           ;task.c: 1387: Disable_Bost_Pwm();
  8820  25D1  318B  23B5  31A1   	fcall	_Disable_Bost_Pwm
  8821                           
  8822                           ;task.c: 1388: (LATCbits.LATC3 = 0x00);
  8823                           
  8824                           ;task.c: 1389: Set_Bost_Pwm_Duty(0);
  8825  25D4  318F  279B  31A1   	fcall	PL164	;call to abstracted procedure
  8826  25D7  318B  2367         	fcall	_Set_Bost_Pwm_Duty
  8827                           
  8828                           ;task.c: 1390: run_index=0x01;
  8829  25D9  0023               	movlb	3	; select bank3
  8830  25DA  01C3               	clrf	_run_index^(0+384)
  8831  25DB  0AC3               	incf	_run_index^(0+384),f
  8832  25DC  0008               	return
  8833  25DD                     l18130:	
  8834                           
  8835                           ;task.c: 1397: {
  8836                           ;task.c: 1399: discharge_led_status=0x01;
  8837  25DD  0B33               	decfsz	_charge_index^(0+128),w
  8838  25DE  0008               	return
  8839                           
  8840                           ;task.c: 1401: Disable_Bost_Pwm();
  8841  25DF  318B  23B5  31A1   	fcall	_Disable_Bost_Pwm
  8842                           
  8843                           ;task.c: 1403: Set_Bost_Pwm_Duty(0);
  8844  25E2  0020               	movlb	0	; select bank0
  8845  25E3  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  8846  25E4  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  8847  25E5  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8848                           
  8849                           ;task.c: 1405: (LATCbits.LATC3 = 0x00);
  8850  25E8  0022               	movlb	2	; select bank2
  8851  25E9  118E               	bcf	14,3	;volatile
  8852                           
  8853                           ;task.c: 1407: Disable_Buck_Pwm();
  8854  25EA  276F  31A1         	fcall	_Disable_Buck_Pwm
  8855                           
  8856                           ;task.c: 1409: PWM =50;
  8857  25EC  27BA               	fcall	PL244	;call to abstracted procedure
  8858  25ED  3032               	movlw	50
  8859  25EE  01A1               	clrf	(_PWM+1)^(0+128)
  8860  25EF  01A0               	clrf	_PWM^(0+128)
  8861                           
  8862                           ;task.c: 1411: buck_pwm_value=50;
  8863  25F0  00A6               	movwf	_buck_pwm_value^(0+128)
  8864  25F1  01A7               	clrf	(_buck_pwm_value+1)^(0+128)
  8865                           
  8866                           ;task.c: 1413: Set_Buck_Pwm_Duty(buck_pwm_value);
  8867  25F2  319F  277B  31A1   	fcall	PL138	;call to abstracted procedure
  8868  25F5  318B  23BA  31A1   	fcall	_Set_Buck_Pwm_Duty
  8869                           
  8870                           ;task.c: 1431: pid_init ( &PID_CC_charge);
  8871  25F8  3020               	movlw	low _PID_CC_charge
  8872  25F9  318F  27D0  31A1   	fcall	PL258	;call to abstracted procedure
  8873  25FC  26DB               	fcall	_pid_init
  8874                           
  8875                           ;task.c: 1433: pid_init ( &PID_CV_charge);
  8876  25FD  318F  27CB  31A1   	fcall	PL254	;call to abstracted procedure
  8877  2600  26DB               	fcall	_pid_init
  8878                           
  8879                           ;task.c: 1436: PID_CC_charge.Proportion = 0.001;
  8880                           
  8881                           ;task.c: 1438: PID_CC_charge.Integral = 0;
  8882                           
  8883                           ;task.c: 1440: PID_CC_charge.Derivative = 0;
  8884                           
  8885                           ;task.c: 1442: PID_CC_charge.SetPoint = 5.0*15.0;
  8886                           
  8887                           ;task.c: 1446: PID_CV_charge.Proportion = 0.001;
  8888                           
  8889                           ;task.c: 1448: PID_CV_charge.Integral = 0;
  8890                           
  8891                           ;task.c: 1450: PID_CV_charge.Derivative = 0;
  8892                           
  8893                           ;task.c: 1457: P_last=0;
  8894  2601  318F  2717  31A1   	fcall	PL2	;call to abstracted procedure
  8895  2604  318C  24C6  31A1   	fcall	___fladd
  8896  2607  318F  276B  31A1   	fcall	PL64	;call to abstracted procedure
  8897                           
  8898                           ;task.c: 1459: open_discharge_time=0x00;
  8899                           
  8900                           ;task.c: 1461: ms_cnt=0x00;
  8901                           
  8902                           ;task.c: 1462: se_cnt=0x00;
  8903                           
  8904                           ;task.c: 1463: mi_cnt=0x00;
  8905                           
  8906                           ;task.c: 1464: ho_cnt=0x00;
  8907                           
  8908                           ;task.c: 1466: limit_power_pid_flag=0x00;
  8909                           
  8910                           ;task.c: 1467: Adjust_Pout_Flag=0x00;
  8911                           
  8912                           ;task.c: 1468: voltage_adjust_index=0x01;
  8913                           
  8914                           ;task.c: 1470: nop_index=0x00;
  8915  260A  279F  31A1         	fcall	PL42	;call to abstracted procedure
  8916                           
  8917                           ;task.c: 1472: discharge_index=0x00;
  8918  260C  0021               	movlb	1	; select bank1
  8919  260D  3002               	movlw	2
  8920  260E  01B5               	clrf	_discharge_index^(0+128)
  8921                           
  8922                           ;task.c: 1474: charge_index=0x02;
  8923  260F  00B3               	movwf	_charge_index^(0+128)
  8924                           
  8925                           ;task.c: 1477: today_index = today_index+1;
  8926  2610  0020               	movlb	0	; select bank0
  8927  2611  3007               	movlw	7
  8928  2612  0AEC               	incf	_today_index,f
  8929                           
  8930                           ;task.c: 1479: today_index = today_index%8;
  8931  2613  05EC               	andwf	_today_index,f
  8932                           
  8933                           ;task.c: 1481: eeprom_write(0x11,(unsigned char)today_index);
  8934  2614  086C               	movf	_today_index,w
  8935  2615  00E4               	movwf	eeprom_write@value
  8936  2616  3011               	movlw	17
  8937  2617  2775               	fcall	_eeprom_write
  8938                           
  8939                           ;task.c: 1483: bt_00_lv = b_v;
  8940  2618  0022               	movlb	2	; select bank2
  8941  2619  0823               	movf	(_b_v+3)^(0+256),w
  8942  261A  0024               	movlb	4	; select bank4
  8943  261B  00A7               	movwf	(_bt_00_lv+3)^(0+512)
  8944  261C  0022               	movlb	2	; select bank2
  8945  261D  0822               	movf	(_b_v+2)^(0+256),w
  8946  261E  0024               	movlb	4	; select bank4
  8947  261F  00A6               	movwf	(_bt_00_lv+2)^(0+512)
  8948  2620  0022               	movlb	2	; select bank2
  8949  2621  0821               	movf	(_b_v+1)^(0+256),w
  8950  2622  0024               	movlb	4	; select bank4
  8951  2623  00A5               	movwf	(_bt_00_lv+1)^(0+512)
  8952  2624  0022               	movlb	2	; select bank2
  8953  2625  0820               	movf	_b_v^(0+256),w
  8954  2626  0024               	movlb	4	; select bank4
  8955  2627  00A4               	movwf	_bt_00_lv^(0+512)
  8956  2628  0008               	return
  8957  2629                     l18194:	
  8958                           
  8959                           ;task.c: 1491: {
  8960                           ;task.c: 1493: charge_led_status=0x01;
  8961  2629  08B5               	movf	_discharge_index^(0+128),f
  8962  262A  1D03               	skipz
  8963  262B  0008               	return
  8964                           
  8965                           ;task.c: 1496: Disable_Buck_Pwm();
  8966  262C  276F               	fcall	_Disable_Buck_Pwm
  8967                           
  8968                           ;task.c: 1498: Set_Buck_Pwm_Duty(0);
  8969  262D  0020               	movlb	0	; select bank0
  8970  262E  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  8971  262F  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  8972  2630  318B  23BA  31A1   	fcall	_Set_Buck_Pwm_Duty
  8973                           
  8974                           ;task.c: 1500: (LATCbits.LATC3 = 0x00);
  8975  2633  0022               	movlb	2	; select bank2
  8976  2634  118E               	bcf	14,3	;volatile
  8977                           
  8978                           ;task.c: 1502: Disable_Bost_Pwm();
  8979  2635  318B  23B5  31A1   	fcall	_Disable_Bost_Pwm
  8980                           
  8981                           ;task.c: 1504: PWM =50;
  8982  2638  27BA               	fcall	PL244	;call to abstracted procedure
  8983  2639  3014               	movlw	20
  8984  263A  01A1               	clrf	(_PWM+1)^(0+128)
  8985  263B  01A0               	clrf	_PWM^(0+128)
  8986                           
  8987                           ;task.c: 1506: bost_pwm_value=20;
  8988                           
  8989                           ;task.c: 1508: Set_Bost_Pwm_Duty(bost_pwm_value);
  8990  263C  31B3  23BF  31A1   	fcall	PL48	;call to abstracted procedure
  8991  263F  318B  2367  31A1   	fcall	_Set_Bost_Pwm_Duty
  8992                           
  8993                           ;task.c: 1530: pid_init ( &PID_CC_discharge);
  8994  2642  30C7               	movlw	low _PID_CC_discharge
  8995  2643  0020               	movlb	0	; select bank0
  8996  2644  00AB               	movwf	pid_init@pp
  8997  2645  3001               	movlw	high _PID_CC_discharge
  8998  2646  00AC               	movwf	pid_init@pp+1
  8999  2647  26DB               	fcall	_pid_init
  9000                           
  9001                           ;task.c: 1533: PID_CC_discharge.Proportion = 0.001;
  9002                           
  9003                           ;task.c: 1535: PID_CC_discharge.Integral = 0;
  9004                           
  9005                           ;task.c: 1537: PID_CC_discharge.Derivative = 0;
  9006                           
  9007                           ;task.c: 1539: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
  9008  2648  318F  2757  31A1   	fcall	PL14	;call to abstracted procedure
  9009  264B  31B3  2377  31A1   	fcall	PL4	;call to abstracted procedure
  9010  264E  26E5               	fcall	___fldiv
  9011  264F  3186  26CD  31A1   	fcall	PL30	;call to abstracted procedure
  9012  2652  318E  2607  31A1   	fcall	___flmul
  9013  2655  31B3  239C  31A1   	fcall	PL18	;call to abstracted procedure
  9014                           
  9015                           ;task.c: 1541: open_discharge_time=0x00;
  9016                           
  9017                           ;task.c: 1543: ms_cnt=0x00;
  9018                           
  9019                           ;task.c: 1544: se_cnt=0x00;
  9020                           
  9021                           ;task.c: 1545: mi_cnt=0x00;
  9022                           
  9023                           ;task.c: 1546: ho_cnt=0x00;
  9024                           
  9025                           ;task.c: 1548: limit_power_pid_flag=0x00;
  9026                           
  9027                           ;task.c: 1549: Adjust_Pout_Flag=0x00;
  9028                           
  9029                           ;task.c: 1550: voltage_adjust_index=0x01;
  9030                           
  9031                           ;task.c: 1552: nop_index=0x00;
  9032  2658  279F               	fcall	PL42	;call to abstracted procedure
  9033                           
  9034                           ;task.c: 1554: discharge_index=0x01;
  9035  2659  0021               	movlb	1	; select bank1
  9036  265A  01B5               	clrf	_discharge_index^(0+128)
  9037  265B  0AB5               	incf	_discharge_index^(0+128),f
  9038                           
  9039                           ;task.c: 1556: charge_index=0x00;
  9040  265C  01B3               	clrf	_charge_index^(0+128)
  9041                           
  9042                           ;task.c: 1559: bt_00_hv = b_v;
  9043  265D  0022               	movlb	2	; select bank2
  9044  265E  0823               	movf	(_b_v+3)^(0+256),w
  9045  265F  0024               	movlb	4	; select bank4
  9046  2660  00A3               	movwf	(_bt_00_hv+3)^(0+512)
  9047  2661  0022               	movlb	2	; select bank2
  9048  2662  0822               	movf	(_b_v+2)^(0+256),w
  9049  2663  0024               	movlb	4	; select bank4
  9050  2664  00A2               	movwf	(_bt_00_hv+2)^(0+512)
  9051  2665  0022               	movlb	2	; select bank2
  9052  2666  0821               	movf	(_b_v+1)^(0+256),w
  9053  2667  0024               	movlb	4	; select bank4
  9054  2668  00A1               	movwf	(_bt_00_hv+1)^(0+512)
  9055  2669  0022               	movlb	2	; select bank2
  9056  266A  0820               	movf	_b_v^(0+256),w
  9057  266B  0024               	movlb	4	; select bank4
  9058  266C  00A0               	movwf	_bt_00_hv^(0+512)
  9059                           
  9060                           ;task.c: 1561: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/
      +                          256));
  9061  266D  0823               	movf	(_bt_00_hv+3)^(0+512),w
  9062  266E  0020               	movlb	0	; select bank0
  9063  266F  00CE               	movwf	___fldiv@f1+3
  9064  2670  0024               	movlb	4	; select bank4
  9065  2671  0822               	movf	(_bt_00_hv+2)^(0+512),w
  9066  2672  0020               	movlb	0	; select bank0
  9067  2673  00CD               	movwf	___fldiv@f1+2
  9068  2674  0024               	movlb	4	; select bank4
  9069  2675  0821               	movf	(_bt_00_hv+1)^(0+512),w
  9070  2676  0020               	movlb	0	; select bank0
  9071  2677  00CC               	movwf	___fldiv@f1+1
  9072  2678  0024               	movlb	4	; select bank4
  9073  2679  0820               	movf	_bt_00_hv^(0+512),w
  9074  267A  3186  26BB  31A1   	fcall	PL26	;call to abstracted procedure
  9075  267D  26E5               	fcall	___fldiv
  9076  267E  3186  26C4  31A1   	fcall	PL28	;call to abstracted procedure
  9077  2681  319E  2698  31A1   	fcall	___fltol
  9078  2684  085A               	movf	?___fltol,w
  9079  2685  00E4               	movwf	eeprom_write@value
  9080  2686  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  9081  2688  3E12               	addlw	18
  9082  2689  2775               	fcall	_eeprom_write
  9083                           
  9084                           ;task.c: 1563: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
  9085  268A  0024               	movlb	4	; select bank4
  9086  268B  0823               	movf	(_bt_00_hv+3)^(0+512),w
  9087  268C  0020               	movlb	0	; select bank0
  9088  268D  00DD               	movwf	___fltol@f1+3
  9089  268E  0024               	movlb	4	; select bank4
  9090  268F  0822               	movf	(_bt_00_hv+2)^(0+512),w
  9091  2690  0020               	movlb	0	; select bank0
  9092  2691  00DC               	movwf	___fltol@f1+2
  9093  2692  0024               	movlb	4	; select bank4
  9094  2693  0821               	movf	(_bt_00_hv+1)^(0+512),w
  9095  2694  0020               	movlb	0	; select bank0
  9096  2695  00DB               	movwf	___fltol@f1+1
  9097  2696  0024               	movlb	4	; select bank4
  9098  2697  0820               	movf	_bt_00_hv^(0+512),w
  9099  2698  0020               	movlb	0	; select bank0
  9100  2699  00DA               	movwf	___fltol@f1
  9101  269A  319E  2698  31A1   	fcall	___fltol
  9102  269D  085A               	movf	?___fltol,w
  9103  269E  00E4               	movwf	eeprom_write@value
  9104  269F  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  9105  26A1  3E13               	addlw	19
  9106  26A2  2775               	fcall	_eeprom_write
  9107                           
  9108                           ;task.c: 1565: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/
      +                          256));
  9109  26A3  0024               	movlb	4	; select bank4
  9110  26A4  0827               	movf	(_bt_00_lv+3)^(0+512),w
  9111  26A5  0020               	movlb	0	; select bank0
  9112  26A6  00CE               	movwf	___fldiv@f1+3
  9113  26A7  0024               	movlb	4	; select bank4
  9114  26A8  0826               	movf	(_bt_00_lv+2)^(0+512),w
  9115  26A9  0020               	movlb	0	; select bank0
  9116  26AA  00CD               	movwf	___fldiv@f1+2
  9117  26AB  0024               	movlb	4	; select bank4
  9118  26AC  0825               	movf	(_bt_00_lv+1)^(0+512),w
  9119  26AD  0020               	movlb	0	; select bank0
  9120  26AE  00CC               	movwf	___fldiv@f1+1
  9121  26AF  0024               	movlb	4	; select bank4
  9122  26B0  0824               	movf	_bt_00_lv^(0+512),w
  9123  26B1  3186  26BB  31A1   	fcall	PL26	;call to abstracted procedure
  9124  26B4  26E5               	fcall	___fldiv
  9125  26B5  3186  26C4  31A1   	fcall	PL28	;call to abstracted procedure
  9126  26B8  319E  2698  31A1   	fcall	___fltol
  9127  26BB  085A               	movf	?___fltol,w
  9128  26BC  00E4               	movwf	eeprom_write@value
  9129  26BD  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  9130  26BF  3E14               	addlw	20
  9131  26C0  2775               	fcall	_eeprom_write
  9132                           
  9133                           ;task.c: 1567: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
  9134  26C1  0024               	movlb	4	; select bank4
  9135  26C2  0827               	movf	(_bt_00_lv+3)^(0+512),w
  9136  26C3  0020               	movlb	0	; select bank0
  9137  26C4  00DD               	movwf	___fltol@f1+3
  9138  26C5  0024               	movlb	4	; select bank4
  9139  26C6  0826               	movf	(_bt_00_lv+2)^(0+512),w
  9140  26C7  0020               	movlb	0	; select bank0
  9141  26C8  00DC               	movwf	___fltol@f1+2
  9142  26C9  0024               	movlb	4	; select bank4
  9143  26CA  0825               	movf	(_bt_00_lv+1)^(0+512),w
  9144  26CB  0020               	movlb	0	; select bank0
  9145  26CC  00DB               	movwf	___fltol@f1+1
  9146  26CD  0024               	movlb	4	; select bank4
  9147  26CE  0824               	movf	_bt_00_lv^(0+512),w
  9148  26CF  0020               	movlb	0	; select bank0
  9149  26D0  00DA               	movwf	___fltol@f1
  9150  26D1  319E  2698  31A1   	fcall	___fltol
  9151  26D4  085A               	movf	?___fltol,w
  9152  26D5  00E4               	movwf	eeprom_write@value
  9153  26D6  27B4  31A1         	fcall	PL102	;call to abstracted procedure
  9154  26D8  3E15               	addlw	21
  9155  26D9  2F75               	ljmp	_eeprom_write
  9156  26DA                     l1579:	
  9157  26DA  0008               	return
  9158  26DB                     __end_of_handle_task_process:	
  9159  26DB                     __ptext34:	
  9160 ;; *************** function _pid_init *****************
  9161 ;; Defined at:
  9162 ;;		line 190 in file "D:\MCUProject\ZH-SL-F60\src\PID.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  pp              2   11[BANK0 ] PTR struct PID_VAR
  9165 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;		None               void
  9170 ;; Registers used:
  9171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 1F/0
  9174 ;;		On exit  : 1F/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;Total ram usage:        2 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    3
  9184 ;; This function calls:
  9185 ;;		_memset
  9186 ;; This function is called by:
  9187 ;;		_application_init
  9188 ;;		_handle_task_process
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _pid_init
  9194  26DB                     _pid_init:	
  9195                           
  9196                           ;PID.c: 192: memset (pp,0,sizeof(PID));
  9197                           
  9198                           ;incstack = 0
  9199                           ; Regs used in _pid_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9200  26DB  082C               	movf	pid_init@pp+1,w
  9201  26DC  00A4               	movwf	memset@p1+1
  9202  26DD  082B               	movf	pid_init@pp,w
  9203  26DE  00A3               	movwf	memset@p1
  9204  26DF  301C               	movlw	28
  9205  26E0  01A5               	clrf	memset@c
  9206  26E1  01A6               	clrf	memset@c+1
  9207  26E2  00A7               	movwf	memset@n
  9208  26E3  01A8               	clrf	memset@n+1
  9209  26E4  2FE9               	ljmp	l15090
  9210  26E5                     __end_of_pid_init:	
  9211  26E5                     __ptext44:	
  9212 ;; *************** function ___fldiv *****************
  9213 ;; Defined at:
  9214 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\fldiv.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  f2              4   39[BANK0 ] unsigned int 
  9217 ;;  f1              4   43[BANK0 ] unsigned int 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  f3              4   51[BANK0 ] unsigned int 
  9220 ;;  sign            1   57[BANK0 ] unsigned char 
  9221 ;;  exp             1   56[BANK0 ] unsigned char 
  9222 ;;  cntr            1   55[BANK0 ] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  4   39[BANK0 ] unsigned char 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0, pclath, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 1F/0
  9229 ;;		On exit  : 1F/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:       19 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    3
  9239 ;; This function calls:
  9240 ;;		___flpack
  9241 ;; This function is called by:
  9242 ;;		_read_param_eeprom
  9243 ;;		_auto_system
  9244 ;;		_application_init
  9245 ;;		_handle_ad_loop
  9246 ;;		_handle_task_process
  9247 ;;		_handle_uart_rx_buf
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           
  9252                           ;psect for function ___fldiv
  9253  26E5                     ___fldiv:	
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
  9257  26E5  084B               	movf	___fldiv@f1,w
  9258  26E6  00CF               	movwf	??___fldiv
  9259  26E7  084C               	movf	___fldiv@f1+1,w
  9260  26E8  00D0               	movwf	??___fldiv+1
  9261  26E9  084D               	movf	___fldiv@f1+2,w
  9262  26EA  00D1               	movwf	??___fldiv+2
  9263  26EB  084E               	movf	___fldiv@f1+3,w
  9264  26EC  00D2               	movwf	??___fldiv+3
  9265  26ED  1003               	clrc
  9266  26EE  0D51               	rlf	??___fldiv+2,w
  9267  26EF  0D52               	rlf	??___fldiv+3,w
  9268  26F0  00D8               	movwf	___fldiv@exp
  9269  26F1  08D8               	movf	___fldiv@exp,f
  9270  26F2  1D03               	skipz
  9271  26F3  2EF6               	goto	l19038
  9272  26F4  01C7               	clrf	?___fldiv
  9273  26F5  2FC0               	ljmp	PL262	;call to abstracted procedure
  9274  26F6                     l19038:	
  9275  26F6  0847               	movf	___fldiv@f2,w
  9276  26F7  00CF               	movwf	??___fldiv
  9277  26F8  0848               	movf	___fldiv@f2+1,w
  9278  26F9  00D0               	movwf	??___fldiv+1
  9279  26FA  0849               	movf	___fldiv@f2+2,w
  9280  26FB  00D1               	movwf	??___fldiv+2
  9281  26FC  084A               	movf	___fldiv@f2+3,w
  9282  26FD  00D2               	movwf	??___fldiv+3
  9283  26FE  1003               	clrc
  9284  26FF  0D51               	rlf	??___fldiv+2,w
  9285  2700  0D52               	rlf	??___fldiv+3,w
  9286  2701  00D9               	movwf	___fldiv@sign
  9287  2702  08D9               	movf	___fldiv@sign,f
  9288  2703  1D03               	skipz
  9289  2704  2F07               	goto	l19042
  9290  2705  01C7               	clrf	?___fldiv
  9291  2706  2FC0               	ljmp	PL262	;call to abstracted procedure
  9292  2707                     l19042:	
  9293  2707  3089               	movlw	137
  9294  2708  0759               	addwf	___fldiv@sign,w
  9295  2709  00CF               	movwf	??___fldiv
  9296  270A  02D8               	subwf	___fldiv@exp,f
  9297  270B  084E               	movf	___fldiv@f1+3,w
  9298  270C  00D9               	movwf	___fldiv@sign
  9299  270D  084A               	movf	___fldiv@f2+3,w
  9300  270E  06D9               	xorwf	___fldiv@sign,f
  9301  270F  3080               	movlw	128
  9302  2710  05D9               	andwf	___fldiv@sign,f
  9303  2711  3020               	movlw	32
  9304  2712  17CD               	bsf	___fldiv@f1+2,7
  9305  2713  01CE               	clrf	___fldiv@f1+3
  9306  2714  17C9               	bsf	___fldiv@f2+2,7
  9307  2715  01CA               	clrf	___fldiv@f2+3
  9308  2716  00D7               	movwf	___fldiv@cntr
  9309  2717                     l19060:	
  9310  2717  35D3               	lslf	___fldiv@f3,f
  9311  2718  0DD4               	rlf	___fldiv@f3+1,f
  9312  2719  0DD5               	rlf	___fldiv@f3+2,f
  9313  271A  0DD6               	rlf	___fldiv@f3+3,f
  9314  271B  084A               	movf	___fldiv@f2+3,w
  9315  271C  024E               	subwf	___fldiv@f1+3,w
  9316  271D  1D03               	skipz
  9317  271E  2F29               	goto	u13105
  9318  271F  0849               	movf	___fldiv@f2+2,w
  9319  2720  024D               	subwf	___fldiv@f1+2,w
  9320  2721  1D03               	skipz
  9321  2722  2F29               	goto	u13105
  9322  2723  0848               	movf	___fldiv@f2+1,w
  9323  2724  024C               	subwf	___fldiv@f1+1,w
  9324  2725  1D03               	skipz
  9325  2726  2F29               	goto	u13105
  9326  2727  0847               	movf	___fldiv@f2,w
  9327  2728  024B               	subwf	___fldiv@f1,w
  9328  2729                     u13105:	
  9329  2729  1C03               	skipc
  9330  272A  2F34               	goto	l19066
  9331  272B  0847               	movf	___fldiv@f2,w
  9332  272C  02CB               	subwf	___fldiv@f1,f
  9333  272D  0848               	movf	___fldiv@f2+1,w
  9334  272E  3BCC               	subwfb	___fldiv@f1+1,f
  9335  272F  0849               	movf	___fldiv@f2+2,w
  9336  2730  3BCD               	subwfb	___fldiv@f1+2,f
  9337  2731  084A               	movf	___fldiv@f2+3,w
  9338  2732  3BCE               	subwfb	___fldiv@f1+3,f
  9339  2733  1453               	bsf	___fldiv@f3,0
  9340  2734                     l19066:	
  9341  2734  35CB               	lslf	___fldiv@f1,f
  9342  2735  0DCC               	rlf	___fldiv@f1+1,f
  9343  2736  0DCD               	rlf	___fldiv@f1+2,f
  9344  2737  0DCE               	rlf	___fldiv@f1+3,f
  9345  2738  0BD7               	decfsz	___fldiv@cntr,f
  9346  2739  2F17               	goto	l19060
  9347  273A  0856               	movf	___fldiv@f3+3,w
  9348  273B  00A6               	movwf	___flpack@arg+3
  9349  273C  0855               	movf	___fldiv@f3+2,w
  9350  273D  00A5               	movwf	___flpack@arg+2
  9351  273E  0854               	movf	___fldiv@f3+1,w
  9352  273F  00A4               	movwf	___flpack@arg+1
  9353  2740  0853               	movf	___fldiv@f3,w
  9354  2741  00A3               	movwf	___flpack@arg
  9355  2742  0858               	movf	___fldiv@exp,w
  9356  2743  00A7               	movwf	___flpack@exp
  9357  2744  0859               	movf	___fldiv@sign,w
  9358  2745  00A8               	movwf	___flpack@sign
  9359  2746  318E  2675         	fcall	___flpack
  9360  2748  0826               	movf	?___flpack+3,w
  9361  2749  00CA               	movwf	?___fldiv+3
  9362  274A  0825               	movf	?___flpack+2,w
  9363  274B  00C9               	movwf	?___fldiv+2
  9364  274C  0824               	movf	?___flpack+1,w
  9365  274D  00C8               	movwf	?___fldiv+1
  9366  274E  0823               	movf	?___flpack,w
  9367  274F  00C7               	movwf	?___fldiv
  9368  2750  0008               	return
  9369  2751                     __end_of___fldiv:	
  9370  2751                     __ptext19:	
  9371 ;; *************** function ___awtofl *****************
  9372 ;; Defined at:
  9373 ;;		line 31 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtofl.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  c               2   13[BANK0 ] int 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  f1              4    0        int 
  9378 ;;  sign            1   17[BANK0 ] unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  4   13[BANK0 ] unsigned char 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, pclath, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 1F/0
  9385 ;;		On exit  : 1F/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;Total ram usage:        5 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    3
  9395 ;; This function calls:
  9396 ;;		___flpack
  9397 ;; This function is called by:
  9398 ;;		_read_param_eeprom
  9399 ;;		_pid_calc
  9400 ;;		_handle_ad_loop
  9401 ;;		_handle_uart_rx_buf
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           
  9406                           ;psect for function ___awtofl
  9407  2751                     ___awtofl:	
  9408                           
  9409                           ;incstack = 0
  9410                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
  9411  2751  01B1               	clrf	___awtofl@sign
  9412  2752  1FAE               	btfss	___awtofl@c+1,7
  9413  2753  2F5A               	goto	l18952
  9414  2754  09AD               	comf	___awtofl@c,f
  9415  2755  09AE               	comf	___awtofl@c+1,f
  9416  2756  0AAD               	incf	___awtofl@c,f
  9417  2757  1903               	skipnz
  9418  2758  0AAE               	incf	___awtofl@c+1,f
  9419  2759  0AB1               	incf	___awtofl@sign,f
  9420  275A                     l18952:	
  9421  275A  082D               	movf	___awtofl@c,w
  9422  275B  00A3               	movwf	___flpack@arg
  9423  275C  082E               	movf	___awtofl@c+1,w
  9424  275D  00A4               	movwf	___flpack@arg+1
  9425  275E  3096               	movlw	150
  9426  275F  01A5               	clrf	___flpack@arg+2
  9427  2760  01A6               	clrf	___flpack@arg+3
  9428  2761  00A7               	movwf	___flpack@exp
  9429  2762  0831               	movf	___awtofl@sign,w
  9430  2763  00A8               	movwf	___flpack@sign
  9431  2764  318E  2675         	fcall	___flpack
  9432  2766  0826               	movf	?___flpack+3,w
  9433  2767  00B0               	movwf	?___awtofl+3
  9434  2768  0825               	movf	?___flpack+2,w
  9435  2769  00AF               	movwf	?___awtofl+2
  9436  276A  0824               	movf	?___flpack+1,w
  9437  276B  00AE               	movwf	?___awtofl+1
  9438  276C  0823               	movf	?___flpack,w
  9439  276D  00AD               	movwf	?___awtofl
  9440  276E  0008               	return
  9441  276F                     __end_of___awtofl:	
  9442  276F                     __ptext42:	
  9443 ;; *************** function _Disable_Buck_Pwm *****************
  9444 ;; Defined at:
  9445 ;;		line 139 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;		None               void
  9452 ;; Registers used:
  9453 ;;		None
  9454 ;; Tracked objects:
  9455 ;;		On entry : 1C/3
  9456 ;;		On exit  : 1F/8
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    2
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_Key_Menu
  9470 ;;		_handle_ad_loop
  9471 ;;		_handle_task_process
  9472 ;;		_handle_uart_rx_buf
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           
  9477                           ;psect for function _Disable_Buck_Pwm
  9478  276F                     _Disable_Buck_Pwm:	
  9479                           
  9480                           ;pwm.c: 141: TRISCbits.TRISC2=1;
  9481                           
  9482                           ;incstack = 0
  9483                           ; Regs used in _Disable_Buck_Pwm: []
  9484  276F  0021               	movlb	1	; select bank1
  9485  2770  150E               	bsf	14,2	;volatile
  9486                           
  9487                           ;pwm.c: 143: TRISBbits.TRISB2=1;
  9488  2771  150D               	bsf	13,2	;volatile
  9489                           
  9490                           ;pwm.c: 145: TMR6ON=0;
  9491  2772  0028               	movlb	8	; select bank8
  9492  2773  111E               	bcf	30,2	;volatile
  9493  2774  0008               	return
  9494  2775                     __end_of_Disable_Buck_Pwm:	
  9495  2775                     __ptext37:	
  9496 ;; *************** function _eeprom_write *****************
  9497 ;; Defined at:
  9498 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  addr            1    wreg     unsigned char 
  9501 ;;  value           1   68[BANK0 ] unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  addr            1   69[BANK0 ] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;		None               void
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 1F/0
  9510 ;;		On exit  : 1F/3
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:        2 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    2
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_auto_system
  9524 ;;		_Key_Menu
  9525 ;;		_handle_task_process
  9526 ;;		_handle_uart_rx_buf
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _eeprom_write
  9532  2775                     _eeprom_write:	
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  9536                           ;eeprom_write@addr stored from wreg
  9537  2775  00E5               	movwf	eeprom_write@addr
  9538  2776                     l1907:	
  9539  2776  0023               	movlb	3	; select bank3
  9540  2777  1895               	btfsc	21,1	;volsfr
  9541  2778  2F76               	goto	l1907
  9542  2779  0020               	movlb	0	; select bank0
  9543  277A  0865               	movf	eeprom_write@addr,w
  9544  277B  0023               	movlb	3	; select bank3
  9545  277C  0091               	movwf	17	;volatile
  9546  277D  0192               	clrf	18	;volatile
  9547  277E  0020               	movlb	0	; select bank0
  9548  277F  0864               	movf	eeprom_write@value,w
  9549  2780  0023               	movlb	3	; select bank3
  9550  2781  0093               	movwf	19	;volatile
  9551  2782  303F               	movlw	63
  9552  2783  0595               	andwf	21,f	;volsfr
  9553  2784  1003               	bcf	3,0	;volatile
  9554  2785  1B8B               	btfsc	11,7	;volatile
  9555  2786  1403               	bsf	3,0	;volatile
  9556  2787  138B               	bcf	11,7	;volatile
  9557  2788  1515               	bsf	21,2	;volsfr
  9558  2789  3055               	movlw	85
  9559  278A  0096               	movwf	22	;volsfr
  9560  278B  30AA               	movlw	170
  9561  278C  0096               	movwf	22	;volsfr
  9562  278D  1495               	bsf	21,1	;volsfr
  9563  278E  1115               	bcf	21,2	;volsfr
  9564  278F  1803               	btfsc	3,0	;volatile
  9565  2790  178B               	bsf	11,7	;volatile
  9566  2791  0008               	return
  9567  2792                     __end_of_eeprom_write:	
  9568  2792                     __ptext41:	
  9569 ;; *************** function _Enable_Bost_Pwm *****************
  9570 ;; Defined at:
  9571 ;;		line 188 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;		None               void
  9578 ;; Registers used:
  9579 ;;		None
  9580 ;; Tracked objects:
  9581 ;;		On entry : 1F/2
  9582 ;;		On exit  : 1F/8
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    2
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_Key_Menu
  9596 ;;		_handle_ad_loop
  9597 ;;		_handle_task_process
  9598 ;;		_handle_uart_rx_buf
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           
  9603                           ;psect for function _Enable_Bost_Pwm
  9604  2792                     _Enable_Bost_Pwm:	
  9605                           
  9606                           ;pwm.c: 190: TRISBbits.TRISB5 =0;
  9607                           
  9608                           ;incstack = 0
  9609                           ; Regs used in _Enable_Bost_Pwm: []
  9610  2792  0021               	movlb	1	; select bank1
  9611  2793  128D               	bcf	13,5	;volatile
  9612                           
  9613                           ;pwm.c: 192: TMR4ON=1;
  9614  2794  0028               	movlb	8	; select bank8
  9615  2795  1517               	bsf	23,2	;volatile
  9616  2796  0008               	return
  9617  2797                     __end_of_Enable_Bost_Pwm:	
  9618  2797                     PL24:	
  9619  2797  0020               	movlb	0	; select bank0
  9620  2798  00DB               	movwf	read_param_eeprom@byte_l
  9621  2799  085A               	movf	read_param_eeprom@byte_h,w
  9622  279A  00AE               	movwf	___awtofl@c+1
  9623  279B  01AD               	clrf	___awtofl@c
  9624  279C  085B               	movf	read_param_eeprom@byte_l,w
  9625  279D  04AD               	iorwf	___awtofl@c,f
  9626  279E  0008               	return
  9627  279F                     __end_ofPL24:	
  9628  279F                     PL42:	
  9629  279F  0022               	movlb	2	; select bank2
  9630  27A0  01BF               	clrf	_open_discharge_time^(0+256)
  9631  27A1  0023               	movlb	3	; select bank3
  9632  27A2  01B4               	clrf	_ms_cnt^(0+384)
  9633  27A3  01B5               	clrf	(_ms_cnt+1)^(0+384)
  9634  27A4  01B6               	clrf	_se_cnt^(0+384)
  9635  27A5  01B7               	clrf	(_se_cnt+1)^(0+384)
  9636  27A6  0022               	movlb	2	; select bank2
  9637  27A7  01A6               	clrf	_mi_cnt^(0+256)
  9638  27A8  01A7               	clrf	(_mi_cnt+1)^(0+256)
  9639  27A9  01FC               	clrf	_ho_cnt
  9640  27AA  01FD               	clrf	_ho_cnt+1
  9641  27AB  0023               	movlb	3	; select bank3
  9642  27AC  01BB               	clrf	_limit_power_pid_flag^(0+384)
  9643  27AD  0021               	movlb	1	; select bank1
  9644  27AE  01B2               	clrf	_Adjust_Pout_Flag^(0+128)
  9645  27AF  01EC               	clrf	_voltage_adjust_index^(0+128)
  9646  27B0  0AEC               	incf	_voltage_adjust_index^(0+128),f
  9647  27B1  0023               	movlb	3	; select bank3
  9648  27B2  01C1               	clrf	_nop_index^(0+384)
  9649  27B3  0008               	return
  9650  27B4                     __end_ofPL42:	
  9651  27B4                     PL102:	
  9652  27B4  086C               	movf	_today_index,w
  9653  27B5  3E08               	addlw	8
  9654  27B6  3907               	andlw	7
  9655  27B7  0709               	addwf	9,w
  9656  27B8  0709               	addwf	9,w
  9657  27B9  0008               	return
  9658  27BA                     __end_ofPL102:	
  9659  27BA                     PL244:	
  9660  27BA  3042               	movlw	66
  9661  27BB  0021               	movlb	1	; select bank1
  9662  27BC  00A3               	movwf	(_PWM+3)^(0+128)
  9663  27BD  3048               	movlw	72
  9664  27BE  00A2               	movwf	(_PWM+2)^(0+128)
  9665  27BF  0008               	return
  9666  27C0                     __end_ofPL244:	
  9667  27C0                     PL262:	
  9668  27C0  01C8               	clrf	?___fldiv+1
  9669  27C1  01C9               	clrf	?___fldiv+2
  9670  27C2  01CA               	clrf	?___fldiv+3
  9671  27C3  0008               	return
  9672  27C4                     __end_ofPL262:	
  9673  27C4                     __ptext3:	
  9674 ;; *************** function ___lmul *****************
  9675 ;; Defined at:
  9676 ;;		line 2 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  multiplier      4    3[BANK0 ] unsigned long 
  9679 ;;  multiplicand    4    7[BANK0 ] unsigned long 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  product         4   11[BANK0 ] unsigned long 
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  4    3[BANK0 ] unsigned long 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0
  9686 ;; Tracked objects:
  9687 ;;		On entry : 1F/0
  9688 ;;		On exit  : 1F/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9691 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;Total ram usage:       12 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    2
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_read_param_eeprom
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           
  9706                           ;psect for function ___lmul
  9707  27C4                     ___lmul:	
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  9711  27C4  01AB               	clrf	___lmul@product
  9712  27C5  01AC               	clrf	___lmul@product+1
  9713  27C6  01AD               	clrf	___lmul@product+2
  9714  27C7  01AE               	clrf	___lmul@product+3
  9715  27C8                     l2277:	
  9716  27C8  1C23               	btfss	___lmul@multiplier,0
  9717  27C9  2FD2               	goto	l15484
  9718  27CA  0827               	movf	___lmul@multiplicand,w
  9719  27CB  07AB               	addwf	___lmul@product,f
  9720  27CC  0828               	movf	___lmul@multiplicand+1,w
  9721  27CD  3DAC               	addwfc	___lmul@product+1,f
  9722  27CE  0829               	movf	___lmul@multiplicand+2,w
  9723  27CF  3DAD               	addwfc	___lmul@product+2,f
  9724  27D0  082A               	movf	___lmul@multiplicand+3,w
  9725  27D1  3DAE               	addwfc	___lmul@product+3,f
  9726  27D2                     l15484:	
  9727  27D2  35A7               	lslf	___lmul@multiplicand,f
  9728  27D3  0DA8               	rlf	___lmul@multiplicand+1,f
  9729  27D4  0DA9               	rlf	___lmul@multiplicand+2,f
  9730  27D5  0DAA               	rlf	___lmul@multiplicand+3,f
  9731  27D6  36A6               	lsrf	___lmul@multiplier+3,f
  9732  27D7  0CA5               	rrf	___lmul@multiplier+2,f
  9733  27D8  0CA4               	rrf	___lmul@multiplier+1,f
  9734  27D9  0CA3               	rrf	___lmul@multiplier,f
  9735  27DA  0826               	movf	___lmul@multiplier+3,w
  9736  27DB  0425               	iorwf	___lmul@multiplier+2,w
  9737  27DC  0424               	iorwf	___lmul@multiplier+1,w
  9738  27DD  0423               	iorwf	___lmul@multiplier,w
  9739  27DE  1D03               	skipz
  9740  27DF  2FC8               	goto	l2277
  9741  27E0  082E               	movf	___lmul@product+3,w
  9742  27E1  00A6               	movwf	?___lmul+3
  9743  27E2  082D               	movf	___lmul@product+2,w
  9744  27E3  00A5               	movwf	?___lmul+2
  9745  27E4  082C               	movf	___lmul@product+1,w
  9746  27E5  00A4               	movwf	?___lmul+1
  9747  27E6  082B               	movf	___lmul@product,w
  9748  27E7  00A3               	movwf	?___lmul
  9749  27E8  0008               	return
  9750  27E9                     __end_of___lmul:	
  9751  27E9                     __ptext35:	
  9752 ;; *************** function _memset *****************
  9753 ;; Defined at:
  9754 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  p1              2    3[BANK0 ] PTR void 
  9757 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), uart1_rx_buf(80), 
  9758 ;;  c               2    5[BANK0 ] int 
  9759 ;;  n               2    7[BANK0 ] unsigned int 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  p               2    9[BANK0 ] PTR unsigned char 
  9762 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), uart1_rx_buf(80), 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  2    3[BANK0 ] PTR void 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 1F/0
  9769 ;;		On exit  : 1F/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9772 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;Total ram usage:        8 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    2
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		_pid_init
  9783 ;;		_handle_uart_rx_buf
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function _memset
  9789  27E9                     _memset:	
  9790  27E9                     l15090:	
  9791                           ;incstack = 0
  9792                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  9793                           
  9794  27E9  0824               	movf	memset@p1+1,w
  9795  27EA  00AA               	movwf	memset@p+1
  9796  27EB  0823               	movf	memset@p1,w
  9797  27EC  00A9               	movwf	memset@p
  9798  27ED                     l15096:	
  9799  27ED  3001               	movlw	1
  9800  27EE  02A7               	subwf	memset@n,f
  9801  27EF  3000               	movlw	0
  9802  27F0  3BA8               	subwfb	memset@n+1,f
  9803  27F1  0A27               	incf	memset@n,w
  9804  27F2  1903               	skipnz
  9805  27F3  0A28               	incf	memset@n+1,w
  9806  27F4  1903               	btfsc	3,2
  9807  27F5  0008               	return
  9808  27F6  0829               	movf	memset@p,w
  9809  27F7  0086               	movwf	6
  9810  27F8  082A               	movf	memset@p+1,w
  9811  27F9  0087               	movwf	7
  9812  27FA  0825               	movf	memset@c,w
  9813  27FB  0081               	movwf	1
  9814  27FC  0AA9               	incf	memset@p,f
  9815  27FD  1903               	skipnz
  9816  27FE  0AAA               	incf	memset@p+1,f
  9817  27FF  2FED               	goto	l15096
  9818  2800                     __end_of_memset:	
  9819                           
  9820                           	psect	text5
  9821  2914                     __ptext5:	
  9822 ;; *************** function _handle_uart_rx_buf *****************
  9823 ;; Defined at:
  9824 ;;		line 232 in file "D:\MCUProject\ZH-SL-F60\src\uart.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  crc_in          2   70[BANK0 ] unsigned int 
  9829 ;;  byte_l          1    0        unsigned char 
  9830 ;;  byte_h          1    0        unsigned char 
  9831 ;;  i               1    0        unsigned char 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;		None               void
  9834 ;; Registers used:
  9835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 1F/2
  9838 ;;		On exit  : 1F/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        2 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    4
  9848 ;; This function calls:
  9849 ;;		_Disable_Bost_Pwm
  9850 ;;		_Disable_Buck_Pwm
  9851 ;;		_Enable_Bost_Pwm
  9852 ;;		_Set_Bost_Pwm_Duty
  9853 ;;		_Set_Buck_Pwm_Duty
  9854 ;;		___awtofl
  9855 ;;		___fldiv
  9856 ;;		___flge
  9857 ;;		___flmul
  9858 ;;		___fltol
  9859 ;;		___lbtofl
  9860 ;;		___lwtofl
  9861 ;;		___wmul
  9862 ;;		_crc16
  9863 ;;		_delay_ms
  9864 ;;		_eeprom_read
  9865 ;;		_eeprom_write
  9866 ;;		_memset
  9867 ;; This function is called by:
  9868 ;;		_main
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _handle_uart_rx_buf
  9874  2914                     _handle_uart_rx_buf:	
  9875                           
  9876                           ;uart.c: 236: unsigned int crc_in;
  9877                           ;uart.c: 238: unsigned char byte_h,byte_l;
  9878                           ;uart.c: 240: switch(rx_frame_kind)
  9879                           
  9880                           ;incstack = 0
  9881                           ; Regs used in _handle_uart_rx_buf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9882  2914  3186  2E82         	goto	l18630
  9883  2916                     l18256:	
  9884                           
  9885                           ;uart.c: 243: if(uart1_rx_buf[1]==0xA1)
  9886  2916  0028               	movlb	8	; select bank8
  9887  2917  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
  9888  2918  3AA1               	xorlw	161
  9889  2919  1D03               	skipz
  9890  291A  2C69               	goto	L97
  9891                           
  9892                           ;uart.c: 244: {
  9893                           ;uart.c: 245: crc_in=crc16(&uart1_rx_buf[1],1);
  9894  291B  3021               	movlw	low (_uart1_rx_buf+1)
  9895  291C  3187  27F5  31A9   	fcall	PL224	;call to abstracted procedure
  9896  291F  3189  212C  31A9   	fcall	_crc16
  9897  2922  0824               	movf	?_crc16+1,w
  9898  2923  00E7               	movwf	handle_uart_rx_buf@crc_in+1
  9899                           
  9900                           ;uart.c: 247: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
  9901  2924  3187  27C1  31A9   	fcall	PL166	;call to abstracted procedure
  9902  2927  1D03               	skipz
  9903  2928  2C69               	goto	L97
  9904                           
  9905                           ;uart.c: 248: {
  9906                           ;uart.c: 250: p_v=(float)(((float)pv_voltage_value)/10)*61;
  9907  2929  3042               	movlw	66
  9908  292A  3187  27B4  31A9   	fcall	PL154	;call to abstracted procedure
  9909  292D  3186  26F9  31A9   	fcall	PL84	;call to abstracted procedure
  9910  2930  319B  2346  31A9   	fcall	___lwtofl
  9911  2933  3186  26D6  31A9   	fcall	PL50	;call to abstracted procedure
  9912  2936  31A6  26E5  31A9   	fcall	___fldiv
  9913  2939  3186  26CD  31A9   	fcall	PL30	;call to abstracted procedure
  9914  293C  318E  2607  31A9   	fcall	___flmul
  9915  293F  0837               	movf	?___flmul+3,w
  9916  2940  0024               	movlb	4	; select bank4
  9917  2941  00BB               	movwf	(_p_v+3)^(0+512)
  9918  2942  0020               	movlb	0	; select bank0
  9919  2943  0836               	movf	?___flmul+2,w
  9920  2944  0024               	movlb	4	; select bank4
  9921  2945  00BA               	movwf	(_p_v+2)^(0+512)
  9922  2946  0020               	movlb	0	; select bank0
  9923  2947  0835               	movf	?___flmul+1,w
  9924  2948  0024               	movlb	4	; select bank4
  9925  2949  00B9               	movwf	(_p_v+1)^(0+512)
  9926  294A  0020               	movlb	0	; select bank0
  9927  294B  0834               	movf	?___flmul,w
  9928  294C  0024               	movlb	4	; select bank4
  9929  294D  00B8               	movwf	_p_v^(0+512)
  9930                           
  9931                           ;uart.c: 252: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
  9932  294E  3041               	movlw	65
  9933  294F  0020               	movlb	0	; select bank0
  9934  2950  00B7               	movwf	___flmul@f1+3
  9935  2951  30F8               	movlw	248
  9936  2952  00B6               	movwf	___flmul@f1+2
  9937  2953  3051               	movlw	81
  9938  2954  00B5               	movwf	___flmul@f1+1
  9939  2955  30EC               	movlw	236
  9940  2956  00B4               	movwf	___flmul@f1
  9941  2957  3041               	movlw	65
  9942  2958  00CA               	movwf	___fldiv@f2+3
  9943  2959  3020               	movlw	32
  9944  295A  00C9               	movwf	___fldiv@f2+2
  9945  295B  01C8               	clrf	___fldiv@f2+1
  9946  295C  01C7               	clrf	___fldiv@f2
  9947  295D  086B               	movf	_battery_voltage_value+1,w
  9948  295E  00B1               	movwf	___lwtofl@c+1
  9949  295F  086A               	movf	_battery_voltage_value,w
  9950  2960  00B0               	movwf	___lwtofl@c
  9951  2961  319B  2346  31A9   	fcall	___lwtofl
  9952  2964  3186  26D6  31A9   	fcall	PL50	;call to abstracted procedure
  9953  2967  31A6  26E5  31A9   	fcall	___fldiv
  9954  296A  3186  26CD  31A9   	fcall	PL30	;call to abstracted procedure
  9955  296D  318E  2607  31A9   	fcall	___flmul
  9956  2970  0837               	movf	?___flmul+3,w
  9957  2971  0022               	movlb	2	; select bank2
  9958  2972  00A3               	movwf	(_b_v+3)^(0+256)
  9959  2973  0020               	movlb	0	; select bank0
  9960  2974  0836               	movf	?___flmul+2,w
  9961  2975  0022               	movlb	2	; select bank2
  9962  2976  00A2               	movwf	(_b_v+2)^(0+256)
  9963  2977  0020               	movlb	0	; select bank0
  9964  2978  0835               	movf	?___flmul+1,w
  9965  2979  0022               	movlb	2	; select bank2
  9966  297A  00A1               	movwf	(_b_v+1)^(0+256)
  9967  297B  0020               	movlb	0	; select bank0
  9968  297C  0834               	movf	?___flmul,w
  9969  297D  0022               	movlb	2	; select bank2
  9970  297E  00A0               	movwf	_b_v^(0+256)
  9971                           
  9972                           ;uart.c: 254: load_v=(float)(((float)load_voltage_value)/10)*61;
  9973  297F  3042               	movlw	66
  9974  2980  3187  27B4  31A9   	fcall	PL154	;call to abstracted procedure
  9975  2983  0021               	movlb	1	; select bank1
  9976  2984  31B4  24BB  31A9   	fcall	PL104	;call to abstracted procedure
  9977  2987  319B  2346  31A9   	fcall	___lwtofl
  9978  298A  3186  26D6  31A9   	fcall	PL50	;call to abstracted procedure
  9979  298D  31A6  26E5  31A9   	fcall	___fldiv
  9980  2990  3186  26CD  31A9   	fcall	PL30	;call to abstracted procedure
  9981  2993  318E  2607  31A9   	fcall	___flmul
  9982  2996  0837               	movf	?___flmul+3,w
  9983  2997  0024               	movlb	4	; select bank4
  9984  2998  00B3               	movwf	(_load_v+3)^(0+512)
  9985  2999  0020               	movlb	0	; select bank0
  9986  299A  0836               	movf	?___flmul+2,w
  9987  299B  0024               	movlb	4	; select bank4
  9988  299C  00B2               	movwf	(_load_v+2)^(0+512)
  9989  299D  0020               	movlb	0	; select bank0
  9990  299E  0835               	movf	?___flmul+1,w
  9991  299F  0024               	movlb	4	; select bank4
  9992  29A0  00B1               	movwf	(_load_v+1)^(0+512)
  9993  29A1  0020               	movlb	0	; select bank0
  9994  29A2  0834               	movf	?___flmul,w
  9995  29A3  0024               	movlb	4	; select bank4
  9996  29A4  00B0               	movwf	_load_v^(0+512)
  9997                           
  9998                           ;uart.c: 256: charge_I=((float)charge_current_value)/0.15;
  9999  29A5  303E               	movlw	62
 10000  29A6  0020               	movlb	0	; select bank0
 10001  29A7  00CA               	movwf	___fldiv@f2+3
 10002  29A8  3019               	movlw	25
 10003  29A9  00C9               	movwf	___fldiv@f2+2
 10004  29AA  3099               	movlw	153
 10005  29AB  00C8               	movwf	___fldiv@f2+1
 10006  29AC  309A               	movlw	154
 10007  29AD  00C7               	movwf	___fldiv@f2
 10008  29AE  0022               	movlb	2	; select bank2
 10009  29AF  3187  27CD  31A9   	fcall	PL168	;call to abstracted procedure
 10010  29B2  319B  2346  31A9   	fcall	___lwtofl
 10011  29B5  3186  26D6  31A9   	fcall	PL50	;call to abstracted procedure
 10012  29B8  31A6  26E5  31A9   	fcall	___fldiv
 10013  29BB  084A               	movf	?___fldiv+3,w
 10014  29BC  0024               	movlb	4	; select bank4
 10015  29BD  00AB               	movwf	(_charge_I+3)^(0+512)
 10016  29BE  0020               	movlb	0	; select bank0
 10017  29BF  0849               	movf	?___fldiv+2,w
 10018  29C0  0024               	movlb	4	; select bank4
 10019  29C1  00AA               	movwf	(_charge_I+2)^(0+512)
 10020  29C2  0020               	movlb	0	; select bank0
 10021  29C3  0848               	movf	?___fldiv+1,w
 10022  29C4  0024               	movlb	4	; select bank4
 10023  29C5  00A9               	movwf	(_charge_I+1)^(0+512)
 10024  29C6  0020               	movlb	0	; select bank0
 10025  29C7  0847               	movf	?___fldiv,w
 10026  29C8  0024               	movlb	4	; select bank4
 10027  29C9  00A8               	movwf	_charge_I^(0+512)
 10028                           
 10029                           ;uart.c: 258: load_I=((float)discharge_current_value)/1.6;
 10030  29CA  303F               	movlw	63
 10031  29CB  0020               	movlb	0	; select bank0
 10032  29CC  00CA               	movwf	___fldiv@f2+3
 10033  29CD  30CC               	movlw	204
 10034  29CE  00C9               	movwf	___fldiv@f2+2
 10035  29CF  00C8               	movwf	___fldiv@f2+1
 10036  29D0  30CD               	movlw	205
 10037  29D1  00C7               	movwf	___fldiv@f2
 10038  29D2  0021               	movlb	1	; select bank1
 10039  29D3  082B               	movf	(_discharge_current_value+1)^(0+128),w
 10040  29D4  0020               	movlb	0	; select bank0
 10041  29D5  00B1               	movwf	___lwtofl@c+1
 10042  29D6  0021               	movlb	1	; select bank1
 10043  29D7  082A               	movf	_discharge_current_value^(0+128),w
 10044  29D8  0020               	movlb	0	; select bank0
 10045  29D9  00B0               	movwf	___lwtofl@c
 10046  29DA  319B  2346  31A9   	fcall	___lwtofl
 10047  29DD  3186  26D6  31A9   	fcall	PL50	;call to abstracted procedure
 10048  29E0  31A6  26E5  31A9   	fcall	___fldiv
 10049  29E3  084A               	movf	?___fldiv+3,w
 10050  29E4  0024               	movlb	4	; select bank4
 10051  29E5  00AF               	movwf	(_load_I+3)^(0+512)
 10052  29E6  0020               	movlb	0	; select bank0
 10053  29E7  0849               	movf	?___fldiv+2,w
 10054  29E8  0024               	movlb	4	; select bank4
 10055  29E9  00AE               	movwf	(_load_I+2)^(0+512)
 10056  29EA  0020               	movlb	0	; select bank0
 10057  29EB  0848               	movf	?___fldiv+1,w
 10058  29EC  0024               	movlb	4	; select bank4
 10059  29ED  00AD               	movwf	(_load_I+1)^(0+512)
 10060  29EE  0020               	movlb	0	; select bank0
 10061  29EF  0847               	movf	?___fldiv,w
 10062  29F0  0024               	movlb	4	; select bank4
 10063  29F1  00AC               	movwf	_load_I^(0+512)
 10064                           
 10065                           ;uart.c: 260: sys_mode=(volt_id<<4)|system_status;
 10066  29F2  0021               	movlb	1	; select bank1
 10067  29F3  0E6B               	swapf	_volt_id^(0+128),w
 10068  29F4  39F0               	andlw	240
 10069  29F5  043A               	iorwf	_system_status^(0+128),w
 10070  29F6  0023               	movlb	3	; select bank3
 10071  29F7  00C4               	movwf	_sys_mode^(0+384)
 10072                           
 10073                           ;uart.c: 264: uart1_tx_buf[0]=0x55;
 10074  29F8  3055               	movlw	85
 10075  29F9  0027               	movlb	7	; select bank7
 10076  29FA  00A0               	movwf	_uart1_tx_buf^(0+896)
 10077                           
 10078                           ;uart.c: 266: uart1_tx_buf[1]=0xB1;
 10079  29FB  30B1               	movlw	177
 10080  29FC  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 10081                           
 10082                           ;uart.c: 268: uart1_tx_buf[2]=(unsigned char )(p_v/256);
 10083  29FD  0024               	movlb	4	; select bank4
 10084  29FE  083B               	movf	(_p_v+3)^(0+512),w
 10085  29FF  0020               	movlb	0	; select bank0
 10086  2A00  00CE               	movwf	___fldiv@f1+3
 10087  2A01  0024               	movlb	4	; select bank4
 10088  2A02  083A               	movf	(_p_v+2)^(0+512),w
 10089  2A03  0020               	movlb	0	; select bank0
 10090  2A04  00CD               	movwf	___fldiv@f1+2
 10091  2A05  0024               	movlb	4	; select bank4
 10092  2A06  0839               	movf	(_p_v+1)^(0+512),w
 10093  2A07  0020               	movlb	0	; select bank0
 10094  2A08  00CC               	movwf	___fldiv@f1+1
 10095  2A09  0024               	movlb	4	; select bank4
 10096  2A0A  0838               	movf	_p_v^(0+512),w
 10097  2A0B  3186  26BB  31A9   	fcall	PL26	;call to abstracted procedure
 10098  2A0E  31A6  26E5  31A9   	fcall	___fldiv
 10099  2A11  3186  26C4  31A9   	fcall	PL28	;call to abstracted procedure
 10100  2A14  319E  2698  31A9   	fcall	___fltol
 10101  2A17  085A               	movf	?___fltol,w
 10102  2A18  0027               	movlb	7	; select bank7
 10103  2A19  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 10104                           
 10105                           ;uart.c: 269: uart1_tx_buf[3]=(unsigned char )p_v;
 10106  2A1A  0024               	movlb	4	; select bank4
 10107  2A1B  083B               	movf	(_p_v+3)^(0+512),w
 10108  2A1C  0020               	movlb	0	; select bank0
 10109  2A1D  00DD               	movwf	___fltol@f1+3
 10110  2A1E  0024               	movlb	4	; select bank4
 10111  2A1F  083A               	movf	(_p_v+2)^(0+512),w
 10112  2A20  0020               	movlb	0	; select bank0
 10113  2A21  00DC               	movwf	___fltol@f1+2
 10114  2A22  0024               	movlb	4	; select bank4
 10115  2A23  0839               	movf	(_p_v+1)^(0+512),w
 10116  2A24  0020               	movlb	0	; select bank0
 10117  2A25  00DB               	movwf	___fltol@f1+1
 10118  2A26  0024               	movlb	4	; select bank4
 10119  2A27  0838               	movf	_p_v^(0+512),w
 10120  2A28  0020               	movlb	0	; select bank0
 10121  2A29  00DA               	movwf	___fltol@f1
 10122  2A2A  319E  2698  31A9   	fcall	___fltol
 10123  2A2D  085A               	movf	?___fltol,w
 10124  2A2E  0027               	movlb	7	; select bank7
 10125  2A2F  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 10126                           
 10127                           ;uart.c: 271: uart1_tx_buf[4]=(unsigned char )(b_v/256);
 10128  2A30  0022               	movlb	2	; select bank2
 10129  2A31  0823               	movf	(_b_v+3)^(0+256),w
 10130  2A32  0020               	movlb	0	; select bank0
 10131  2A33  00CE               	movwf	___fldiv@f1+3
 10132  2A34  0022               	movlb	2	; select bank2
 10133  2A35  0822               	movf	(_b_v+2)^(0+256),w
 10134  2A36  0020               	movlb	0	; select bank0
 10135  2A37  00CD               	movwf	___fldiv@f1+2
 10136  2A38  0022               	movlb	2	; select bank2
 10137  2A39  0821               	movf	(_b_v+1)^(0+256),w
 10138  2A3A  0020               	movlb	0	; select bank0
 10139  2A3B  00CC               	movwf	___fldiv@f1+1
 10140  2A3C  0022               	movlb	2	; select bank2
 10141  2A3D  0820               	movf	_b_v^(0+256),w
 10142  2A3E  3186  26BB  31A9   	fcall	PL26	;call to abstracted procedure
 10143  2A41  31A6  26E5  31A9   	fcall	___fldiv
 10144  2A44  3186  26C4  31A9   	fcall	PL28	;call to abstracted procedure
 10145  2A47  319E  2698  31A9   	fcall	___fltol
 10146  2A4A  085A               	movf	?___fltol,w
 10147  2A4B  0027               	movlb	7	; select bank7
 10148  2A4C  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 10149                           
 10150                           ;uart.c: 272: uart1_tx_buf[5]=(unsigned char )b_v;
 10151  2A4D  0022               	movlb	2	; select bank2
 10152  2A4E  0823               	movf	(_b_v+3)^(0+256),w
 10153  2A4F  0020               	movlb	0	; select bank0
 10154  2A50  00DD               	movwf	___fltol@f1+3
 10155  2A51  0022               	movlb	2	; select bank2
 10156  2A52  0822               	movf	(_b_v+2)^(0+256),w
 10157  2A53  0020               	movlb	0	; select bank0
 10158  2A54  00DC               	movwf	___fltol@f1+2
 10159  2A55  0022               	movlb	2	; select bank2
 10160  2A56  0821               	movf	(_b_v+1)^(0+256),w
 10161  2A57  0020               	movlb	0	; select bank0
 10162  2A58  00DB               	movwf	___fltol@f1+1
 10163  2A59  0022               	movlb	2	; select bank2
 10164  2A5A  0820               	movf	_b_v^(0+256),w
 10165  2A5B  0020               	movlb	0	; select bank0
 10166  2A5C  00DA               	movwf	___fltol@f1
 10167  2A5D  319E  2698  31A9   	fcall	___fltol
 10168  2A60  085A               	movf	?___fltol,w
 10169  2A61  0027               	movlb	7	; select bank7
 10170  2A62  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 10171                           
 10172                           ;uart.c: 274: uart1_tx_buf[6]=(unsigned char )(load_v/256);
 10173  2A63  0024               	movlb	4	; select bank4
 10174  2A64  0833               	movf	(_load_v+3)^(0+512),w
 10175  2A65  0020               	movlb	0	; select bank0
 10176  2A66  00CE               	movwf	___fldiv@f1+3
 10177  2A67  0024               	movlb	4	; select bank4
 10178  2A68  0832               	movf	(_load_v+2)^(0+512),w
 10179  2A69  0020               	movlb	0	; select bank0
 10180  2A6A  00CD               	movwf	___fldiv@f1+2
 10181  2A6B  0024               	movlb	4	; select bank4
 10182  2A6C  0831               	movf	(_load_v+1)^(0+512),w
 10183  2A6D  0020               	movlb	0	; select bank0
 10184  2A6E  00CC               	movwf	___fldiv@f1+1
 10185  2A6F  0024               	movlb	4	; select bank4
 10186  2A70  0830               	movf	_load_v^(0+512),w
 10187  2A71  3186  26BB  31A9   	fcall	PL26	;call to abstracted procedure
 10188  2A74  31A6  26E5  31A9   	fcall	___fldiv
 10189  2A77  3186  26C4  31A9   	fcall	PL28	;call to abstracted procedure
 10190  2A7A  319E  2698  31A9   	fcall	___fltol
 10191  2A7D  085A               	movf	?___fltol,w
 10192  2A7E  0027               	movlb	7	; select bank7
 10193  2A7F  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
 10194                           
 10195                           ;uart.c: 275: uart1_tx_buf[7]=(unsigned char )load_v;
 10196  2A80  0024               	movlb	4	; select bank4
 10197  2A81  0833               	movf	(_load_v+3)^(0+512),w
 10198  2A82  0020               	movlb	0	; select bank0
 10199  2A83  00DD               	movwf	___fltol@f1+3
 10200  2A84  0024               	movlb	4	; select bank4
 10201  2A85  0832               	movf	(_load_v+2)^(0+512),w
 10202  2A86  0020               	movlb	0	; select bank0
 10203  2A87  00DC               	movwf	___fltol@f1+2
 10204  2A88  0024               	movlb	4	; select bank4
 10205  2A89  0831               	movf	(_load_v+1)^(0+512),w
 10206  2A8A  0020               	movlb	0	; select bank0
 10207  2A8B  00DB               	movwf	___fltol@f1+1
 10208  2A8C  0024               	movlb	4	; select bank4
 10209  2A8D  0830               	movf	_load_v^(0+512),w
 10210  2A8E  0020               	movlb	0	; select bank0
 10211  2A8F  00DA               	movwf	___fltol@f1
 10212  2A90  319E  2698  31A9   	fcall	___fltol
 10213  2A93  085A               	movf	?___fltol,w
 10214  2A94  0027               	movlb	7	; select bank7
 10215  2A95  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
 10216                           
 10217                           ;uart.c: 277: uart1_tx_buf[8]=(unsigned char )(charge_I/256);
 10218  2A96  0024               	movlb	4	; select bank4
 10219  2A97  082B               	movf	(_charge_I+3)^(0+512),w
 10220  2A98  0020               	movlb	0	; select bank0
 10221  2A99  00CE               	movwf	___fldiv@f1+3
 10222  2A9A  0024               	movlb	4	; select bank4
 10223  2A9B  082A               	movf	(_charge_I+2)^(0+512),w
 10224  2A9C  0020               	movlb	0	; select bank0
 10225  2A9D  00CD               	movwf	___fldiv@f1+2
 10226  2A9E  0024               	movlb	4	; select bank4
 10227  2A9F  0829               	movf	(_charge_I+1)^(0+512),w
 10228  2AA0  0020               	movlb	0	; select bank0
 10229  2AA1  00CC               	movwf	___fldiv@f1+1
 10230  2AA2  0024               	movlb	4	; select bank4
 10231  2AA3  0828               	movf	_charge_I^(0+512),w
 10232  2AA4  3186  26BB  31A9   	fcall	PL26	;call to abstracted procedure
 10233  2AA7  31A6  26E5  31A9   	fcall	___fldiv
 10234  2AAA  3186  26C4  31A9   	fcall	PL28	;call to abstracted procedure
 10235  2AAD  319E  2698  31A9   	fcall	___fltol
 10236  2AB0  085A               	movf	?___fltol,w
 10237  2AB1  0027               	movlb	7	; select bank7
 10238  2AB2  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
 10239                           
 10240                           ;uart.c: 278: uart1_tx_buf[9]=(unsigned char )charge_I;
 10241  2AB3  0024               	movlb	4	; select bank4
 10242  2AB4  082B               	movf	(_charge_I+3)^(0+512),w
 10243  2AB5  0020               	movlb	0	; select bank0
 10244  2AB6  00DD               	movwf	___fltol@f1+3
 10245  2AB7  0024               	movlb	4	; select bank4
 10246  2AB8  082A               	movf	(_charge_I+2)^(0+512),w
 10247  2AB9  0020               	movlb	0	; select bank0
 10248  2ABA  00DC               	movwf	___fltol@f1+2
 10249  2ABB  0024               	movlb	4	; select bank4
 10250  2ABC  0829               	movf	(_charge_I+1)^(0+512),w
 10251  2ABD  0020               	movlb	0	; select bank0
 10252  2ABE  00DB               	movwf	___fltol@f1+1
 10253  2ABF  0024               	movlb	4	; select bank4
 10254  2AC0  0828               	movf	_charge_I^(0+512),w
 10255  2AC1  0020               	movlb	0	; select bank0
 10256  2AC2  00DA               	movwf	___fltol@f1
 10257  2AC3  319E  2698  31A9   	fcall	___fltol
 10258  2AC6  085A               	movf	?___fltol,w
 10259  2AC7  0027               	movlb	7	; select bank7
 10260  2AC8  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
 10261                           
 10262                           ;uart.c: 280: uart1_tx_buf[10]=(unsigned char )(load_I/256);
 10263  2AC9  0024               	movlb	4	; select bank4
 10264  2ACA  082F               	movf	(_load_I+3)^(0+512),w
 10265  2ACB  0020               	movlb	0	; select bank0
 10266  2ACC  00CE               	movwf	___fldiv@f1+3
 10267  2ACD  0024               	movlb	4	; select bank4
 10268  2ACE  082E               	movf	(_load_I+2)^(0+512),w
 10269  2ACF  0020               	movlb	0	; select bank0
 10270  2AD0  00CD               	movwf	___fldiv@f1+2
 10271  2AD1  0024               	movlb	4	; select bank4
 10272  2AD2  082D               	movf	(_load_I+1)^(0+512),w
 10273  2AD3  0020               	movlb	0	; select bank0
 10274  2AD4  00CC               	movwf	___fldiv@f1+1
 10275  2AD5  0024               	movlb	4	; select bank4
 10276  2AD6  082C               	movf	_load_I^(0+512),w
 10277  2AD7  3186  26BB  31A9   	fcall	PL26	;call to abstracted procedure
 10278  2ADA  31A6  26E5  31A9   	fcall	___fldiv
 10279  2ADD  3186  26C4  31A9   	fcall	PL28	;call to abstracted procedure
 10280  2AE0  319E  2698  31A9   	fcall	___fltol
 10281  2AE3  085A               	movf	?___fltol,w
 10282  2AE4  0027               	movlb	7	; select bank7
 10283  2AE5  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
 10284                           
 10285                           ;uart.c: 281: uart1_tx_buf[11]=(unsigned char )load_I;
 10286  2AE6  0024               	movlb	4	; select bank4
 10287  2AE7  082F               	movf	(_load_I+3)^(0+512),w
 10288  2AE8  0020               	movlb	0	; select bank0
 10289  2AE9  00DD               	movwf	___fltol@f1+3
 10290  2AEA  0024               	movlb	4	; select bank4
 10291  2AEB  082E               	movf	(_load_I+2)^(0+512),w
 10292  2AEC  0020               	movlb	0	; select bank0
 10293  2AED  00DC               	movwf	___fltol@f1+2
 10294  2AEE  0024               	movlb	4	; select bank4
 10295  2AEF  082D               	movf	(_load_I+1)^(0+512),w
 10296  2AF0  0020               	movlb	0	; select bank0
 10297  2AF1  00DB               	movwf	___fltol@f1+1
 10298  2AF2  0024               	movlb	4	; select bank4
 10299  2AF3  082C               	movf	_load_I^(0+512),w
 10300  2AF4  0020               	movlb	0	; select bank0
 10301  2AF5  00DA               	movwf	___fltol@f1
 10302  2AF6  319E  2698  31A9   	fcall	___fltol
 10303  2AF9  085A               	movf	?___fltol,w
 10304  2AFA  0027               	movlb	7	; select bank7
 10305  2AFB  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
 10306                           
 10307                           ;uart.c: 283: uart1_tx_buf[12]=(unsigned char )sys_mode;
 10308  2AFC  0023               	movlb	3	; select bank3
 10309  2AFD  0844               	movf	_sys_mode^(0+384),w
 10310  2AFE  0027               	movlb	7	; select bank7
 10311  2AFF  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
 10312                           
 10313                           ;uart.c: 285: uart1_tx_buf[13]=(unsigned char )(mcu_value/256);
 10314  2B00  0021               	movlb	1	; select bank1
 10315  2B01  082F               	movf	(_mcu_value+1)^(0+128),w
 10316  2B02  0027               	movlb	7	; select bank7
 10317  2B03  00AD               	movwf	(_uart1_tx_buf^(0+896)+13)
 10318                           
 10319                           ;uart.c: 287: uart1_tx_buf[14]=(unsigned char )(mcu_value);
 10320  2B04  0021               	movlb	1	; select bank1
 10321  2B05  082E               	movf	_mcu_value^(0+128),w
 10322  2B06  0027               	movlb	7	; select bank7
 10323  2B07  00AE               	movwf	(_uart1_tx_buf^(0+896)+14)
 10324                           
 10325                           ;uart.c: 289: uart1_tx_buf[15]=(unsigned char )(discharge_current_value/256);
 10326  2B08  0021               	movlb	1	; select bank1
 10327  2B09  082B               	movf	(_discharge_current_value+1)^(0+128),w
 10328  2B0A  0027               	movlb	7	; select bank7
 10329  2B0B  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
 10330                           
 10331                           ;uart.c: 291: uart1_tx_buf[16]=(unsigned char )(discharge_current_value);
 10332  2B0C  0021               	movlb	1	; select bank1
 10333  2B0D  082A               	movf	_discharge_current_value^(0+128),w
 10334  2B0E  0027               	movlb	7	; select bank7
 10335  2B0F  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
 10336                           
 10337                           ;uart.c: 293: uart1_tx_buf[17]=(unsigned char )(temperature_value/256);
 10338  2B10  0022               	movlb	2	; select bank2
 10339  2B11  0829               	movf	(_temperature_value+1)^(0+256),w
 10340  2B12  0027               	movlb	7	; select bank7
 10341  2B13  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
 10342                           
 10343                           ;uart.c: 295: uart1_tx_buf[18]=(unsigned char )(temperature_value);
 10344  2B14  0022               	movlb	2	; select bank2
 10345  2B15  0828               	movf	_temperature_value^(0+256),w
 10346  2B16  0027               	movlb	7	; select bank7
 10347  2B17  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
 10348                           
 10349                           ;uart.c: 298: uart1_tx_buf[19]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
 10350  2B18  0020               	movlb	0	; select bank0
 10351  2B19  31A7  27B4  31A9   	fcall	PL102	;call to abstracted procedure
 10352  2B1C  3E12               	addlw	18
 10353  2B1D  31A4  24EB  31A9   	fcall	_eeprom_read
 10354  2B20  0027               	movlb	7	; select bank7
 10355  2B21  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
 10356                           
 10357                           ;uart.c: 300: uart1_tx_buf[20]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
 10358  2B22  0020               	movlb	0	; select bank0
 10359  2B23  31A7  27B4  31A9   	fcall	PL102	;call to abstracted procedure
 10360  2B26  3E13               	addlw	19
 10361  2B27  31A4  24EB  31A9   	fcall	_eeprom_read
 10362  2B2A  0027               	movlb	7	; select bank7
 10363  2B2B  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
 10364                           
 10365                           ;uart.c: 302: uart1_tx_buf[21]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
 10366  2B2C  0020               	movlb	0	; select bank0
 10367  2B2D  31A7  27B4  31A9   	fcall	PL102	;call to abstracted procedure
 10368  2B30  3E14               	addlw	20
 10369  2B31  31A4  24EB  31A9   	fcall	_eeprom_read
 10370  2B34  0027               	movlb	7	; select bank7
 10371  2B35  00B5               	movwf	(_uart1_tx_buf^(0+896)+21)
 10372                           
 10373                           ;uart.c: 304: uart1_tx_buf[22]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
 10374  2B36  0020               	movlb	0	; select bank0
 10375  2B37  31A7  27B4  31A9   	fcall	PL102	;call to abstracted procedure
 10376  2B3A  3E15               	addlw	21
 10377  2B3B  31A4  24EB  31A9   	fcall	_eeprom_read
 10378  2B3E  0027               	movlb	7	; select bank7
 10379  2B3F  00B6               	movwf	(_uart1_tx_buf^(0+896)+22)
 10380                           
 10381                           ;uart.c: 307: uart1_tx_buf[23]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
 10382  2B40  0020               	movlb	0	; select bank0
 10383  2B41  3187  27A1  31A9   	fcall	PL146	;call to abstracted procedure
 10384  2B44  3E12               	addlw	18
 10385  2B45  31A4  24EB  31A9   	fcall	_eeprom_read
 10386  2B48  0027               	movlb	7	; select bank7
 10387  2B49  00B7               	movwf	(_uart1_tx_buf^(0+896)+23)
 10388                           
 10389                           ;uart.c: 309: uart1_tx_buf[24]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
 10390  2B4A  0020               	movlb	0	; select bank0
 10391  2B4B  3187  27A1  31A9   	fcall	PL146	;call to abstracted procedure
 10392  2B4E  3E13               	addlw	19
 10393  2B4F  31A4  24EB  31A9   	fcall	_eeprom_read
 10394  2B52  0027               	movlb	7	; select bank7
 10395  2B53  00B8               	movwf	(_uart1_tx_buf^(0+896)+24)
 10396                           
 10397                           ;uart.c: 311: uart1_tx_buf[25]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
 10398  2B54  0020               	movlb	0	; select bank0
 10399  2B55  3187  27A1  31A9   	fcall	PL146	;call to abstracted procedure
 10400  2B58  3E14               	addlw	20
 10401  2B59  31A4  24EB  31A9   	fcall	_eeprom_read
 10402  2B5C  0027               	movlb	7	; select bank7
 10403  2B5D  00B9               	movwf	(_uart1_tx_buf^(0+896)+25)
 10404                           
 10405                           ;uart.c: 313: uart1_tx_buf[26]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
 10406  2B5E  0020               	movlb	0	; select bank0
 10407  2B5F  3187  27A1  31A9   	fcall	PL146	;call to abstracted procedure
 10408  2B62  3E15               	addlw	21
 10409  2B63  31A4  24EB  31A9   	fcall	_eeprom_read
 10410  2B66  0027               	movlb	7	; select bank7
 10411  2B67  00BA               	movwf	(_uart1_tx_buf^(0+896)+26)
 10412                           
 10413                           ;uart.c: 316: uart1_tx_buf[27]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
 10414  2B68  0020               	movlb	0	; select bank0
 10415  2B69  3187  27A7  31A9   	fcall	PL148	;call to abstracted procedure
 10416  2B6C  3E12               	addlw	18
 10417  2B6D  31A4  24EB  31A9   	fcall	_eeprom_read
 10418  2B70  0027               	movlb	7	; select bank7
 10419  2B71  00BB               	movwf	(_uart1_tx_buf^(0+896)+27)
 10420                           
 10421                           ;uart.c: 318: uart1_tx_buf[28]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
 10422  2B72  0020               	movlb	0	; select bank0
 10423  2B73  3187  27A7  31A9   	fcall	PL148	;call to abstracted procedure
 10424  2B76  3E13               	addlw	19
 10425  2B77  31A4  24EB  31A9   	fcall	_eeprom_read
 10426  2B7A  0027               	movlb	7	; select bank7
 10427  2B7B  00BC               	movwf	(_uart1_tx_buf^(0+896)+28)
 10428                           
 10429                           ;uart.c: 320: uart1_tx_buf[29]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
 10430  2B7C  0020               	movlb	0	; select bank0
 10431  2B7D  3187  27A7  31A9   	fcall	PL148	;call to abstracted procedure
 10432  2B80  3E14               	addlw	20
 10433  2B81  31A4  24EB  31A9   	fcall	_eeprom_read
 10434  2B84  0027               	movlb	7	; select bank7
 10435  2B85  00BD               	movwf	(_uart1_tx_buf^(0+896)+29)
 10436                           
 10437                           ;uart.c: 322: uart1_tx_buf[30]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
 10438  2B86  0020               	movlb	0	; select bank0
 10439  2B87  3187  27A7  31A9   	fcall	PL148	;call to abstracted procedure
 10440  2B8A  3E15               	addlw	21
 10441  2B8B  31A4  24EB  31A9   	fcall	_eeprom_read
 10442  2B8E  0027               	movlb	7	; select bank7
 10443  2B8F  00BE               	movwf	(_uart1_tx_buf^(0+896)+30)
 10444                           
 10445                           ;uart.c: 325: uart1_tx_buf[31]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
 10446  2B90  0020               	movlb	0	; select bank0
 10447  2B91  3187  279B  31A9   	fcall	PL144	;call to abstracted procedure
 10448  2B94  3E12               	addlw	18
 10449  2B95  31A4  24EB  31A9   	fcall	_eeprom_read
 10450  2B98  0027               	movlb	7	; select bank7
 10451  2B99  00BF               	movwf	(_uart1_tx_buf^(0+896)+31)
 10452                           
 10453                           ;uart.c: 327: uart1_tx_buf[32]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
 10454  2B9A  0020               	movlb	0	; select bank0
 10455  2B9B  3187  279B  31A9   	fcall	PL144	;call to abstracted procedure
 10456  2B9E  3E13               	addlw	19
 10457  2B9F  31A4  24EB  31A9   	fcall	_eeprom_read
 10458  2BA2  0027               	movlb	7	; select bank7
 10459  2BA3  00C0               	movwf	(_uart1_tx_buf^(0+896)+32)
 10460                           
 10461                           ;uart.c: 329: uart1_tx_buf[33]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
 10462  2BA4  0020               	movlb	0	; select bank0
 10463  2BA5  3187  279B  31A9   	fcall	PL144	;call to abstracted procedure
 10464  2BA8  3E14               	addlw	20
 10465  2BA9  31A4  24EB  31A9   	fcall	_eeprom_read
 10466  2BAC  0027               	movlb	7	; select bank7
 10467  2BAD  00C1               	movwf	(_uart1_tx_buf^(0+896)+33)
 10468                           
 10469                           ;uart.c: 331: uart1_tx_buf[34]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
 10470  2BAE  0020               	movlb	0	; select bank0
 10471  2BAF  3187  279B  31A9   	fcall	PL144	;call to abstracted procedure
 10472  2BB2  3E15               	addlw	21
 10473  2BB3  31A4  24EB  31A9   	fcall	_eeprom_read
 10474  2BB6  0027               	movlb	7	; select bank7
 10475  2BB7  00C2               	movwf	(_uart1_tx_buf^(0+896)+34)
 10476                           
 10477                           ;uart.c: 334: uart1_tx_buf[35]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
 10478  2BB8  0020               	movlb	0	; select bank0
 10479  2BB9  3187  2795  31A9   	fcall	PL142	;call to abstracted procedure
 10480  2BBC  3E12               	addlw	18
 10481  2BBD  31A4  24EB  31A9   	fcall	_eeprom_read
 10482  2BC0  0027               	movlb	7	; select bank7
 10483  2BC1  00C3               	movwf	(_uart1_tx_buf^(0+896)+35)
 10484                           
 10485                           ;uart.c: 336: uart1_tx_buf[36]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
 10486  2BC2  0020               	movlb	0	; select bank0
 10487  2BC3  3187  2795  31A9   	fcall	PL142	;call to abstracted procedure
 10488  2BC6  3E13               	addlw	19
 10489  2BC7  31A4  24EB  31A9   	fcall	_eeprom_read
 10490  2BCA  0027               	movlb	7	; select bank7
 10491  2BCB  00C4               	movwf	(_uart1_tx_buf^(0+896)+36)
 10492                           
 10493                           ;uart.c: 338: uart1_tx_buf[37]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
 10494  2BCC  0020               	movlb	0	; select bank0
 10495  2BCD  3187  2795  31A9   	fcall	PL142	;call to abstracted procedure
 10496  2BD0  3E14               	addlw	20
 10497  2BD1  31A4  24EB  31A9   	fcall	_eeprom_read
 10498  2BD4  0027               	movlb	7	; select bank7
 10499  2BD5  00C5               	movwf	(_uart1_tx_buf^(0+896)+37)
 10500                           
 10501                           ;uart.c: 340: uart1_tx_buf[38]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
 10502  2BD6  0020               	movlb	0	; select bank0
 10503  2BD7  3187  2795  31A9   	fcall	PL142	;call to abstracted procedure
 10504  2BDA  3E15               	addlw	21
 10505  2BDB  31A4  24EB  31A9   	fcall	_eeprom_read
 10506  2BDE  0027               	movlb	7	; select bank7
 10507  2BDF  00C6               	movwf	(_uart1_tx_buf^(0+896)+38)
 10508                           
 10509                           ;uart.c: 343: uart1_tx_buf[39]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
 10510  2BE0  0020               	movlb	0	; select bank0
 10511  2BE1  3187  2783  31A9   	fcall	PL134	;call to abstracted procedure
 10512  2BE4  3E12               	addlw	18
 10513  2BE5  31A4  24EB  31A9   	fcall	_eeprom_read
 10514  2BE8  0027               	movlb	7	; select bank7
 10515  2BE9  00C7               	movwf	(_uart1_tx_buf^(0+896)+39)
 10516                           
 10517                           ;uart.c: 345: uart1_tx_buf[40]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
 10518  2BEA  0020               	movlb	0	; select bank0
 10519  2BEB  3187  2783  31A9   	fcall	PL134	;call to abstracted procedure
 10520  2BEE  3E13               	addlw	19
 10521  2BEF  31A4  24EB  31A9   	fcall	_eeprom_read
 10522  2BF2  0027               	movlb	7	; select bank7
 10523  2BF3  00C8               	movwf	(_uart1_tx_buf^(0+896)+40)
 10524                           
 10525                           ;uart.c: 347: uart1_tx_buf[41]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
 10526  2BF4  0020               	movlb	0	; select bank0
 10527  2BF5  3187  2783  31A9   	fcall	PL134	;call to abstracted procedure
 10528  2BF8  3E14               	addlw	20
 10529  2BF9  31A4  24EB  31A9   	fcall	_eeprom_read
 10530  2BFC  0027               	movlb	7	; select bank7
 10531  2BFD  00C9               	movwf	(_uart1_tx_buf^(0+896)+41)
 10532                           
 10533                           ;uart.c: 349: uart1_tx_buf[42]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
 10534  2BFE  0020               	movlb	0	; select bank0
 10535  2BFF  3187  2783  31A9   	fcall	PL134	;call to abstracted procedure
 10536  2C02  3E15               	addlw	21
 10537  2C03  31A4  24EB  31A9   	fcall	_eeprom_read
 10538  2C06  0027               	movlb	7	; select bank7
 10539  2C07  00CA               	movwf	(_uart1_tx_buf^(0+896)+42)
 10540                           
 10541                           ;uart.c: 352: uart1_tx_buf[43]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
 10542  2C08  0020               	movlb	0	; select bank0
 10543  2C09  3187  2789  31A9   	fcall	PL136	;call to abstracted procedure
 10544  2C0C  3E12               	addlw	18
 10545  2C0D  31A4  24EB  31A9   	fcall	_eeprom_read
 10546  2C10  0027               	movlb	7	; select bank7
 10547  2C11  00CB               	movwf	(_uart1_tx_buf^(0+896)+43)
 10548                           
 10549                           ;uart.c: 354: uart1_tx_buf[44]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
 10550  2C12  0020               	movlb	0	; select bank0
 10551  2C13  3187  2789  31A9   	fcall	PL136	;call to abstracted procedure
 10552  2C16  3E13               	addlw	19
 10553  2C17  31A4  24EB  31A9   	fcall	_eeprom_read
 10554  2C1A  0027               	movlb	7	; select bank7
 10555  2C1B  00CC               	movwf	(_uart1_tx_buf^(0+896)+44)
 10556                           
 10557                           ;uart.c: 356: uart1_tx_buf[45]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
 10558  2C1C  0020               	movlb	0	; select bank0
 10559  2C1D  3187  2789  31A9   	fcall	PL136	;call to abstracted procedure
 10560  2C20  3E14               	addlw	20
 10561  2C21  31A4  24EB  31A9   	fcall	_eeprom_read
 10562  2C24  0027               	movlb	7	; select bank7
 10563  2C25  00CD               	movwf	(_uart1_tx_buf^(0+896)+45)
 10564                           
 10565                           ;uart.c: 358: uart1_tx_buf[46]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
 10566  2C26  0020               	movlb	0	; select bank0
 10567  2C27  3187  2789  31A9   	fcall	PL136	;call to abstracted procedure
 10568  2C2A  3E15               	addlw	21
 10569  2C2B  31A4  24EB  31A9   	fcall	_eeprom_read
 10570  2C2E  0027               	movlb	7	; select bank7
 10571  2C2F  00CE               	movwf	(_uart1_tx_buf^(0+896)+46)
 10572                           
 10573                           ;uart.c: 361: uart1_tx_buf[47]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
 10574  2C30  0020               	movlb	0	; select bank0
 10575  2C31  3187  278F  31A9   	fcall	PL140	;call to abstracted procedure
 10576  2C34  3E12               	addlw	18
 10577  2C35  31A4  24EB  31A9   	fcall	_eeprom_read
 10578  2C38  0027               	movlb	7	; select bank7
 10579  2C39  00CF               	movwf	(_uart1_tx_buf^(0+896)+47)
 10580                           
 10581                           ;uart.c: 363: uart1_tx_buf[48]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
 10582  2C3A  0020               	movlb	0	; select bank0
 10583  2C3B  3187  278F  31A9   	fcall	PL140	;call to abstracted procedure
 10584  2C3E  3E13               	addlw	19
 10585  2C3F  31A4  24EB  31A9   	fcall	_eeprom_read
 10586  2C42  0027               	movlb	7	; select bank7
 10587  2C43  00D0               	movwf	(_uart1_tx_buf^(0+896)+48)
 10588                           
 10589                           ;uart.c: 365: uart1_tx_buf[49]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
 10590  2C44  0020               	movlb	0	; select bank0
 10591  2C45  3187  278F  31A9   	fcall	PL140	;call to abstracted procedure
 10592  2C48  3E14               	addlw	20
 10593  2C49  31A4  24EB  31A9   	fcall	_eeprom_read
 10594  2C4C  0027               	movlb	7	; select bank7
 10595  2C4D  00D1               	movwf	(_uart1_tx_buf^(0+896)+49)
 10596                           
 10597                           ;uart.c: 367: uart1_tx_buf[50]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
 10598  2C4E  0020               	movlb	0	; select bank0
 10599  2C4F  3187  278F  31A9   	fcall	PL140	;call to abstracted procedure
 10600  2C52  3E15               	addlw	21
 10601  2C53  31A4  24EB  31A9   	fcall	_eeprom_read
 10602  2C56  0027               	movlb	7	; select bank7
 10603  2C57  00D2               	movwf	(_uart1_tx_buf^(0+896)+50)
 10604                           
 10605                           ;uart.c: 370: crc_data=crc16(&uart1_tx_buf[1],50);
 10606  2C58  3187  27EF  31A9   	fcall	PL216	;call to abstracted procedure
 10607  2C5B  3032               	movlw	50
 10608  2C5C  00A5               	movwf	crc16@usDataLen
 10609  2C5D  3189  212C  31A9   	fcall	_crc16
 10610                           
 10611                           ;uart.c: 372: uart1_tx_buf[51]=crc_data/256;
 10612  2C60  3187  2702         	fcall	PL86	;call to abstracted procedure
 10613  2C62  00D3               	movwf	(_uart1_tx_buf^(0+896)+51)
 10614                           
 10615                           ;uart.c: 373: uart1_tx_buf[52]=crc_data%256;
 10616  2C63  0021               	movlb	1	; select bank1
 10617  2C64  0828               	movf	_crc_data^(0+128),w
 10618  2C65  0027               	movlb	7	; select bank7
 10619  2C66  00D4               	movwf	(_uart1_tx_buf^(0+896)+52)
 10620                           
 10621                           ;uart.c: 375: uart1_tx_buf[53]=0xAA;
 10622  2C67  30AA               	movlw	170
 10623  2C68  00D5               	movwf	(_uart1_tx_buf^(0+896)+53)
 10624  2C69                     L97:	
 10625  2C69  3186  2E96         	goto	l18632
 10626                           
 10627                           	psect	text7
 10628  092C                     __ptext7:	
 10629 ;; *************** function _crc16 *****************
 10630 ;; Defined at:
 10631 ;;		line 75 in file "D:\MCUProject\ZH-SL-F60\src\Modbus.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  puchMsg         2    3[BANK0 ] PTR volatile unsigned ch
 10634 ;;		 -> uart1_tx_buf(80), uart1_rx_buf(80), 
 10635 ;;  usDataLen       1    5[BANK0 ] unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  uIndex          4    6[BANK0 ] unsigned long 
 10638 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 10639 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  2    3[BANK0 ] unsigned int 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10644 ;; Tracked objects:
 10645 ;;		On entry : 1F/0
 10646 ;;		On exit  : 1F/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        9 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    2
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_handle_uart_rx_buf
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           
 10664                           ;psect for function _crc16
 10665  092C                     _crc16:	
 10666                           
 10667                           ;Modbus.c: 77: unsigned char uchCRCHi = 0xFF ;
 10668                           
 10669                           ;incstack = 0
 10670                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
 10671  092C  30FF               	movlw	255
 10672  092D  00AA               	movwf	crc16@uchCRCHi
 10673  092E                     L3:	
 10674  092E  00AB               	movwf	crc16@uchCRCLo
 10675  092F  03A5               	decf	crc16@usDataLen,f
 10676  0930  0825               	movf	crc16@usDataLen,w
 10677  0931  3AFF               	xorlw	255
 10678  0932  1903               	btfsc	3,2
 10679  0933  2951               	goto	l14896
 10680                           
 10681                           ;Modbus.c: 81: {
 10682                           ;Modbus.c: 82: uIndex = uchCRCHi ^ *puchMsg++ ;
 10683                           
 10684                           ;Modbus.c: 79: unsigned long uIndex ;
 10685                           ;Modbus.c: 80: while (usDataLen--)
 10686                           
 10687                           ;Modbus.c: 78: unsigned char uchCRCLo = 0xFF ;
 10688  0934  0823               	movf	crc16@puchMsg,w
 10689  0935  0086               	movwf	6
 10690  0936  0824               	movf	crc16@puchMsg+1,w
 10691  0937  0087               	movwf	7
 10692  0938  0801               	movf	1,w
 10693  0939  062A               	xorwf	crc16@uchCRCHi,w
 10694  093A  00A6               	movwf	crc16@uIndex
 10695  093B  01A7               	clrf	crc16@uIndex+1
 10696  093C  01A8               	clrf	crc16@uIndex+2
 10697  093D  01A9               	clrf	crc16@uIndex+3
 10698  093E  0AA3               	incf	crc16@puchMsg,f
 10699  093F  1903               	skipnz
 10700  0940  0AA4               	incf	crc16@puchMsg+1,f
 10701                           
 10702                           ;Modbus.c: 83: uchCRCHi = uchCRCLo ^ CRCHi[uIndex] ;
 10703  0941  3E01               	addlw	low (_CRCHi| (0+32768))
 10704  0942  0084               	movwf	4
 10705  0943  30B8               	movlw	high (_CRCHi| (0+32768))
 10706  0944  3D27               	addwfc	crc16@uIndex+1,w
 10707  0945  0085               	movwf	5
 10708  0946  0800               	movf	0,w	;code access
 10709  0947  062B               	xorwf	crc16@uchCRCLo,w
 10710  0948  00AA               	movwf	crc16@uchCRCHi
 10711                           
 10712                           ;Modbus.c: 84: uchCRCLo = CRCLo[uIndex] ;
 10713  0949  3001               	movlw	low (_CRCLo| (0+32768))
 10714  094A  0726               	addwf	crc16@uIndex,w
 10715  094B  0084               	movwf	4
 10716  094C  30B9               	movlw	high (_CRCLo| (0+32768))
 10717  094D  3D27               	addwfc	crc16@uIndex+1,w
 10718  094E  0085               	movwf	5
 10719  094F  0800               	movf	0,w	;code access
 10720  0950  292E               	goto	L3
 10721  0951                     l14896:	
 10722                           
 10723                           ;Modbus.c: 85: }
 10724                           ;Modbus.c: 86: return ( uchCRCHi<< 8 | uchCRCLo);
 10725  0951  082A               	movf	crc16@uchCRCHi,w
 10726  0952  00A4               	movwf	?_crc16+1
 10727  0953  01A3               	clrf	?_crc16
 10728  0954  082B               	movf	crc16@uchCRCLo,w
 10729  0955  04A3               	iorwf	?_crc16,f
 10730  0956  0008               	return
 10731  0957                     __end_of_crc16:	
 10732                           
 10733                           	psect	text10
 10734  2C6B                     __ptext10:	
 10735 ;; *************** function _handle_ad_loop *****************
 10736 ;; Defined at:
 10737 ;;		line 124 in file "D:\MCUProject\ZH-SL-F60\src\task.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  data_cc_var     4    0[BANK5 ] float 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;		None               void
 10744 ;; Registers used:
 10745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 1F/2
 10748 ;;		On exit  : 1F/2
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Locals:         0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0
 10753 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Totals:         0       0       2       0       0       0       4       0       0       0       0       0       
      +0       0
 10755 ;;Total ram usage:        6 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; Hardware stack levels required when called:    7
 10758 ;; This function calls:
 10759 ;;		_Disable_Bost_Pwm
 10760 ;;		_Disable_Buck_Pwm
 10761 ;;		_Enable_Bost_Pwm
 10762 ;;		_Enable_Buck_Pwm
 10763 ;;		_Mppt_Charge
 10764 ;;		_Set_Bost_Pwm_Duty
 10765 ;;		_Set_Buck_Pwm_Duty
 10766 ;;		___awtofl
 10767 ;;		___fladd
 10768 ;;		___fldiv
 10769 ;;		___flge
 10770 ;;		___flmul
 10771 ;;		___fltol
 10772 ;;		___lldiv
 10773 ;;		___lwdiv
 10774 ;;		___lwtofl
 10775 ;;		___wmul
 10776 ;;		_delay_ms
 10777 ;;		_pid_calc
 10778 ;;		_start_ad_convert
 10779 ;; This function is called by:
 10780 ;;		_main
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           
 10785                           ;psect for function _handle_ad_loop
 10786  2C6B                     _handle_ad_loop:	
 10787                           
 10788                           ;task.c: 126: float data_cc_var;
 10789                           ;task.c: 128: if(handle_an0_process_flag==0x01)
 10790                           
 10791                           ;incstack = 0
 10792                           ; Regs used in _handle_ad_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10793  2C6B  0B2B               	decfsz	_handle_an0_process_flag^(0+256),w
 10794  2C6C  2CE3               	goto	l17248
 10795                           
 10796                           ;task.c: 129: {
 10797                           ;task.c: 130: ADCON1bits.ADPREF =0b00;
 10798  2C6D  30FC               	movlw	-4
 10799  2C6E  0021               	movlb	1	; select bank1
 10800  2C6F  059E               	andwf	30,f	;volatile
 10801                           
 10802                           ;task.c: 132: mcu_value=start_ad_convert(0b11101);
 10803  2C70  301D               	movlw	29
 10804  2C71  31B5  25A5  31AC   	fcall	_start_ad_convert
 10805  2C74  0831               	movf	?_start_ad_convert+1,w
 10806  2C75  0021               	movlb	1	; select bank1
 10807  2C76  00AF               	movwf	(_mcu_value+1)^(0+128)
 10808  2C77  0020               	movlb	0	; select bank0
 10809  2C78  0830               	movf	?_start_ad_convert,w
 10810  2C79  0021               	movlb	1	; select bank1
 10811  2C7A  00AE               	movwf	_mcu_value^(0+128)
 10812                           
 10813                           ;task.c: 134: ADCON1bits.ADPREF =0b11;
 10814  2C7B  3003               	movlw	3
 10815  2C7C  049E               	iorwf	30,f	;volatile
 10816                           
 10817                           ;task.c: 136: if(mcu_value<490)
 10818  2C7D  3001               	movlw	1
 10819  2C7E  022F               	subwf	(_mcu_value+1)^(0+128),w
 10820  2C7F  30EA               	movlw	234
 10821  2C80  1903               	skipnz
 10822  2C81  022E               	subwf	_mcu_value^(0+128),w
 10823  2C82  1803               	skipnc
 10824  2C83  2C91               	goto	l17194
 10825                           
 10826                           ;task.c: 137: {
 10827                           ;task.c: 138: mcu_t00_time_count++;
 10828  2C84  0023               	movlb	3	; select bank3
 10829  2C85  3078               	movlw	120
 10830  2C86  0ABC               	incf	_mcu_t00_time_count^(0+384),f
 10831                           
 10832                           ;task.c: 139: mcu_t01_time_count=0x00;
 10833  2C87  01BD               	clrf	_mcu_t01_time_count^(0+384)
 10834                           
 10835                           ;task.c: 140: mcu_t02_time_count=0x00;
 10836  2C88  01BE               	clrf	_mcu_t02_time_count^(0+384)
 10837                           
 10838                           ;task.c: 141: mcu_t03_time_count=0x00;
 10839  2C89  01BF               	clrf	_mcu_t03_time_count^(0+384)
 10840                           
 10841                           ;task.c: 143: if(mcu_t00_time_count>=120)
 10842  2C8A  023C               	subwf	_mcu_t00_time_count^(0+384),w
 10843  2C8B  1C03               	skipc
 10844  2C8C  2CE1               	goto	l1317
 10845                           
 10846                           ;task.c: 144: {
 10847                           ;task.c: 145: mcu_t00_time_count=0x00;
 10848  2C8D  01BC               	clrf	_mcu_t00_time_count^(0+384)
 10849                           
 10850                           ;task.c: 147: mcu_temp_index=0x00;
 10851  2C8E  0021               	movlb	1	; select bank1
 10852  2C8F  01B9               	clrf	_mcu_temp_index^(0+128)
 10853  2C90  2CE1               	goto	l1317
 10854  2C91                     l17194:	
 10855                           
 10856                           ;task.c: 150: else if(mcu_value>510 && mcu_value<530)
 10857  2C91  3001               	movlw	1
 10858  2C92  022F               	subwf	(_mcu_value+1)^(0+128),w
 10859  2C93  30FF               	movlw	255
 10860  2C94  1903               	skipnz
 10861  2C95  022E               	subwf	_mcu_value^(0+128),w
 10862  2C96  3002               	movlw	2
 10863  2C97  1C03               	skipc
 10864  2C98  2CAE               	goto	L55
 10865  2C99  022F               	subwf	(_mcu_value+1)^(0+128),w
 10866  2C9A  3012               	movlw	18
 10867  2C9B  1903               	skipnz
 10868  2C9C  022E               	subwf	_mcu_value^(0+128),w
 10869  2C9D  1803               	skipnc
 10870  2C9E  2CAD               	goto	l17212
 10871                           
 10872                           ;task.c: 151: {
 10873                           ;task.c: 152: mcu_t01_time_count++;
 10874  2C9F  0023               	movlb	3	; select bank3
 10875  2CA0  303C               	movlw	60
 10876  2CA1  0ABD               	incf	_mcu_t01_time_count^(0+384),f
 10877                           
 10878                           ;task.c: 153: mcu_t00_time_count=0x00;
 10879  2CA2  01BC               	clrf	_mcu_t00_time_count^(0+384)
 10880                           
 10881                           ;task.c: 154: mcu_t02_time_count=0x00;
 10882  2CA3  01BE               	clrf	_mcu_t02_time_count^(0+384)
 10883                           
 10884                           ;task.c: 155: mcu_t03_time_count=0x00;
 10885  2CA4  01BF               	clrf	_mcu_t03_time_count^(0+384)
 10886                           
 10887                           ;task.c: 157: if(mcu_t01_time_count>=60)
 10888  2CA5  023D               	subwf	_mcu_t01_time_count^(0+384),w
 10889  2CA6  1C03               	skipc
 10890  2CA7  2CE1               	goto	l1317
 10891                           
 10892                           ;task.c: 158: {
 10893                           ;task.c: 159: mcu_t01_time_count=0x00;
 10894  2CA8  01BD               	clrf	_mcu_t01_time_count^(0+384)
 10895                           
 10896                           ;task.c: 161: mcu_temp_index=0x01;
 10897  2CA9  0021               	movlb	1	; select bank1
 10898  2CAA  01B9               	clrf	_mcu_temp_index^(0+128)
 10899  2CAB  0AB9               	incf	_mcu_temp_index^(0+128),f
 10900  2CAC  2CE1               	goto	l1317
 10901  2CAD                     l17212:	
 10902                           
 10903                           ;task.c: 164: else if(mcu_value>530 && mcu_value<550)
 10904  2CAD  3002               	movlw	2
 10905  2CAE                     L55:	
 10906  2CAE  022F               	subwf	(_mcu_value+1)^(0+128),w
 10907  2CAF  3013               	movlw	19
 10908  2CB0  1903               	skipnz
 10909  2CB1  022E               	subwf	_mcu_value^(0+128),w
 10910  2CB2  3002               	movlw	2
 10911  2CB3  1C03               	skipc
 10912  2CB4  2CC8               	goto	L56
 10913  2CB5  022F               	subwf	(_mcu_value+1)^(0+128),w
 10914  2CB6  3026               	movlw	38
 10915  2CB7  1903               	skipnz
 10916  2CB8  022E               	subwf	_mcu_value^(0+128),w
 10917  2CB9  1803               	skipnc
 10918  2CBA  2CC7               	goto	l17230
 10919                           
 10920                           ;task.c: 165: {
 10921                           ;task.c: 166: mcu_t02_time_count++;
 10922  2CBB  0023               	movlb	3	; select bank3
 10923  2CBC  301E               	movlw	30
 10924  2CBD  0ABE               	incf	_mcu_t02_time_count^(0+384),f
 10925                           
 10926                           ;task.c: 167: mcu_t00_time_count=0x00;
 10927  2CBE  01BC               	clrf	_mcu_t00_time_count^(0+384)
 10928                           
 10929                           ;task.c: 168: mcu_t01_time_count=0x00;
 10930  2CBF  01BD               	clrf	_mcu_t01_time_count^(0+384)
 10931                           
 10932                           ;task.c: 169: mcu_t03_time_count=0x00;
 10933  2CC0  01BF               	clrf	_mcu_t03_time_count^(0+384)
 10934                           
 10935                           ;task.c: 171: if(mcu_t02_time_count>=30)
 10936  2CC1  023E               	subwf	_mcu_t02_time_count^(0+384),w
 10937  2CC2  1C03               	skipc
 10938  2CC3  2CE1               	goto	l1317
 10939  2CC4  3002               	movlw	2
 10940                           
 10941                           ;task.c: 172: {
 10942                           ;task.c: 173: mcu_t02_time_count=0x00;
 10943  2CC5  01BE               	clrf	_mcu_t02_time_count^(0+384)
 10944                           
 10945                           ;task.c: 175: mcu_temp_index=0x02;
 10946  2CC6  2CD9               	goto	L4
 10947  2CC7                     l17230:	
 10948                           
 10949                           ;task.c: 178: else if(mcu_value>=550)
 10950  2CC7  3002               	movlw	2
 10951  2CC8                     L56:	
 10952  2CC8  022F               	subwf	(_mcu_value+1)^(0+128),w
 10953  2CC9  3026               	movlw	38
 10954  2CCA  1903               	skipnz
 10955  2CCB  022E               	subwf	_mcu_value^(0+128),w
 10956  2CCC  1C03               	skipc
 10957  2CCD  2CDC               	goto	l17246
 10958                           
 10959                           ;task.c: 179: {
 10960                           ;task.c: 180: mcu_t03_time_count++;
 10961  2CCE  0023               	movlb	3	; select bank3
 10962  2CCF  300A               	movlw	10
 10963  2CD0  0ABF               	incf	_mcu_t03_time_count^(0+384),f
 10964                           
 10965                           ;task.c: 181: mcu_t00_time_count=0x00;
 10966  2CD1  01BC               	clrf	_mcu_t00_time_count^(0+384)
 10967                           
 10968                           ;task.c: 182: mcu_t01_time_count=0x00;
 10969  2CD2  01BD               	clrf	_mcu_t01_time_count^(0+384)
 10970                           
 10971                           ;task.c: 183: mcu_t02_time_count=0x00;
 10972  2CD3  01BE               	clrf	_mcu_t02_time_count^(0+384)
 10973                           
 10974                           ;task.c: 185: if(mcu_t03_time_count>=10)
 10975  2CD4  023F               	subwf	_mcu_t03_time_count^(0+384),w
 10976  2CD5  1C03               	skipc
 10977  2CD6  2CE1               	goto	l1317
 10978  2CD7  3003               	movlw	3
 10979                           
 10980                           ;task.c: 186: {
 10981                           ;task.c: 187: mcu_t03_time_count=0x00;
 10982  2CD8  01BF               	clrf	_mcu_t03_time_count^(0+384)
 10983  2CD9                     L4:	
 10984                           ;task.c: 189: mcu_temp_index=0x03;
 10985                           
 10986  2CD9  0021               	movlb	1	; select bank1
 10987  2CDA  00B9               	movwf	_mcu_temp_index^(0+128)
 10988  2CDB  2CE1               	goto	l1317
 10989  2CDC                     l17246:	
 10990                           
 10991                           ;task.c: 192: else
 10992                           ;task.c: 193: {
 10993                           ;task.c: 194: mcu_t00_time_count=0x00;
 10994  2CDC  0023               	movlb	3	; select bank3
 10995  2CDD  01BC               	clrf	_mcu_t00_time_count^(0+384)
 10996                           
 10997                           ;task.c: 195: mcu_t01_time_count=0x00;
 10998  2CDE  01BD               	clrf	_mcu_t01_time_count^(0+384)
 10999                           
 11000                           ;task.c: 196: mcu_t02_time_count=0x00;
 11001  2CDF  01BE               	clrf	_mcu_t02_time_count^(0+384)
 11002                           
 11003                           ;task.c: 197: mcu_t03_time_count=0x00;
 11004  2CE0  01BF               	clrf	_mcu_t03_time_count^(0+384)
 11005  2CE1                     l1317:	
 11006                           
 11007                           ;task.c: 198: }
 11008                           ;task.c: 201: handle_an0_process_flag=0x00;
 11009  2CE1  0022               	movlb	2	; select bank2
 11010  2CE2  01AB               	clrf	_handle_an0_process_flag^(0+256)
 11011  2CE3                     l17248:	
 11012                           
 11013                           ;task.c: 203: }
 11014                           ;task.c: 207: if(handle_an1_process_flag==0x01)
 11015  2CE3  0B2D               	decfsz	_handle_an1_process_flag^(0+256),w
 11016  2CE4  2D16               	goto	l17274
 11017                           
 11018                           ;task.c: 208: {
 11019                           ;task.c: 210: temperature_value=start_ad_convert(0b00001);
 11020  2CE5  3001               	movlw	1
 11021  2CE6  31B5  25A5  31AC   	fcall	_start_ad_convert
 11022  2CE9  0831               	movf	?_start_ad_convert+1,w
 11023  2CEA  0022               	movlb	2	; select bank2
 11024  2CEB  00A9               	movwf	(_temperature_value+1)^(0+256)
 11025  2CEC  0020               	movlb	0	; select bank0
 11026  2CED  0830               	movf	?_start_ad_convert,w
 11027  2CEE  0022               	movlb	2	; select bank2
 11028  2CEF  00A8               	movwf	_temperature_value^(0+256)
 11029                           
 11030                           ;task.c: 212: if((temperature_value>4)&&(temperature_value<602))
 11031  2CF0  3000               	movlw	0
 11032  2CF1  0229               	subwf	(_temperature_value+1)^(0+256),w
 11033  2CF2  3005               	movlw	5
 11034  2CF3  1903               	skipnz
 11035  2CF4  0228               	subwf	_temperature_value^(0+256),w
 11036  2CF5  1C03               	skipc
 11037  2CF6  2D0A               	goto	l17266
 11038  2CF7  3002               	movlw	2
 11039  2CF8  0229               	subwf	(_temperature_value+1)^(0+256),w
 11040  2CF9  305A               	movlw	90
 11041  2CFA  1903               	skipnz
 11042  2CFB  0228               	subwf	_temperature_value^(0+256),w
 11043  2CFC  1803               	skipnc
 11044  2CFD  2D0A               	goto	l17266
 11045                           
 11046                           ;task.c: 213: {
 11047                           ;task.c: 214: temper_time_count++;
 11048  2CFE  0023               	movlb	3	; select bank3
 11049  2CFF  300A               	movlw	10
 11050  2D00  0AC6               	incf	_temper_time_count^(0+384),f
 11051                           
 11052                           ;task.c: 216: over_temper_time_count=0x00;
 11053  2D01  01C2               	clrf	_over_temper_time_count^(0+384)
 11054                           
 11055                           ;task.c: 218: if(temper_time_count>=10)
 11056  2D02  0246               	subwf	_temper_time_count^(0+384),w
 11057  2D03  1C03               	skipc
 11058  2D04  2D14               	goto	l1330
 11059                           
 11060                           ;task.c: 219: {
 11061                           ;task.c: 220: temper_time_count=0x00;
 11062  2D05  01C6               	clrf	_temper_time_count^(0+384)
 11063                           
 11064                           ;task.c: 222: sys_temper_flag=0x01;
 11065  2D06  0022               	movlb	2	; select bank2
 11066  2D07  01EF               	clrf	_sys_temper_flag^(0+256)
 11067  2D08  0AEF               	incf	_sys_temper_flag^(0+256),f
 11068  2D09  2D14               	goto	l1330
 11069  2D0A                     l17266:	
 11070                           
 11071                           ;task.c: 225: else
 11072                           ;task.c: 226: {
 11073                           ;task.c: 227: over_temper_time_count++;
 11074  2D0A  0023               	movlb	3	; select bank3
 11075  2D0B  300A               	movlw	10
 11076  2D0C  0AC2               	incf	_over_temper_time_count^(0+384),f
 11077                           
 11078                           ;task.c: 229: temper_time_count=0x00;
 11079  2D0D  01C6               	clrf	_temper_time_count^(0+384)
 11080                           
 11081                           ;task.c: 231: if(over_temper_time_count>=10)
 11082  2D0E  0242               	subwf	_over_temper_time_count^(0+384),w
 11083  2D0F  1C03               	skipc
 11084  2D10  2D14               	goto	l1330
 11085                           
 11086                           ;task.c: 232: {
 11087                           ;task.c: 233: over_temper_time_count=0x00;
 11088  2D11  01C2               	clrf	_over_temper_time_count^(0+384)
 11089                           
 11090                           ;task.c: 235: sys_temper_flag=0x00;
 11091  2D12  0022               	movlb	2	; select bank2
 11092  2D13  01EF               	clrf	_sys_temper_flag^(0+256)
 11093  2D14                     l1330:	
 11094                           
 11095                           ;task.c: 236: }
 11096                           ;task.c: 237: }
 11097                           ;task.c: 239: handle_an1_process_flag=0x00;
 11098  2D14  0022               	movlb	2	; select bank2
 11099  2D15  01AD               	clrf	_handle_an1_process_flag^(0+256)
 11100  2D16                     l17274:	
 11101                           
 11102                           ;task.c: 241: }
 11103                           ;task.c: 246: if(handle_an2_process_flag==0x01)
 11104  2D16  0B2E               	decfsz	_handle_an2_process_flag^(0+256),w
 11105  2D17  2E69               	goto	l17336
 11106                           
 11107                           ;task.c: 247: {
 11108                           ;task.c: 249: pv_voltage_value=start_ad_convert(0b00010);
 11109  2D18  3002               	movlw	2
 11110  2D19  31B5  25A5  31AC   	fcall	_start_ad_convert
 11111  2D1C  0831               	movf	?_start_ad_convert+1,w
 11112  2D1D  0021               	movlb	1	; select bank1
 11113  2D1E  00B1               	movwf	(_pv_voltage_value+1)^(0+128)
 11114  2D1F  0020               	movlb	0	; select bank0
 11115  2D20  0830               	movf	?_start_ad_convert,w
 11116  2D21  0021               	movlb	1	; select bank1
 11117  2D22  00B0               	movwf	_pv_voltage_value^(0+128)
 11118                           
 11119                           ;task.c: 260: if(pv_index==0x00)
 11120  2D23  0022               	movlb	2	; select bank2
 11121  2D24  08C2               	movf	_pv_index^(0+256),f
 11122  2D25  1D03               	skipz
 11123  2D26  2DAE               	goto	l17304
 11124                           
 11125                           ;task.c: 261: {
 11126                           ;task.c: 262: if(pv_voltage_value<=light_on_pv_level)
 11127  2D27  0025               	movlb	5	; select bank5
 11128  2D28  31B4  2448  31AC   	fcall	PL76	;call to abstracted procedure
 11129  2D2B  319B  2346  31AC   	fcall	___lwtofl
 11130  2D2E  31B3  23AC  31AC   	fcall	PL20	;call to abstracted procedure
 11131  2D31  319E  2658  31AC   	fcall	___flge
 11132  2D34  1C03               	btfss	3,0
 11133  2D35  2D60               	goto	l17292
 11134                           
 11135                           ;task.c: 263: {
 11136                           ;task.c: 264: night_time_count++;
 11137  2D36  0024               	movlb	4	; select bank4
 11138  2D37  0AB4               	incf	_night_time_count^(0+512),f
 11139  2D38  1903               	skipnz
 11140  2D39  0AB5               	incf	(_night_time_count+1)^(0+512),f
 11141  2D3A  1903               	skipnz
 11142  2D3B  0AB6               	incf	(_night_time_count+2)^(0+512),f
 11143  2D3C  1903               	skipnz
 11144  2D3D  0AB7               	incf	(_night_time_count+3)^(0+512),f
 11145                           
 11146                           ;task.c: 266: day_time_count=0x00;
 11147  2D3E  0025               	movlb	5	; select bank5
 11148  2D3F  01A4               	clrf	_day_time_count^(0+640)
 11149  2D40  01A5               	clrf	(_day_time_count+1)^(0+640)
 11150  2D41  01A6               	clrf	(_day_time_count+2)^(0+640)
 11151  2D42  01A7               	clrf	(_day_time_count+3)^(0+640)
 11152                           
 11153                           ;task.c: 268: if(night_time_count>light_time_level)
 11154  2D43  0024               	movlb	4	; select bank4
 11155  2D44  0837               	movf	(_night_time_count+3)^(0+512),w
 11156  2D45  0023               	movlb	3	; select bank3
 11157  2D46  0223               	subwf	(_light_time_level+3)^(0+384),w
 11158  2D47  1D03               	skipz
 11159  2D48  2D59               	goto	u10165
 11160  2D49  0024               	movlb	4	; select bank4
 11161  2D4A  0836               	movf	(_night_time_count+2)^(0+512),w
 11162  2D4B  0023               	movlb	3	; select bank3
 11163  2D4C  0222               	subwf	(_light_time_level+2)^(0+384),w
 11164  2D4D  1D03               	skipz
 11165  2D4E  2D59               	goto	u10165
 11166  2D4F  0024               	movlb	4	; select bank4
 11167  2D50  0835               	movf	(_night_time_count+1)^(0+512),w
 11168  2D51  0023               	movlb	3	; select bank3
 11169  2D52  0221               	subwf	(_light_time_level+1)^(0+384),w
 11170  2D53  1D03               	skipz
 11171  2D54  2D59               	goto	u10165
 11172  2D55  0024               	movlb	4	; select bank4
 11173  2D56  0834               	movf	_night_time_count^(0+512),w
 11174  2D57  0023               	movlb	3	; select bank3
 11175  2D58  0220               	subwf	_light_time_level^(0+384),w
 11176  2D59                     u10165:	
 11177  2D59  1803               	skipnc
 11178  2D5A  2DAE               	goto	l17304
 11179                           
 11180                           ;task.c: 269: {
 11181                           ;task.c: 270: night_time_count=0x00;
 11182  2D5B  0024               	movlb	4	; select bank4
 11183                           
 11184                           ;task.c: 272: pv_voltage_status=0x02;
 11185  2D5C  31B5  255D  31AC   	fcall	PL206	;call to abstracted procedure
 11186  2D5F  2DAE               	goto	l17304
 11187  2D60                     l17292:	
 11188                           
 11189                           ;task.c: 277: else if((pv_voltage_value>(light_off_pv_level)))
 11190  2D60  0025               	movlb	5	; select bank5
 11191  2D61  0863               	movf	(_light_off_pv_level+3)^(0+640),w
 11192  2D62  0020               	movlb	0	; select bank0
 11193  2D63  00DD               	movwf	___flge@ff1+3
 11194  2D64  0025               	movlb	5	; select bank5
 11195  2D65  0862               	movf	(_light_off_pv_level+2)^(0+640),w
 11196  2D66  0020               	movlb	0	; select bank0
 11197  2D67  00DC               	movwf	___flge@ff1+2
 11198  2D68  0025               	movlb	5	; select bank5
 11199  2D69  0861               	movf	(_light_off_pv_level+1)^(0+640),w
 11200  2D6A  0020               	movlb	0	; select bank0
 11201  2D6B  00DB               	movwf	___flge@ff1+1
 11202  2D6C  0025               	movlb	5	; select bank5
 11203  2D6D  0860               	movf	_light_off_pv_level^(0+640),w
 11204  2D6E  0020               	movlb	0	; select bank0
 11205  2D6F  00DA               	movwf	___flge@ff1
 11206  2D70  3186  26F9  31AC   	fcall	PL84	;call to abstracted procedure
 11207  2D73  319B  2346  31AC   	fcall	___lwtofl
 11208  2D76  31B3  23AC  31AC   	fcall	PL20	;call to abstracted procedure
 11209  2D79  319E  2658  31AC   	fcall	___flge
 11210  2D7C  1803               	btfsc	3,0
 11211  2D7D  2DAB               	goto	l1337
 11212                           
 11213                           ;task.c: 278: {
 11214                           ;task.c: 279: day_time_count++;
 11215  2D7E  0025               	movlb	5	; select bank5
 11216  2D7F  0AA4               	incf	_day_time_count^(0+640),f
 11217  2D80  1903               	skipnz
 11218  2D81  0AA5               	incf	(_day_time_count+1)^(0+640),f
 11219  2D82  1903               	skipnz
 11220  2D83  0AA6               	incf	(_day_time_count+2)^(0+640),f
 11221  2D84  1903               	skipnz
 11222  2D85  0AA7               	incf	(_day_time_count+3)^(0+640),f
 11223                           
 11224                           ;task.c: 281: night_time_count=0x00;
 11225  2D86  0024               	movlb	4	; select bank4
 11226  2D87  01B4               	clrf	_night_time_count^(0+512)
 11227  2D88  01B5               	clrf	(_night_time_count+1)^(0+512)
 11228  2D89  01B6               	clrf	(_night_time_count+2)^(0+512)
 11229  2D8A  01B7               	clrf	(_night_time_count+3)^(0+512)
 11230                           
 11231                           ;task.c: 283: if(day_time_count>light_time_level)
 11232  2D8B  0025               	movlb	5	; select bank5
 11233  2D8C  0827               	movf	(_day_time_count+3)^(0+640),w
 11234  2D8D  0023               	movlb	3	; select bank3
 11235  2D8E  0223               	subwf	(_light_time_level+3)^(0+384),w
 11236  2D8F  1D03               	skipz
 11237  2D90  2DA1               	goto	u10185
 11238  2D91  0025               	movlb	5	; select bank5
 11239  2D92  0826               	movf	(_day_time_count+2)^(0+640),w
 11240  2D93  0023               	movlb	3	; select bank3
 11241  2D94  0222               	subwf	(_light_time_level+2)^(0+384),w
 11242  2D95  1D03               	skipz
 11243  2D96  2DA1               	goto	u10185
 11244  2D97  0025               	movlb	5	; select bank5
 11245  2D98  0825               	movf	(_day_time_count+1)^(0+640),w
 11246  2D99  0023               	movlb	3	; select bank3
 11247  2D9A  0221               	subwf	(_light_time_level+1)^(0+384),w
 11248  2D9B  1D03               	skipz
 11249  2D9C  2DA1               	goto	u10185
 11250  2D9D  0025               	movlb	5	; select bank5
 11251  2D9E  0824               	movf	_day_time_count^(0+640),w
 11252  2D9F  0023               	movlb	3	; select bank3
 11253  2DA0  0220               	subwf	_light_time_level^(0+384),w
 11254  2DA1                     u10185:	
 11255  2DA1  1803               	skipnc
 11256  2DA2  2DAE               	goto	l17304
 11257                           
 11258                           ;task.c: 284: {
 11259                           ;task.c: 285: day_time_count=0x00;
 11260  2DA3  0025               	movlb	5	; select bank5
 11261  2DA4  01A4               	clrf	_day_time_count^(0+640)
 11262  2DA5  01A5               	clrf	(_day_time_count+1)^(0+640)
 11263  2DA6  01A6               	clrf	(_day_time_count+2)^(0+640)
 11264  2DA7  01A7               	clrf	(_day_time_count+3)^(0+640)
 11265                           
 11266                           ;task.c: 287: pv_voltage_status=0x00;
 11267  2DA8  0022               	movlb	2	; select bank2
 11268  2DA9  01C3               	clrf	_pv_voltage_status^(0+256)
 11269  2DAA  2DAE               	goto	l17304
 11270  2DAB                     l1337:	
 11271                           
 11272                           ;task.c: 291: else
 11273                           ;task.c: 292: {
 11274                           ;task.c: 293: day_time_count=0x00;
 11275                           
 11276                           ;task.c: 295: night_time_count=0x00;
 11277  2DAB  3186  26DF  31AC   	fcall	PL54	;call to abstracted procedure
 11278  2DAE                     l17304:	
 11279                           
 11280                           ;task.c: 296: }
 11281                           ;task.c: 297: }
 11282                           ;task.c: 299: if((pv_voltage_value>=light_off_pv_level)&&(pv_voltage_value<1000))
 11283  2DAE  3186  26F9  31AC   	fcall	PL84	;call to abstracted procedure
 11284  2DB1  319B  2346  31AC   	fcall	___lwtofl
 11285  2DB4  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11286  2DB7  0025               	movlb	5	; select bank5
 11287  2DB8  0863               	movf	(_light_off_pv_level+3)^(0+640),w
 11288  2DB9  0020               	movlb	0	; select bank0
 11289  2DBA  00E1               	movwf	___flge@ff2+3
 11290  2DBB  0025               	movlb	5	; select bank5
 11291  2DBC  0862               	movf	(_light_off_pv_level+2)^(0+640),w
 11292  2DBD  0020               	movlb	0	; select bank0
 11293  2DBE  00E0               	movwf	___flge@ff2+2
 11294  2DBF  0025               	movlb	5	; select bank5
 11295  2DC0  0861               	movf	(_light_off_pv_level+1)^(0+640),w
 11296  2DC1  0020               	movlb	0	; select bank0
 11297  2DC2  00DF               	movwf	___flge@ff2+1
 11298  2DC3  0025               	movlb	5	; select bank5
 11299  2DC4  0860               	movf	_light_off_pv_level^(0+640),w
 11300  2DC5  0020               	movlb	0	; select bank0
 11301  2DC6  00DE               	movwf	___flge@ff2
 11302  2DC7  319E  2658  31AC   	fcall	___flge
 11303  2DCA  3003               	movlw	3
 11304  2DCB  1C03               	btfss	3,0
 11305  2DCC  2E1A               	goto	L57
 11306  2DCD  0021               	movlb	1	; select bank1
 11307  2DCE  0231               	subwf	(_pv_voltage_value+1)^(0+128),w
 11308  2DCF  30E8               	movlw	232
 11309  2DD0  1903               	skipnz
 11310  2DD1  0230               	subwf	_pv_voltage_value^(0+128),w
 11311  2DD2  1803               	skipnc
 11312  2DD3  2E19               	goto	l17314
 11313                           
 11314                           ;task.c: 300: {
 11315                           ;task.c: 301: pv_time_count++;
 11316  2DD4  0025               	movlb	5	; select bank5
 11317  2DD5  0AA8               	incf	_pv_time_count^(0+640),f
 11318  2DD6  1903               	skipnz
 11319  2DD7  0AA9               	incf	(_pv_time_count+1)^(0+640),f
 11320  2DD8  1903               	skipnz
 11321  2DD9  0AAA               	incf	(_pv_time_count+2)^(0+640),f
 11322  2DDA  1903               	skipnz
 11323  2DDB  0AAB               	incf	(_pv_time_count+3)^(0+640),f
 11324                           
 11325                           ;task.c: 303: if(pv_time_count>(light_time_level/5))
 11326  2DDC  3005               	movlw	5
 11327  2DDD  0020               	movlb	0	; select bank0
 11328  2DDE  00A3               	movwf	___lldiv@divisor
 11329  2DDF  01A4               	clrf	___lldiv@divisor+1
 11330  2DE0  01A5               	clrf	___lldiv@divisor+2
 11331  2DE1  01A6               	clrf	___lldiv@divisor+3
 11332  2DE2  0023               	movlb	3	; select bank3
 11333  2DE3  0823               	movf	(_light_time_level+3)^(0+384),w
 11334  2DE4  0020               	movlb	0	; select bank0
 11335  2DE5  00AA               	movwf	___lldiv@dividend+3
 11336  2DE6  0023               	movlb	3	; select bank3
 11337  2DE7  0822               	movf	(_light_time_level+2)^(0+384),w
 11338  2DE8  0020               	movlb	0	; select bank0
 11339  2DE9  00A9               	movwf	___lldiv@dividend+2
 11340  2DEA  0023               	movlb	3	; select bank3
 11341  2DEB  0821               	movf	(_light_time_level+1)^(0+384),w
 11342  2DEC  0020               	movlb	0	; select bank0
 11343  2DED  00A8               	movwf	___lldiv@dividend+1
 11344  2DEE  0023               	movlb	3	; select bank3
 11345  2DEF  0820               	movf	_light_time_level^(0+384),w
 11346  2DF0  0020               	movlb	0	; select bank0
 11347  2DF1  00A7               	movwf	___lldiv@dividend
 11348  2DF2  3189  2157  31AC   	fcall	___lldiv
 11349  2DF5  0025               	movlb	5	; select bank5
 11350  2DF6  082B               	movf	(_pv_time_count+3)^(0+640),w
 11351  2DF7  0020               	movlb	0	; select bank0
 11352  2DF8  0226               	subwf	?___lldiv+3,w
 11353  2DF9  1D03               	skipz
 11354  2DFA  2E0B               	goto	u10215
 11355  2DFB  0025               	movlb	5	; select bank5
 11356  2DFC  082A               	movf	(_pv_time_count+2)^(0+640),w
 11357  2DFD  0020               	movlb	0	; select bank0
 11358  2DFE  0225               	subwf	?___lldiv+2,w
 11359  2DFF  1D03               	skipz
 11360  2E00  2E0B               	goto	u10215
 11361  2E01  0025               	movlb	5	; select bank5
 11362  2E02  0829               	movf	(_pv_time_count+1)^(0+640),w
 11363  2E03  0020               	movlb	0	; select bank0
 11364  2E04  0224               	subwf	?___lldiv+1,w
 11365  2E05  1D03               	skipz
 11366  2E06  2E0B               	goto	u10215
 11367  2E07  0025               	movlb	5	; select bank5
 11368  2E08  0828               	movf	_pv_time_count^(0+640),w
 11369  2E09  0020               	movlb	0	; select bank0
 11370  2E0A  0223               	subwf	?___lldiv,w
 11371  2E0B                     u10215:	
 11372  2E0B  1803               	skipnc
 11373  2E0C  2E2B               	goto	l17320
 11374                           
 11375                           ;task.c: 304: {
 11376                           ;task.c: 305: pv_time_count=0x00;
 11377  2E0D  0025               	movlb	5	; select bank5
 11378                           
 11379                           ;task.c: 307: pv_voltage_status=0x01;
 11380  2E0E  31B5  2572  31AC   	fcall	PL230	;call to abstracted procedure
 11381  2E11  0AC3               	incf	_pv_voltage_status^(0+256),f
 11382                           
 11383                           ;task.c: 309: day_time_count=0x00;
 11384                           
 11385                           ;task.c: 311: night_time_count=0x00;
 11386  2E12  3186  26DF  31AC   	fcall	PL54	;call to abstracted procedure
 11387                           
 11388                           ;task.c: 313: pv_index=0x01;
 11389  2E15  0022               	movlb	2	; select bank2
 11390  2E16  01C2               	clrf	_pv_index^(0+256)
 11391  2E17  0AC2               	incf	_pv_index^(0+256),f
 11392  2E18  2E2B               	goto	l17320
 11393  2E19                     l17314:	
 11394                           
 11395                           ;task.c: 318: else if(pv_voltage_value>=1000)
 11396  2E19  3003               	movlw	3
 11397  2E1A                     L57:	
 11398  2E1A  0021               	movlb	1	; select bank1
 11399  2E1B  0231               	subwf	(_pv_voltage_value+1)^(0+128),w
 11400  2E1C  30E8               	movlw	232
 11401  2E1D  1903               	skipnz
 11402  2E1E  0230               	subwf	_pv_voltage_value^(0+128),w
 11403  2E1F  1C03               	skipc
 11404  2E20  2E26               	goto	l1343
 11405                           
 11406                           ;task.c: 319: {
 11407                           ;task.c: 320: pv_time_count=0x00;
 11408  2E21  0025               	movlb	5	; select bank5
 11409                           
 11410                           ;task.c: 322: pv_voltage_status=0x00;
 11411  2E22  31B5  2572  31AC   	fcall	PL230	;call to abstracted procedure
 11412                           
 11413                           ;task.c: 323: }
 11414  2E25  2E2B               	goto	l17320
 11415  2E26                     l1343:	
 11416                           
 11417                           ;task.c: 324: else
 11418                           ;task.c: 325: {
 11419                           ;task.c: 326: pv_time_count=0x00;
 11420  2E26  0025               	movlb	5	; select bank5
 11421  2E27  01A8               	clrf	_pv_time_count^(0+640)
 11422  2E28  01A9               	clrf	(_pv_time_count+1)^(0+640)
 11423  2E29  01AA               	clrf	(_pv_time_count+2)^(0+640)
 11424  2E2A  01AB               	clrf	(_pv_time_count+3)^(0+640)
 11425  2E2B                     l17320:	
 11426                           
 11427                           ;task.c: 328: }
 11428                           ;task.c: 330: if(pv_index==0x01)
 11429  2E2B  0022               	movlb	2	; select bank2
 11430  2E2C  0B42               	decfsz	_pv_index^(0+256),w
 11431  2E2D  2E67               	goto	l17334
 11432                           
 11433                           ;task.c: 331: {
 11434                           ;task.c: 332: if(pv_voltage_value<=light_on_pv_level)
 11435  2E2E  0025               	movlb	5	; select bank5
 11436  2E2F  31B4  2448  31AC   	fcall	PL76	;call to abstracted procedure
 11437  2E32  319B  2346  31AC   	fcall	___lwtofl
 11438  2E35  31B3  23AC  31AC   	fcall	PL20	;call to abstracted procedure
 11439  2E38  319E  2658  31AC   	fcall	___flge
 11440  2E3B  1C03               	btfss	3,0
 11441  2E3C  2E62               	goto	l1346
 11442                           
 11443                           ;task.c: 333: {
 11444                           ;task.c: 334: night_time_count++;
 11445  2E3D  0024               	movlb	4	; select bank4
 11446  2E3E  0AB4               	incf	_night_time_count^(0+512),f
 11447  2E3F  1903               	skipnz
 11448  2E40  0AB5               	incf	(_night_time_count+1)^(0+512),f
 11449  2E41  1903               	skipnz
 11450  2E42  0AB6               	incf	(_night_time_count+2)^(0+512),f
 11451  2E43  1903               	skipnz
 11452  2E44  0AB7               	incf	(_night_time_count+3)^(0+512),f
 11453                           
 11454                           ;task.c: 336: if(night_time_count>light_time_level)
 11455  2E45  0837               	movf	(_night_time_count+3)^(0+512),w
 11456  2E46  0023               	movlb	3	; select bank3
 11457  2E47  0223               	subwf	(_light_time_level+3)^(0+384),w
 11458  2E48  1D03               	skipz
 11459  2E49  2E5A               	goto	u10255
 11460  2E4A  0024               	movlb	4	; select bank4
 11461  2E4B  0836               	movf	(_night_time_count+2)^(0+512),w
 11462  2E4C  0023               	movlb	3	; select bank3
 11463  2E4D  0222               	subwf	(_light_time_level+2)^(0+384),w
 11464  2E4E  1D03               	skipz
 11465  2E4F  2E5A               	goto	u10255
 11466  2E50  0024               	movlb	4	; select bank4
 11467  2E51  0835               	movf	(_night_time_count+1)^(0+512),w
 11468  2E52  0023               	movlb	3	; select bank3
 11469  2E53  0221               	subwf	(_light_time_level+1)^(0+384),w
 11470  2E54  1D03               	skipz
 11471  2E55  2E5A               	goto	u10255
 11472  2E56  0024               	movlb	4	; select bank4
 11473  2E57  0834               	movf	_night_time_count^(0+512),w
 11474  2E58  0023               	movlb	3	; select bank3
 11475  2E59  0220               	subwf	_light_time_level^(0+384),w
 11476  2E5A                     u10255:	
 11477  2E5A  1803               	skipnc
 11478  2E5B  2E67               	goto	l17334
 11479                           
 11480                           ;task.c: 337: {
 11481                           ;task.c: 338: night_time_count=0x00;
 11482  2E5C  0024               	movlb	4	; select bank4
 11483                           
 11484                           ;task.c: 340: pv_voltage_status=0x02;
 11485  2E5D  31B5  255D  31AC   	fcall	PL206	;call to abstracted procedure
 11486                           
 11487                           ;task.c: 342: pv_index=0x00;
 11488  2E60  01C2               	clrf	_pv_index^(0+256)
 11489  2E61  2E67               	goto	l17334
 11490  2E62                     l1346:	
 11491                           
 11492                           ;task.c: 346: else
 11493                           ;task.c: 347: {
 11494                           ;task.c: 348: night_time_count=0x00;
 11495  2E62  0024               	movlb	4	; select bank4
 11496  2E63  01B4               	clrf	_night_time_count^(0+512)
 11497  2E64  01B5               	clrf	(_night_time_count+1)^(0+512)
 11498  2E65  01B6               	clrf	(_night_time_count+2)^(0+512)
 11499  2E66  01B7               	clrf	(_night_time_count+3)^(0+512)
 11500  2E67                     l17334:	
 11501                           
 11502                           ;task.c: 349: }
 11503                           ;task.c: 351: }
 11504                           ;task.c: 355: handle_an2_process_flag=0x00;
 11505  2E67  0022               	movlb	2	; select bank2
 11506  2E68  01AE               	clrf	_handle_an2_process_flag^(0+256)
 11507  2E69                     l17336:	
 11508                           
 11509                           ;task.c: 357: }
 11510                           ;task.c: 360: if(handle_an9_process_flag==0x01)
 11511  2E69  0B31               	decfsz	_handle_an9_process_flag^(0+256),w
 11512  2E6A  2EA3               	goto	l17356
 11513                           
 11514                           ;task.c: 361: {
 11515                           ;task.c: 362: charge_current_value=0x00;
 11516  2E6B  01A4               	clrf	_charge_current_value^(0+256)
 11517  2E6C  01A5               	clrf	(_charge_current_value+1)^(0+256)
 11518                           
 11519                           ;task.c: 364: if(system_status == 0x01)
 11520  2E6D  0021               	movlb	1	; select bank1
 11521  2E6E  0B3A               	decfsz	_system_status^(0+128),w
 11522  2E6F  2EA1               	goto	l17354
 11523                           
 11524                           ;task.c: 365: {
 11525                           ;task.c: 366: charge_current_value=start_ad_convert(0b01001);
 11526  2E70  3009               	movlw	9
 11527  2E71  31B5  25A5  31AC   	fcall	_start_ad_convert
 11528  2E74  0831               	movf	?_start_ad_convert+1,w
 11529  2E75  0022               	movlb	2	; select bank2
 11530  2E76  00A5               	movwf	(_charge_current_value+1)^(0+256)
 11531  2E77  0020               	movlb	0	; select bank0
 11532  2E78  0830               	movf	?_start_ad_convert,w
 11533  2E79  0022               	movlb	2	; select bank2
 11534  2E7A  00A4               	movwf	_charge_current_value^(0+256)
 11535                           
 11536                           ;task.c: 376: if((charge_current_value>=charge_i_limit)&&(charge_index>=0x03))
 11537  2E7B  3187  27CD  31AC   	fcall	PL168	;call to abstracted procedure
 11538  2E7E  319B  2346  31AC   	fcall	___lwtofl
 11539  2E81  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11540  2E84  31B4  24CB  31AC   	fcall	PL112	;call to abstracted procedure
 11541  2E87  319E  2658  31AC   	fcall	___flge
 11542  2E8A  1C03               	btfss	3,0
 11543  2E8B  2EA1               	goto	l17354
 11544  2E8C  3003               	movlw	3
 11545  2E8D  0021               	movlb	1	; select bank1
 11546  2E8E  0233               	subwf	_charge_index^(0+128),w
 11547  2E8F  1C03               	skipc
 11548  2E90  2EA1               	goto	l17354
 11549                           
 11550                           ;task.c: 377: {
 11551                           ;task.c: 379: if(buck_pwm_value>50)
 11552  2E91  3000               	movlw	0
 11553  2E92  0227               	subwf	(_buck_pwm_value+1)^(0+128),w
 11554  2E93  3033               	movlw	51
 11555  2E94  1903               	skipnz
 11556  2E95  0226               	subwf	_buck_pwm_value^(0+128),w
 11557  2E96  1C03               	skipc
 11558  2E97  2E9B               	goto	l17352
 11559                           
 11560                           ;task.c: 380: {
 11561                           ;task.c: 381: buck_pwm_value = buck_pwm_value - 1;
 11562  2E98  30FF               	movlw	255
 11563  2E99  07A6               	addwf	_buck_pwm_value^(0+128),f
 11564  2E9A  3DA7               	addwfc	(_buck_pwm_value+1)^(0+128),f
 11565  2E9B                     l17352:	
 11566                           
 11567                           ;task.c: 382: }
 11568                           ;task.c: 383: Set_Buck_Pwm_Duty(buck_pwm_value);
 11569  2E9B  319F  277B  31AC   	fcall	PL138	;call to abstracted procedure
 11570  2E9E  318B  23BA  31AC   	fcall	_Set_Buck_Pwm_Duty
 11571  2EA1                     l17354:	
 11572                           
 11573                           ;task.c: 385: }
 11574                           ;task.c: 387: }
 11575                           ;task.c: 389: handle_an9_process_flag=0x00;
 11576  2EA1  0022               	movlb	2	; select bank2
 11577  2EA2  01B1               	clrf	_handle_an9_process_flag^(0+256)
 11578  2EA3                     l17356:	
 11579                           
 11580                           ;task.c: 391: }
 11581                           ;task.c: 396: if(handle_an3_process_flag==0x01)
 11582  2EA3  3191  0B2F         	decfsz	_handle_an3_process_flag^(0+256),w
 11583  2EA5  2912               	goto	l17434
 11584                           
 11585                           ;task.c: 397: {
 11586                           ;task.c: 399: battery_voltage_value=start_ad_convert(0b01100);
 11587  2EA6  300C               	movlw	12
 11588  2EA7  31B5  25A5  31AC   	fcall	_start_ad_convert
 11589  2EAA  0831               	movf	?_start_ad_convert+1,w
 11590  2EAB  00EB               	movwf	_battery_voltage_value+1
 11591  2EAC  0830               	movf	?_start_ad_convert,w
 11592  2EAD  00EA               	movwf	_battery_voltage_value
 11593                           
 11594                           ;task.c: 402: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
 11595  2EAE  3041               	movlw	65
 11596  2EAF  00B7               	movwf	___flmul@f1+3
 11597  2EB0  30F8               	movlw	248
 11598  2EB1  00B6               	movwf	___flmul@f1+2
 11599  2EB2  3051               	movlw	81
 11600  2EB3  00B5               	movwf	___flmul@f1+1
 11601  2EB4  30EC               	movlw	236
 11602  2EB5  00B4               	movwf	___flmul@f1
 11603  2EB6  3041               	movlw	65
 11604  2EB7  00CA               	movwf	___fldiv@f2+3
 11605  2EB8  3020               	movlw	32
 11606  2EB9  00C9               	movwf	___fldiv@f2+2
 11607  2EBA  01C8               	clrf	___fldiv@f2+1
 11608  2EBB  01C7               	clrf	___fldiv@f2
 11609  2EBC  086B               	movf	_battery_voltage_value+1,w
 11610  2EBD  00B1               	movwf	___lwtofl@c+1
 11611  2EBE  086A               	movf	_battery_voltage_value,w
 11612  2EBF  00B0               	movwf	___lwtofl@c
 11613  2EC0  319B  2346  31AC   	fcall	___lwtofl
 11614  2EC3  3186  26D6  31AC   	fcall	PL50	;call to abstracted procedure
 11615  2EC6  31A6  26E5  31AC   	fcall	___fldiv
 11616  2EC9  3186  26CD  31AC   	fcall	PL30	;call to abstracted procedure
 11617  2ECC  318E  2607  31AC   	fcall	___flmul
 11618  2ECF  0837               	movf	?___flmul+3,w
 11619  2ED0  0022               	movlb	2	; select bank2
 11620  2ED1  00A3               	movwf	(_b_v+3)^(0+256)
 11621  2ED2  0020               	movlb	0	; select bank0
 11622  2ED3  0836               	movf	?___flmul+2,w
 11623  2ED4  0022               	movlb	2	; select bank2
 11624  2ED5  00A2               	movwf	(_b_v+2)^(0+256)
 11625  2ED6  0020               	movlb	0	; select bank0
 11626  2ED7  0835               	movf	?___flmul+1,w
 11627  2ED8  0022               	movlb	2	; select bank2
 11628  2ED9  00A1               	movwf	(_b_v+1)^(0+256)
 11629  2EDA  0020               	movlb	0	; select bank0
 11630  2EDB  0834               	movf	?___flmul,w
 11631  2EDC  0022               	movlb	2	; select bank2
 11632  2EDD  00A0               	movwf	_b_v^(0+256)
 11633                           
 11634                           ;task.c: 406: if((battery_voltage_value<(dianchi_guoya_baohu+volt_id*5))&&(charge_index=
      +                          =0x00))
 11635  2EDE  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11636  2EE1  319B  2346  31AC   	fcall	___lwtofl
 11637  2EE4  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11638  2EE7  31B5  2554  31AC   	fcall	PL202	;call to abstracted procedure
 11639  2EEA  3188  20BC  31AC   	fcall	___wmul
 11640  2EED  31B5  259B  31AC   	fcall	PL260	;call to abstracted procedure
 11641  2EF0  31A7  2751  31AC   	fcall	___awtofl
 11642  2EF3  31B4  2417  31AC   	fcall	PL72	;call to abstracted procedure
 11643  2EF6  318C  24C6  31AC   	fcall	___fladd
 11644  2EF9  31B5  2539  31AC   	fcall	PL192	;call to abstracted procedure
 11645  2EFC  319E  2658  31AC   	fcall	___flge
 11646  2EFF  1803               	btfsc	3,0
 11647  2F00  2F13               	goto	l17376
 11648  2F01  0021               	movlb	1	; select bank1
 11649  2F02  08B3               	movf	_charge_index^(0+128),f
 11650  2F03  1D03               	skipz
 11651  2F04  2F13               	goto	l17376
 11652                           
 11653                           ;task.c: 407: {
 11654                           ;task.c: 408: bt_time_count++;
 11655  2F05  0023               	movlb	3	; select bank3
 11656  2F06  3064               	movlw	100
 11657  2F07  0ABA               	incf	_bt_time_count^(0+384),f
 11658                           
 11659                           ;task.c: 410: if(bt_time_count>=100)
 11660  2F08  023A               	subwf	_bt_time_count^(0+384),w
 11661  2F09  1C03               	skipc
 11662  2F0A  2F3F               	goto	l17382
 11663                           
 11664                           ;task.c: 414: bt_led_status=0x01;
 11665  2F0B  01BA               	clrf	_bt_time_count^(0+384)
 11666                           
 11667                           ;task.c: 416: charge_index=0x01;
 11668  2F0C  0021               	movlb	1	; select bank1
 11669  2F0D  01B3               	clrf	_charge_index^(0+128)
 11670  2F0E  0AB3               	incf	_charge_index^(0+128),f
 11671                           
 11672                           ;task.c: 418: battery_voltage_status=0x01;
 11673  2F0F  0022               	movlb	2	; select bank2
 11674  2F10  01AA               	clrf	_battery_voltage_status^(0+256)
 11675  2F11  0AAA               	incf	_battery_voltage_status^(0+256),f
 11676  2F12  2F3F               	goto	l17382
 11677  2F13                     l17376:	
 11678                           
 11679                           ;task.c: 422: else if((battery_voltage_value>=(dianchi_guoya_baohu+volt_id*5))&&(charge_
      +                          index<=0x01))
 11680  2F13  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11681  2F16  319B  2346  31AC   	fcall	___lwtofl
 11682  2F19  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11683  2F1C  31B5  2554  31AC   	fcall	PL202	;call to abstracted procedure
 11684  2F1F  3188  20BC  31AC   	fcall	___wmul
 11685  2F22  31B5  259B  31AC   	fcall	PL260	;call to abstracted procedure
 11686  2F25  31A7  2751  31AC   	fcall	___awtofl
 11687  2F28  31B4  2417  31AC   	fcall	PL72	;call to abstracted procedure
 11688  2F2B  318C  24C6  31AC   	fcall	___fladd
 11689  2F2E  31B5  2539  31AC   	fcall	PL192	;call to abstracted procedure
 11690  2F31  319E  2658  31AC   	fcall	___flge
 11691  2F34  1C03               	btfss	3,0
 11692  2F35  2F3F               	goto	l17382
 11693                           
 11694                           ;task.c: 423: {
 11695                           ;task.c: 424: bt_led_status=0x00;
 11696  2F36  3002               	movlw	2
 11697  2F37  0021               	movlb	1	; select bank1
 11698  2F38  0233               	subwf	_charge_index^(0+128),w
 11699  2F39  1803               	skipnc
 11700  2F3A  2F3F               	goto	l17382
 11701                           
 11702                           ;task.c: 426: bt_time_count=0x00;
 11703  2F3B  0023               	movlb	3	; select bank3
 11704  2F3C  01BA               	clrf	_bt_time_count^(0+384)
 11705                           
 11706                           ;task.c: 428: battery_voltage_status=0x00;
 11707  2F3D  0022               	movlb	2	; select bank2
 11708  2F3E  01AA               	clrf	_battery_voltage_status^(0+256)
 11709  2F3F                     l17382:	
 11710                           
 11711                           ;task.c: 429: }
 11712                           ;task.c: 432: if( (battery_voltage_value<dianchi_guoya_huifu) && (charge_index==0x02) )
 11713  2F3F  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11714  2F42  319B  2346  31AC   	fcall	___lwtofl
 11715  2F45  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11716  2F48  319F  2755  31AC   	fcall	PL60	;call to abstracted procedure
 11717  2F4B  319E  2658  31AC   	fcall	___flge
 11718  2F4E  1803               	btfsc	3,0
 11719  2F4F  2F5C               	goto	l17390
 11720  2F50  0021               	movlb	1	; select bank1
 11721  2F51  0833               	movf	_charge_index^(0+128),w
 11722  2F52  3A02               	xorlw	2
 11723  2F53  1D03               	skipz
 11724  2F54  2F5C               	goto	l17390
 11725                           
 11726                           ;task.c: 438: charge_led_status=0x01;
 11727  2F55  3003               	movlw	3
 11728  2F56  00B3               	movwf	_charge_index^(0+128)
 11729                           
 11730                           ;task.c: 440: Enable_Buck_Pwm();
 11731  2F57  3188  2080  31AC   	fcall	_Enable_Buck_Pwm
 11732  2F5A                     L99:	
 11733                           
 11734                           ;task.c: 442: }
 11735  2F5A  3191  2910         	goto	l17432
 11736  2F5C                     l17390:	
 11737                           
 11738                           ;task.c: 443: else if( (battery_voltage_value>=dianchi_guoya_huifu) && (charge_index==0x
      +                          02) )
 11739  2F5C  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11740  2F5F  319B  2346  31AC   	fcall	___lwtofl
 11741  2F62  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11742  2F65  319F  2755  31AC   	fcall	PL60	;call to abstracted procedure
 11743  2F68  319E  2658  31AC   	fcall	___flge
 11744  2F6B  1C03               	btfss	3,0
 11745  2F6C  2F83               	goto	l17396
 11746  2F6D  0021               	movlb	1	; select bank1
 11747  2F6E  0833               	movf	_charge_index^(0+128),w
 11748  2F6F  3A02               	xorlw	2
 11749  2F70  1D03               	skipz
 11750  2F71  2F83               	goto	l17396
 11751                           
 11752                           ;task.c: 447: charge_led_status=0x00;
 11753  2F72  0022               	movlb	2	; select bank2
 11754  2F73  0823               	movf	(_b_v+3)^(0+256),w
 11755  2F74  0024               	movlb	4	; select bank4
 11756  2F75  00A7               	movwf	(_bt_00_lv+3)^(0+512)
 11757  2F76  0022               	movlb	2	; select bank2
 11758  2F77  0822               	movf	(_b_v+2)^(0+256),w
 11759  2F78  0024               	movlb	4	; select bank4
 11760  2F79  00A6               	movwf	(_bt_00_lv+2)^(0+512)
 11761  2F7A  0022               	movlb	2	; select bank2
 11762  2F7B  0821               	movf	(_b_v+1)^(0+256),w
 11763  2F7C  0024               	movlb	4	; select bank4
 11764  2F7D  00A5               	movwf	(_bt_00_lv+1)^(0+512)
 11765  2F7E  0022               	movlb	2	; select bank2
 11766  2F7F  0820               	movf	_b_v^(0+256),w
 11767  2F80  0024               	movlb	4	; select bank4
 11768  2F81  00A4               	movwf	_bt_00_lv^(0+512)
 11769                           
 11770                           ;task.c: 449: }
 11771  2F82  2F5A               	goto	L99
 11772  2F83                     l17396:	
 11773                           
 11774                           ;task.c: 450: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index>=0x0
      +                          3) )
 11775  2F83  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11776  2F86  319B  2346  31AC   	fcall	___lwtofl
 11777  2F89  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11778  2F8C  319F  2730  31AC   	fcall	PL40	;call to abstracted procedure
 11779  2F8F  319E  2658  31AC   	fcall	___flge
 11780  2F92  1803               	btfsc	3,0
 11781  2F93  2FCC               	goto	l17416
 11782  2F94  3003               	movlw	3
 11783  2F95  0021               	movlb	1	; select bank1
 11784  2F96  0233               	subwf	_charge_index^(0+128),w
 11785  2F97  1C03               	skipc
 11786  2F98  2FCC               	goto	l17416
 11787                           
 11788                           ;task.c: 451: {
 11789                           ;task.c: 453: if((charge_current_value<charge_i_limit)&&(charge_index>=0x03))
 11790  2F99  0022               	movlb	2	; select bank2
 11791  2F9A  3187  27CD  31AC   	fcall	PL168	;call to abstracted procedure
 11792  2F9D  319B  2346  31AC   	fcall	___lwtofl
 11793  2FA0  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11794  2FA3  31B4  24CB  31AC   	fcall	PL112	;call to abstracted procedure
 11795  2FA6  319E  2658  31AC   	fcall	___flge
 11796  2FA9  1803               	btfsc	3,0
 11797  2FAA  2FC8               	goto	l17414
 11798  2FAB  3003               	movlw	3
 11799  2FAC  0021               	movlb	1	; select bank1
 11800  2FAD  0233               	subwf	_charge_index^(0+128),w
 11801  2FAE  1C03               	skipc
 11802  2FAF  2FC8               	goto	l17414
 11803                           
 11804                           ;task.c: 454: {
 11805                           ;task.c: 455: mppt_time_count++;
 11806  2FB0  0024               	movlb	4	; select bank4
 11807  2FB1  0AD2               	incf	_mppt_time_count^(0+512),f
 11808  2FB2  1903               	skipnz
 11809  2FB3  0AD3               	incf	(_mppt_time_count+1)^(0+512),f
 11810                           
 11811                           ;task.c: 457: if(mppt_time_count>5)
 11812  2FB4  3000               	movlw	0
 11813  2FB5  0253               	subwf	(_mppt_time_count+1)^(0+512),w
 11814  2FB6  3006               	movlw	6
 11815  2FB7  1903               	skipnz
 11816  2FB8  0252               	subwf	_mppt_time_count^(0+512),w
 11817  2FB9  1C03               	skipc
 11818  2FBA  2FC8               	goto	l17414
 11819                           
 11820                           ;task.c: 458: {
 11821                           ;task.c: 459: mppt_time_count=0x00;
 11822  2FBB  01D2               	clrf	_mppt_time_count^(0+512)
 11823  2FBC  01D3               	clrf	(_mppt_time_count+1)^(0+512)
 11824                           
 11825                           ;task.c: 461: Mppt_Charge();
 11826  2FBD  3199  21D0  31AC   	fcall	_Mppt_Charge
 11827                           
 11828                           ;task.c: 463: I_prev=charge_current_value;
 11829  2FC0  0022               	movlb	2	; select bank2
 11830  2FC1  0825               	movf	(_charge_current_value+1)^(0+256),w
 11831  2FC2  0023               	movlb	3	; select bank3
 11832  2FC3  00A5               	movwf	(_I_prev+1)^(0+384)
 11833  2FC4  0022               	movlb	2	; select bank2
 11834  2FC5  0824               	movf	_charge_current_value^(0+256),w
 11835  2FC6  0023               	movlb	3	; select bank3
 11836  2FC7  00A4               	movwf	_I_prev^(0+384)
 11837  2FC8                     l17414:	
 11838                           
 11839                           ;task.c: 464: }
 11840                           ;task.c: 466: }
 11841                           ;task.c: 468: involid_time_count=0x00;
 11842  2FC8  0024               	movlb	4	; select bank4
 11843  2FC9  01CE               	clrf	_involid_time_count^(0+512)
 11844  2FCA  01CF               	clrf	(_involid_time_count+1)^(0+512)
 11845                           
 11846                           ;task.c: 470: }
 11847  2FCB  2F5A               	goto	L99
 11848  2FCC                     l17416:	
 11849                           
 11850                           ;task.c: 471: else if( (battery_voltage_value>=dianchi_guoya_baohu) && (charge_index>=0x
      +                          03) )
 11851  2FCC  31B4  247D  31AC   	fcall	PL92	;call to abstracted procedure
 11852  2FCF  319B  2346  31AC   	fcall	___lwtofl
 11853  2FD2  31B3  2393  31AC   	fcall	PL16	;call to abstracted procedure
 11854  2FD5  319F  2730  31AC   	fcall	PL40	;call to abstracted procedure
 11855  2FD8  319E  2658  31AC   	fcall	___flge
 11856  2FDB  1C03               	btfss	3,0
 11857  2FDC  2F5A               	goto	L99
 11858  2FDD  3003               	movlw	3
 11859  2FDE  0021               	movlb	1	; select bank1
 11860  2FDF  0233               	subwf	_charge_index^(0+128),w
 11861  2FE0  1C03               	skipc
 11862  2FE1  2F5A               	goto	L99
 11863                           
 11864                           ;task.c: 472: {
 11865                           ;task.c: 473: involid_time_count++;
 11866  2FE2  0024               	movlb	4	; select bank4
 11867  2FE3  0ACE               	incf	_involid_time_count^(0+512),f
 11868  2FE4  1903               	skipnz
 11869  2FE5  0ACF               	incf	(_involid_time_count+1)^(0+512),f
 11870                           
 11871                           ;task.c: 475: if(involid_time_count>200)
 11872  2FE6  3000               	movlw	0
 11873  2FE7  024F               	subwf	(_involid_time_count+1)^(0+512),w
 11874  2FE8  30C9               	movlw	201
 11875  2FE9  1903               	skipnz
 11876  2FEA  024E               	subwf	_involid_time_count^(0+512),w
 11877  2FEB  1C03               	skipc
 11878  2FEC  2F5A               	goto	L99
 11879  2FED  3003               	movlw	3
 11880                           
 11881                           ;task.c: 476: {
 11882                           ;task.c: 477: involid_time_count=0x00;
 11883  2FEE  01CE               	clrf	_involid_time_count^(0+512)
 11884  2FEF  01CF               	clrf	(_involid_time_count+1)^(0+512)
 11885                           
 11886                           ;task.c: 479: if(charge_index>=0x03)
 11887  2FF0  0021               	movlb	1	; select bank1
 11888  2FF1  0233               	subwf	_charge_index^(0+128),w
 11889  2FF2  1C03               	skipc
 11890  2FF3  2F5A               	goto	L99
 11891                           
 11892                           ;task.c: 480: {
 11893                           ;task.c: 481: charge_index=0x05;
 11894  2FF4  3005               	movlw	5
 11895  2FF5  00B3               	movwf	_charge_index^(0+128)
 11896                           
 11897                           ;task.c: 483: Disable_Buck_Pwm();
 11898  2FF6  31A7  276F  31AC   	fcall	_Disable_Buck_Pwm
 11899                           
 11900                           ;task.c: 487: charge_led_status=0x00;
 11901  2FF9  0020               	movlb	0	; select bank0
 11902  2FFA  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 11903  2FFB  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 11904  2FFC  318B  23BA  31AC   	fcall	_Set_Buck_Pwm_Duty
 11905  2FFF                     l1369:	
 11906                           ;task.c: 489: while(1);
 11907                           
 11908  2FFF  2FFF               	goto	l1369
 11909                           
 11910                           	psect	text11
 11911  35A5                     __ptext11:	
 11912 ;; *************** function _start_ad_convert *****************
 11913 ;; Defined at:
 11914 ;;		line 1114 in file "D:\MCUProject\ZH-SL-F60\src\task.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;  ch              1    wreg     unsigned char 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;  ch              1    0[BANK1 ] unsigned char 
 11919 ;;  temp            2    5[BANK1 ] unsigned int 
 11920 ;;  ad_l            2    3[BANK1 ] unsigned int 
 11921 ;;  ad_h            2    1[BANK1 ] unsigned int 
 11922 ;;  i               1    9[BANK1 ] unsigned char 
 11923 ;;  j               1    8[BANK1 ] unsigned char 
 11924 ;;  ad_ch           1    7[BANK1 ] unsigned char 
 11925 ;;  k               1    0        unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  2   16[BANK0 ] unsigned int 
 11928 ;; Registers used:
 11929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 1C/1
 11932 ;;		On exit  : 1F/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Temps:          0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Totals:         0      52      10       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;Total ram usage:       62 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    3
 11942 ;; This function calls:
 11943 ;;		___lwdiv
 11944 ;; This function is called by:
 11945 ;;		_auto_system
 11946 ;;		_handle_ad_loop
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function _start_ad_convert
 11952  35A5                     _start_ad_convert:	
 11953                           
 11954                           ;incstack = 0
 11955                           ; Regs used in _start_ad_convert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11956                           ;start_ad_convert@ch stored from wreg
 11957  35A5  0021               	movlb	1	; select bank1
 11958  35A6  00C0               	movwf	start_ad_convert@ch^(0+128)
 11959                           
 11960                           ;task.c: 1128: ad_ch=ch;
 11961  35A7  00C7               	movwf	start_ad_convert@ad_ch^(0+128)
 11962                           
 11963                           ;task.c: 1130: ADCON0bits.CHS =ch;
 11964  35A8  0840               	movf	start_ad_convert@ch^(0+128),w
 11965  35A9  0020               	movlb	0	; select bank0
 11966  35AA  00B2               	movwf	??_start_ad_convert
 11967  35AB  0DB2               	rlf	??_start_ad_convert,f
 11968  35AC  0DB2               	rlf	??_start_ad_convert,f
 11969  35AD  0021               	movlb	1	; select bank1
 11970  35AE  081D               	movf	29,w	;volatile
 11971  35AF  0020               	movlb	0	; select bank0
 11972  35B0  0632               	xorwf	??_start_ad_convert,w
 11973  35B1  3983               	andlw	-125
 11974  35B2  0632               	xorwf	??_start_ad_convert,w
 11975  35B3  0021               	movlb	1	; select bank1
 11976  35B4  009D               	movwf	29	;volatile
 11977                           
 11978                           ;task.c: 1132: ADCON0bits.ADON =1;
 11979  35B5  141D               	bsf	29,0	;volatile
 11980                           
 11981                           ;task.c: 1134: if((ad_ch==0b01010)||(ad_ch==0b01001))
 11982  35B6  0847               	movf	start_ad_convert@ad_ch^(0+128),w
 11983  35B7  3A0A               	xorlw	10
 11984  35B8  1903               	skipnz
 11985  35B9  2DBE               	goto	l16702
 11986  35BA  0847               	movf	start_ad_convert@ad_ch^(0+128),w
 11987  35BB  3A09               	xorlw	9
 11988  35BC  1D03               	skipz
 11989  35BD  2EDB               	goto	l16750
 11990  35BE                     l16702:	
 11991                           
 11992                           ;task.c: 1135: {
 11993                           ;task.c: 1136: for(i=0;i<51;i++)
 11994  35BE  01C9               	clrf	start_ad_convert@i^(0+128)
 11995  35BF                     l16708:	
 11996                           
 11997                           ;task.c: 1137: {
 11998                           ;task.c: 1138: _delay((unsigned long)((5)*(32000000/4000000.0)));
 11999  35BF  300D               	movlw	13
 12000  35C0  0020               	movlb	0	; select bank0
 12001  35C1  00B2               	movwf	??_start_ad_convert
 12002  35C2                     u13397:	
 12003  35C2  0BB2               	decfsz	??_start_ad_convert,f
 12004  35C3  2DC2               	goto	u13397
 12005                           
 12006                           ;task.c: 1140: ADCON0bits.GO=1;
 12007  35C4  0021               	movlb	1	; select bank1
 12008  35C5  149D               	bsf	29,1	;volatile
 12009  35C6                     l1532:	
 12010                           ;task.c: 1142: while(ADCON0bits.nDONE);
 12011                           
 12012  35C6  189D               	btfsc	29,1	;volatile
 12013  35C7  2DC6               	goto	l1532
 12014                           
 12015                           ;task.c: 1144: ad_h=0b00000011&ADRESH;
 12016  35C8  081C               	movf	28,w	;volatile
 12017                           
 12018                           ;task.c: 1146: ad_l=ADRESL;
 12019                           
 12020                           ;task.c: 1148: adc_buffer[i]=(ad_h<<8)|ad_l;
 12021  35C9  27C8  31B5         	fcall	PL36	;call to abstracted procedure
 12022  35CB  3033               	movlw	51
 12023  35CC  0AC9               	incf	start_ad_convert@i^(0+128),f
 12024  35CD  0249               	subwf	start_ad_convert@i^(0+128),w
 12025  35CE  1C03               	skipc
 12026  35CF  2DBF               	goto	l16708
 12027                           
 12028                           ;task.c: 1149: }
 12029                           ;task.c: 1150: for(j=0;j<50;j++)
 12030  35D0  01C8               	clrf	start_ad_convert@j^(0+128)
 12031  35D1                     l16728:	
 12032                           
 12033                           ;task.c: 1151: {
 12034                           ;task.c: 1152: for(i=0;i<50-j;i++)
 12035  35D1  01C9               	clrf	start_ad_convert@i^(0+128)
 12036  35D2                     l16740:	
 12037  35D2  0020               	movlb	0	; select bank0
 12038  35D3  01B3               	clrf	??_start_ad_convert+1
 12039  35D4  0021               	movlb	1	; select bank1
 12040  35D5  0848               	movf	start_ad_convert@j^(0+128),w
 12041  35D6  3C32               	sublw	50
 12042  35D7  27F3  31B5         	fcall	PL160	;call to abstracted procedure
 12043  35D9  1803               	btfsc	3,0
 12044  35DA  2DE3               	goto	l16742
 12045                           
 12046                           ;task.c: 1153: {
 12047                           ;task.c: 1154: if(adc_buffer[i]>adc_buffer[i+1])
 12048  35DB  0021               	movlb	1	; select bank1
 12049  35DC  27C4  31B5         	fcall	PL34	;call to abstracted procedure
 12050  35DE  27BA  31B5         	fcall	PL22	;call to abstracted procedure
 12051                           
 12052                           ;task.c: 1155: {
 12053                           ;task.c: 1156: temp=adc_buffer[i];
 12054                           
 12055                           ;task.c: 1158: adc_buffer[i]=adc_buffer[i+1];
 12056                           
 12057                           ;task.c: 1160: adc_buffer[i+1]=temp;
 12058  35E0  2742  31B5         	fcall	PL8	;call to abstracted procedure
 12059  35E2  2DD2               	goto	l16740
 12060  35E3                     l16742:	
 12061  35E3  0021               	movlb	1	; select bank1
 12062  35E4  3032               	movlw	50
 12063  35E5  0AC8               	incf	start_ad_convert@j^(0+128),f
 12064  35E6  0248               	subwf	start_ad_convert@j^(0+128),w
 12065  35E7  1C03               	skipc
 12066  35E8  2DD1               	goto	l16728
 12067                           
 12068                           ;task.c: 1161: }
 12069                           ;task.c: 1163: }
 12070                           ;task.c: 1164: }
 12071                           ;task.c: 1166: ADCON0bits.ADON =0;
 12072  35E9  101D               	bcf	29,0	;volatile
 12073                           
 12074                           ;task.c: 1168: return((adc_buffer[24]+adc_buffer[26]+
 12075                           ;task.c: 1169: adc_buffer[22]+adc_buffer[28]+
 12076                           ;task.c: 1170: adc_buffer[20]+adc_buffer[30]+
 12077                           ;task.c: 1171: adc_buffer[18]+adc_buffer[32]+
 12078                           ;task.c: 1172: adc_buffer[16]+adc_buffer[34]+
 12079                           ;task.c: 1173: adc_buffer[14]+adc_buffer[36]+
 12080                           ;task.c: 1174: adc_buffer[12]+adc_buffer[38]+
 12081                           ;task.c: 1175: adc_buffer[10]+adc_buffer[40]+
 12082                           ;task.c: 1176: adc_buffer[8]+adc_buffer[42]+
 12083                           ;task.c: 1177: adc_buffer[6]+adc_buffer[44]+
 12084                           ;task.c: 1178: adc_buffer[4]+adc_buffer[46]+
 12085                           ;task.c: 1179: adc_buffer[2]+adc_buffer[48]+
 12086  35EA  301A               	movlw	26
 12087  35EB  0020               	movlb	0	; select bank0
 12088  35EC  00A9               	movwf	___lwdiv@divisor
 12089  35ED  3070               	movlw	112
 12090  35EE  01AA               	clrf	___lwdiv@divisor+1
 12091  35EF  0086               	movwf	6
 12092  35F0  3023               	movlw	35
 12093  35F1  0087               	movwf	7
 12094  35F2  30A0               	movlw	160
 12095  35F3  0084               	movwf	4
 12096  35F4  3023               	movlw	35
 12097  35F5  0085               	movwf	5
 12098  35F6  3F00               	moviw [0]fsr0
 12099  35F7  00B2               	movwf	??_start_ad_convert
 12100  35F8  3F01               	moviw [1]fsr0
 12101  35F9  00B3               	movwf	??_start_ad_convert+1
 12102  35FA  30A4               	movlw	164
 12103  35FB  0084               	movwf	4
 12104  35FC  3F00               	moviw [0]fsr0
 12105  35FD  0732               	addwf	??_start_ad_convert,w
 12106  35FE  00B4               	movwf	??_start_ad_convert+2
 12107  35FF  3F01               	moviw [1]fsr0
 12108  3600  3D33               	addwfc	??_start_ad_convert+1,w
 12109  3601  00B5               	movwf	??_start_ad_convert+3
 12110  3602  309C               	movlw	156
 12111  3603  0084               	movwf	4
 12112  3604  3F00               	moviw [0]fsr0
 12113  3605  0734               	addwf	??_start_ad_convert+2,w
 12114  3606  00B6               	movwf	??_start_ad_convert+4
 12115  3607  3F01               	moviw [1]fsr0
 12116  3608  3D35               	addwfc	??_start_ad_convert+3,w
 12117  3609  00B7               	movwf	??_start_ad_convert+5
 12118  360A  30A8               	movlw	168
 12119  360B  0084               	movwf	4
 12120  360C  3F00               	moviw [0]fsr0
 12121  360D  0736               	addwf	??_start_ad_convert+4,w
 12122  360E  00B8               	movwf	??_start_ad_convert+6
 12123  360F  3F01               	moviw [1]fsr0
 12124  3610  3D37               	addwfc	??_start_ad_convert+5,w
 12125  3611  00B9               	movwf	??_start_ad_convert+7
 12126  3612  3098               	movlw	152
 12127  3613  0084               	movwf	4
 12128  3614  3F00               	moviw [0]fsr0
 12129  3615  0738               	addwf	??_start_ad_convert+6,w
 12130  3616  00BA               	movwf	??_start_ad_convert+8
 12131  3617  3F01               	moviw [1]fsr0
 12132  3618  3D39               	addwfc	??_start_ad_convert+7,w
 12133  3619  00BB               	movwf	??_start_ad_convert+9
 12134  361A  30AC               	movlw	172
 12135  361B  0084               	movwf	4
 12136  361C  3F00               	moviw [0]fsr0
 12137  361D  073A               	addwf	??_start_ad_convert+8,w
 12138  361E  00BC               	movwf	??_start_ad_convert+10
 12139  361F  3F01               	moviw [1]fsr0
 12140  3620  3D3B               	addwfc	??_start_ad_convert+9,w
 12141  3621  00BD               	movwf	??_start_ad_convert+11
 12142  3622  3094               	movlw	148
 12143  3623  0084               	movwf	4
 12144  3624  3F00               	moviw [0]fsr0
 12145  3625  073C               	addwf	??_start_ad_convert+10,w
 12146  3626  00BE               	movwf	??_start_ad_convert+12
 12147  3627  3F01               	moviw [1]fsr0
 12148  3628  3D3D               	addwfc	??_start_ad_convert+11,w
 12149  3629  00BF               	movwf	??_start_ad_convert+13
 12150  362A  30B0               	movlw	176
 12151  362B  0084               	movwf	4
 12152  362C  3F00               	moviw [0]fsr0
 12153  362D  073E               	addwf	??_start_ad_convert+12,w
 12154  362E  00C0               	movwf	??_start_ad_convert+14
 12155  362F  3F01               	moviw [1]fsr0
 12156  3630  3D3F               	addwfc	??_start_ad_convert+13,w
 12157  3631  00C1               	movwf	??_start_ad_convert+15
 12158  3632  3090               	movlw	144
 12159  3633  0084               	movwf	4
 12160  3634  3F00               	moviw [0]fsr0
 12161  3635  0740               	addwf	??_start_ad_convert+14,w
 12162  3636  00C2               	movwf	??_start_ad_convert+16
 12163  3637  3F01               	moviw [1]fsr0
 12164  3638  3D41               	addwfc	??_start_ad_convert+15,w
 12165  3639  00C3               	movwf	??_start_ad_convert+17
 12166  363A  30B4               	movlw	180
 12167  363B  0084               	movwf	4
 12168  363C  3F00               	moviw [0]fsr0
 12169  363D  0742               	addwf	??_start_ad_convert+16,w
 12170  363E  00C4               	movwf	??_start_ad_convert+18
 12171  363F  3F01               	moviw [1]fsr0
 12172  3640  3D43               	addwfc	??_start_ad_convert+17,w
 12173  3641  00C5               	movwf	??_start_ad_convert+19
 12174  3642  3070               	movlw	112
 12175  3643  0084               	movwf	4
 12176  3644  311C               	addfsr 0,28
 12177  3645  3F00               	moviw [0]fsr0
 12178  3646  0744               	addwf	??_start_ad_convert+18,w
 12179  3647  00C6               	movwf	??_start_ad_convert+20
 12180  3648  3F01               	moviw [1]fsr0
 12181  3649  3D45               	addwfc	??_start_ad_convert+19,w
 12182  364A  00C7               	movwf	??_start_ad_convert+21
 12183  364B  30B8               	movlw	184
 12184  364C  0084               	movwf	4
 12185  364D  3023               	movlw	35
 12186  364E  0085               	movwf	5
 12187  364F  3F00               	moviw [0]fsr0
 12188  3650  0746               	addwf	??_start_ad_convert+20,w
 12189  3651  00C8               	movwf	??_start_ad_convert+22
 12190  3652  3F01               	moviw [1]fsr0
 12191  3653  3D47               	addwfc	??_start_ad_convert+21,w
 12192  3654  00C9               	movwf	??_start_ad_convert+23
 12193  3655  3070               	movlw	112
 12194  3656  0084               	movwf	4
 12195  3657  3118               	addfsr 0,24
 12196  3658  3F00               	moviw [0]fsr0
 12197  3659  0748               	addwf	??_start_ad_convert+22,w
 12198  365A  00CA               	movwf	??_start_ad_convert+24
 12199  365B  3F01               	moviw [1]fsr0
 12200  365C  3D49               	addwfc	??_start_ad_convert+23,w
 12201  365D  00CB               	movwf	??_start_ad_convert+25
 12202  365E  30BC               	movlw	188
 12203  365F  0084               	movwf	4
 12204  3660  3023               	movlw	35
 12205  3661  0085               	movwf	5
 12206  3662  3F00               	moviw [0]fsr0
 12207  3663  074A               	addwf	??_start_ad_convert+24,w
 12208  3664  00CC               	movwf	??_start_ad_convert+26
 12209  3665  3F01               	moviw [1]fsr0
 12210  3666  3D4B               	addwfc	??_start_ad_convert+25,w
 12211  3667  00CD               	movwf	??_start_ad_convert+27
 12212  3668  3070               	movlw	112
 12213  3669  0084               	movwf	4
 12214  366A  3114               	addfsr 0,20
 12215  366B  3F00               	moviw [0]fsr0
 12216  366C  074C               	addwf	??_start_ad_convert+26,w
 12217  366D  00CE               	movwf	??_start_ad_convert+28
 12218  366E  3F01               	moviw [1]fsr0
 12219  366F  3D4D               	addwfc	??_start_ad_convert+27,w
 12220  3670  00CF               	movwf	??_start_ad_convert+29
 12221  3671  30C0               	movlw	192
 12222  3672  0084               	movwf	4
 12223  3673  3023               	movlw	35
 12224  3674  0085               	movwf	5
 12225  3675  3F00               	moviw [0]fsr0
 12226  3676  074E               	addwf	??_start_ad_convert+28,w
 12227  3677  00D0               	movwf	??_start_ad_convert+30
 12228  3678  3F01               	moviw [1]fsr0
 12229  3679  3D4F               	addwfc	??_start_ad_convert+29,w
 12230  367A  00D1               	movwf	??_start_ad_convert+31
 12231  367B  3070               	movlw	112
 12232  367C  0084               	movwf	4
 12233  367D  3110               	addfsr 0,16
 12234  367E  3F00               	moviw [0]fsr0
 12235  367F  0750               	addwf	??_start_ad_convert+30,w
 12236  3680  00D2               	movwf	??_start_ad_convert+32
 12237  3681  3F01               	moviw [1]fsr0
 12238  3682  3D51               	addwfc	??_start_ad_convert+31,w
 12239  3683  00D3               	movwf	??_start_ad_convert+33
 12240  3684  30C4               	movlw	196
 12241  3685  0084               	movwf	4
 12242  3686  3023               	movlw	35
 12243  3687  0085               	movwf	5
 12244  3688  3F00               	moviw [0]fsr0
 12245  3689  0752               	addwf	??_start_ad_convert+32,w
 12246  368A  00D4               	movwf	??_start_ad_convert+34
 12247  368B  3F01               	moviw [1]fsr0
 12248  368C  3D53               	addwfc	??_start_ad_convert+33,w
 12249  368D  00D5               	movwf	??_start_ad_convert+35
 12250  368E  3070               	movlw	112
 12251  368F  0084               	movwf	4
 12252  3690  310C               	addfsr 0,12
 12253  3691  3F00               	moviw [0]fsr0
 12254  3692  0754               	addwf	??_start_ad_convert+34,w
 12255  3693  00D6               	movwf	??_start_ad_convert+36
 12256  3694  3F01               	moviw [1]fsr0
 12257  3695  3D55               	addwfc	??_start_ad_convert+35,w
 12258  3696  00D7               	movwf	??_start_ad_convert+37
 12259  3697  30C8               	movlw	200
 12260  3698  0084               	movwf	4
 12261  3699  3023               	movlw	35
 12262  369A  0085               	movwf	5
 12263  369B  3F00               	moviw [0]fsr0
 12264  369C  0756               	addwf	??_start_ad_convert+36,w
 12265  369D  00D8               	movwf	??_start_ad_convert+38
 12266  369E  3F01               	moviw [1]fsr0
 12267  369F  3D57               	addwfc	??_start_ad_convert+37,w
 12268  36A0  00D9               	movwf	??_start_ad_convert+39
 12269  36A1  3070               	movlw	112
 12270  36A2  0084               	movwf	4
 12271  36A3  3108               	addfsr 0,8
 12272  36A4  3F00               	moviw [0]fsr0
 12273  36A5  0758               	addwf	??_start_ad_convert+38,w
 12274  36A6  00DA               	movwf	??_start_ad_convert+40
 12275  36A7  3F01               	moviw [1]fsr0
 12276  36A8  3D59               	addwfc	??_start_ad_convert+39,w
 12277  36A9  00DB               	movwf	??_start_ad_convert+41
 12278  36AA  30CC               	movlw	204
 12279  36AB  0084               	movwf	4
 12280  36AC  3023               	movlw	35
 12281  36AD  0085               	movwf	5
 12282  36AE  3F00               	moviw [0]fsr0
 12283  36AF  075A               	addwf	??_start_ad_convert+40,w
 12284  36B0  00DC               	movwf	??_start_ad_convert+42
 12285  36B1  3F01               	moviw [1]fsr0
 12286  36B2  3D5B               	addwfc	??_start_ad_convert+41,w
 12287  36B3  00DD               	movwf	??_start_ad_convert+43
 12288  36B4  3070               	movlw	112
 12289  36B5  0084               	movwf	4
 12290  36B6  3104               	addfsr 0,4
 12291  36B7  3F00               	moviw [0]fsr0
 12292  36B8  075C               	addwf	??_start_ad_convert+42,w
 12293  36B9  00DE               	movwf	??_start_ad_convert+44
 12294  36BA  3F01               	moviw [1]fsr0
 12295  36BB  3D5D               	addwfc	??_start_ad_convert+43,w
 12296  36BC  00DF               	movwf	??_start_ad_convert+45
 12297  36BD  30D0               	movlw	208
 12298  36BE  0084               	movwf	4
 12299  36BF  3023               	movlw	35
 12300  36C0  0085               	movwf	5
 12301  36C1  3F00               	moviw [0]fsr0
 12302  36C2  075E               	addwf	??_start_ad_convert+44,w
 12303  36C3  00E0               	movwf	??_start_ad_convert+46
 12304  36C4  3F01               	moviw [1]fsr0
 12305  36C5  3D5F               	addwfc	??_start_ad_convert+45,w
 12306  36C6  00E1               	movwf	??_start_ad_convert+47
 12307  36C7  30D4               	movlw	212
 12308  36C8  0084               	movwf	4
 12309  36C9  3F00               	moviw [0]fsr0
 12310  36CA  0760               	addwf	??_start_ad_convert+46,w
 12311  36CB  00E2               	movwf	??_start_ad_convert+48
 12312  36CC  3F01               	moviw [1]fsr0
 12313  36CD  3D61               	addwfc	??_start_ad_convert+47,w
 12314  36CE  00E3               	movwf	??_start_ad_convert+49
 12315  36CF  3F40               	moviw [0]fsr1
 12316  36D0  0762               	addwf	??_start_ad_convert+48,w
 12317  36D1  00AB               	movwf	___lwdiv@dividend
 12318  36D2  3F41               	moviw [1]fsr1
 12319  36D3  3D63               	addwfc	??_start_ad_convert+49,w
 12320  36D4  00AC               	movwf	___lwdiv@dividend+1
 12321  36D5  271D               	fcall	___lwdiv
 12322  36D6  082A               	movf	?___lwdiv+1,w
 12323  36D7  00B1               	movwf	?_start_ad_convert+1
 12324  36D8  0829               	movf	?___lwdiv,w
 12325  36D9  00B0               	movwf	?_start_ad_convert
 12326  36DA  0008               	return
 12327  36DB                     l16750:	
 12328                           
 12329                           ;task.c: 1181: }
 12330                           ;task.c: 1185: for(i=0;i<11;i++)
 12331  36DB  01C9               	clrf	start_ad_convert@i^(0+128)
 12332  36DC                     l16756:	
 12333                           
 12334                           ;task.c: 1186: {
 12335                           ;task.c: 1187: _delay((unsigned long)((10)*(32000000/4000000.0)));
 12336  36DC  301A               	movlw	26
 12337  36DD  0020               	movlb	0	; select bank0
 12338  36DE  00B2               	movwf	??_start_ad_convert
 12339  36DF                     u13407:	
 12340  36DF  0BB2               	decfsz	??_start_ad_convert,f
 12341  36E0  2EDF               	goto	u13407
 12342  36E1  0000               	nop
 12343                           
 12344                           ;task.c: 1189: ADCON0bits.GO=1;
 12345  36E2  0021               	movlb	1	; select bank1
 12346  36E3  149D               	bsf	29,1	;volatile
 12347  36E4                     l1544:	
 12348                           ;task.c: 1191: while(ADCON0bits.nDONE);
 12349                           
 12350  36E4  189D               	btfsc	29,1	;volatile
 12351  36E5  2EE4               	goto	l1544
 12352                           
 12353                           ;task.c: 1193: ad_h=0b00000011&ADRESH;
 12354  36E6  081C               	movf	28,w	;volatile
 12355                           
 12356                           ;task.c: 1195: ad_l=ADRESL;
 12357                           
 12358                           ;task.c: 1197: adc_buffer[i]=(ad_h<<8)|ad_l;
 12359  36E7  27C8  31B5         	fcall	PL36	;call to abstracted procedure
 12360  36E9  300B               	movlw	11
 12361  36EA  0AC9               	incf	start_ad_convert@i^(0+128),f
 12362  36EB  0249               	subwf	start_ad_convert@i^(0+128),w
 12363  36EC  1C03               	skipc
 12364  36ED  2EDC               	goto	l16756
 12365                           
 12366                           ;task.c: 1198: }
 12367                           ;task.c: 1200: for(j=0;j<11-1;j++)
 12368  36EE  01C8               	clrf	start_ad_convert@j^(0+128)
 12369  36EF                     l16776:	
 12370                           
 12371                           ;task.c: 1201: {
 12372                           ;task.c: 1202: for(i=0;i<11-j;i++)
 12373  36EF  01C9               	clrf	start_ad_convert@i^(0+128)
 12374  36F0                     l16788:	
 12375  36F0  0020               	movlb	0	; select bank0
 12376  36F1  01B3               	clrf	??_start_ad_convert+1
 12377  36F2  0021               	movlb	1	; select bank1
 12378  36F3  0848               	movf	start_ad_convert@j^(0+128),w
 12379  36F4  3C0B               	sublw	11
 12380  36F5  27F3  31B5         	fcall	PL160	;call to abstracted procedure
 12381  36F7  1803               	btfsc	3,0
 12382  36F8  2F01               	goto	l16790
 12383                           
 12384                           ;task.c: 1203: {
 12385                           ;task.c: 1204: if(adc_buffer[i]>adc_buffer[i+1])
 12386  36F9  0021               	movlb	1	; select bank1
 12387  36FA  27C4  31B5         	fcall	PL34	;call to abstracted procedure
 12388  36FC  27BA  31B5         	fcall	PL22	;call to abstracted procedure
 12389                           
 12390                           ;task.c: 1205: {
 12391                           ;task.c: 1206: temp=adc_buffer[i];
 12392                           
 12393                           ;task.c: 1208: adc_buffer[i]=adc_buffer[i+1];
 12394                           
 12395                           ;task.c: 1210: adc_buffer[i+1]=temp;
 12396  36FE  2742  31B5         	fcall	PL8	;call to abstracted procedure
 12397  3700  2EF0               	goto	l16788
 12398  3701                     l16790:	
 12399  3701  0021               	movlb	1	; select bank1
 12400  3702  300A               	movlw	10
 12401  3703  0AC8               	incf	start_ad_convert@j^(0+128),f
 12402  3704  0248               	subwf	start_ad_convert@j^(0+128),w
 12403  3705  1C03               	skipc
 12404  3706  2EEF               	goto	l16776
 12405                           
 12406                           ;task.c: 1211: }
 12407                           ;task.c: 1213: }
 12408                           ;task.c: 1214: }
 12409                           ;task.c: 1216: ADCON0bits.ADON =0;
 12410  3707  101D               	bcf	29,0	;volatile
 12411                           
 12412                           ;task.c: 1218: return((adc_buffer[((11-1)/2)-1]+adc_buffer[((11-1)/2)+1])/2);
 12413  3708  3070               	movlw	112
 12414  3709  0086               	movwf	6
 12415  370A  3023               	movlw	35
 12416  370B  0087               	movwf	7
 12417  370C  3070               	movlw	112
 12418  370D  314C               	addfsr 1,12
 12419  370E  0084               	movwf	4
 12420  370F  3023               	movlw	35
 12421  3710  0085               	movwf	5
 12422  3711  3108               	addfsr 0,8
 12423  3712  3F40               	moviw [0]fsr1
 12424  3713  0700               	addwf	0,w
 12425  3714  0020               	movlb	0	; select bank0
 12426  3715  00B0               	movwf	?_start_ad_convert
 12427  3716  3101               	addfsr 0,1
 12428  3717  3F41               	moviw [1]fsr1
 12429  3718  3D00               	addwfc	0,w
 12430  3719  00B1               	movwf	?_start_ad_convert+1
 12431  371A  36B1               	lsrf	?_start_ad_convert+1,f
 12432  371B  0CB0               	rrf	?_start_ad_convert,f
 12433  371C  0008               	return
 12434  371D                     __end_of_start_ad_convert:	
 12435  371D                     __ptext12:	
 12436 ;; *************** function ___lwdiv *****************
 12437 ;; Defined at:
 12438 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;  divisor         2    9[BANK0 ] unsigned int 
 12441 ;;  dividend        2   11[BANK0 ] unsigned int 
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  quotient        2   14[BANK0 ] unsigned int 
 12444 ;;  counter         1   13[BANK0 ] unsigned char 
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  2    9[BANK0 ] unsigned int 
 12447 ;; Registers used:
 12448 ;;		wreg, status,2, status,0
 12449 ;; Tracked objects:
 12450 ;;		On entry : 1F/0
 12451 ;;		On exit  : 1F/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12455 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;Total ram usage:        7 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; Hardware stack levels required when called:    2
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_handle_ad_loop
 12465 ;;		_start_ad_convert
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           
 12469                           
 12470                           ;psect for function ___lwdiv
 12471  371D                     ___lwdiv:	
 12472                           
 12473                           ;incstack = 0
 12474                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12475  371D  01AE               	clrf	___lwdiv@quotient
 12476  371E  01AF               	clrf	___lwdiv@quotient+1
 12477  371F  082A               	movf	___lwdiv@divisor+1,w
 12478  3720  0429               	iorwf	___lwdiv@divisor,w
 12479  3721  1903               	skipnz
 12480  3722  2F3D               	goto	l19230
 12481  3723  01AD               	clrf	___lwdiv@counter
 12482  3724                     L58:	
 12483  3724  0AAD               	incf	___lwdiv@counter,f
 12484  3725  1BAA               	btfsc	___lwdiv@divisor+1,7
 12485  3726  2F2A               	goto	l19218
 12486  3727  35A9               	lslf	___lwdiv@divisor,f
 12487  3728  0DAA               	rlf	___lwdiv@divisor+1,f
 12488  3729  2F24               	goto	L58
 12489  372A                     l19218:	
 12490  372A  35AE               	lslf	___lwdiv@quotient,f
 12491  372B  0DAF               	rlf	___lwdiv@quotient+1,f
 12492  372C  082A               	movf	___lwdiv@divisor+1,w
 12493  372D  022C               	subwf	___lwdiv@dividend+1,w
 12494  372E  1D03               	skipz
 12495  372F  2F32               	goto	u13355
 12496  3730  0829               	movf	___lwdiv@divisor,w
 12497  3731  022B               	subwf	___lwdiv@dividend,w
 12498  3732                     u13355:	
 12499  3732  1C03               	skipc
 12500  3733  2F39               	goto	l19226
 12501  3734  0829               	movf	___lwdiv@divisor,w
 12502  3735  02AB               	subwf	___lwdiv@dividend,f
 12503  3736  082A               	movf	___lwdiv@divisor+1,w
 12504  3737  3BAC               	subwfb	___lwdiv@dividend+1,f
 12505  3738  142E               	bsf	___lwdiv@quotient,0
 12506  3739                     l19226:	
 12507  3739  36AA               	lsrf	___lwdiv@divisor+1,f
 12508  373A  0CA9               	rrf	___lwdiv@divisor,f
 12509  373B  0BAD               	decfsz	___lwdiv@counter,f
 12510  373C  2F2A               	goto	l19218
 12511  373D                     l19230:	
 12512  373D  082F               	movf	___lwdiv@quotient+1,w
 12513  373E  00AA               	movwf	?___lwdiv+1
 12514  373F  082E               	movf	___lwdiv@quotient,w
 12515  3740  00A9               	movwf	?___lwdiv
 12516  3741  0008               	return
 12517  3742                     __end_of___lwdiv:	
 12518  3742                     PL8:	
 12519  3742  0833               	movf	??_start_ad_convert+1,w
 12520  3743  3D35               	addwfc	??_start_ad_convert+3,w
 12521  3744  0087               	movwf	7
 12522  3745  3F40               	moviw [0]fsr1
 12523  3746  00B6               	movwf	??_start_ad_convert+4
 12524  3747  3F41               	moviw [1]fsr1
 12525  3748  00B7               	movwf	??_start_ad_convert+5
 12526  3749  0021               	movlb	1	; select bank1
 12527  374A  0849               	movf	start_ad_convert@i^(0+128),w
 12528  374B  0020               	movlb	0	; select bank0
 12529  374C  00B8               	movwf	??_start_ad_convert+6
 12530  374D  3072               	movlw	114
 12531  374E  01B9               	clrf	??_start_ad_convert+7
 12532  374F  35B8               	lslf	??_start_ad_convert+6,f
 12533  3750  0DB9               	rlf	??_start_ad_convert+7,f
 12534  3751  00BA               	movwf	??_start_ad_convert+8
 12535  3752  3023               	movlw	35
 12536  3753  00BB               	movwf	??_start_ad_convert+9
 12537  3754  0838               	movf	??_start_ad_convert+6,w
 12538  3755  073A               	addwf	??_start_ad_convert+8,w
 12539  3756  0086               	movwf	6
 12540  3757  0839               	movf	??_start_ad_convert+7,w
 12541  3758  3D3B               	addwfc	??_start_ad_convert+9,w
 12542  3759  0087               	movwf	7
 12543  375A  3F40               	moviw [0]fsr1
 12544  375B  00BC               	movwf	??_start_ad_convert+10
 12545  375C  3F41               	moviw [1]fsr1
 12546  375D  00BD               	movwf	??_start_ad_convert+11
 12547  375E  0837               	movf	??_start_ad_convert+5,w
 12548  375F  023D               	subwf	??_start_ad_convert+11,w
 12549  3760  1D03               	skipz
 12550  3761  2F64               	goto	u9695
 12551  3762  0836               	movf	??_start_ad_convert+4,w
 12552  3763  023C               	subwf	??_start_ad_convert+10,w
 12553  3764                     u9695:	
 12554  3764  1803               	skipnc
 12555  3765  2FB7               	goto	l16738
 12556  3766  0021               	movlb	1	; select bank1
 12557  3767  0849               	movf	start_ad_convert@i^(0+128),w
 12558  3768  0020               	movlb	0	; select bank0
 12559  3769  00B2               	movwf	??_start_ad_convert
 12560  376A  3070               	movlw	112
 12561  376B  01B3               	clrf	??_start_ad_convert+1
 12562  376C  35B2               	lslf	??_start_ad_convert,f
 12563  376D  0DB3               	rlf	??_start_ad_convert+1,f
 12564  376E  00B4               	movwf	??_start_ad_convert+2
 12565  376F  3023               	movlw	35
 12566  3770  00B5               	movwf	??_start_ad_convert+3
 12567  3771  0832               	movf	??_start_ad_convert,w
 12568  3772  0734               	addwf	??_start_ad_convert+2,w
 12569  3773  0086               	movwf	6
 12570  3774  0833               	movf	??_start_ad_convert+1,w
 12571  3775  3D35               	addwfc	??_start_ad_convert+3,w
 12572  3776  0087               	movwf	7
 12573  3777  3F40               	moviw [0]fsr1
 12574  3778  0021               	movlb	1	; select bank1
 12575  3779  00C5               	movwf	start_ad_convert@temp^(0+128)
 12576  377A  3F41               	moviw [1]fsr1
 12577  377B  00C6               	movwf	(start_ad_convert@temp+1)^(0+128)
 12578  377C  0849               	movf	start_ad_convert@i^(0+128),w
 12579  377D  0020               	movlb	0	; select bank0
 12580  377E  00B2               	movwf	??_start_ad_convert
 12581  377F  3072               	movlw	114
 12582  3780  01B3               	clrf	??_start_ad_convert+1
 12583  3781  35B2               	lslf	??_start_ad_convert,f
 12584  3782  0DB3               	rlf	??_start_ad_convert+1,f
 12585  3783  00B4               	movwf	??_start_ad_convert+2
 12586  3784  3023               	movlw	35
 12587  3785  00B5               	movwf	??_start_ad_convert+3
 12588  3786  0832               	movf	??_start_ad_convert,w
 12589  3787  0734               	addwf	??_start_ad_convert+2,w
 12590  3788  0086               	movwf	6
 12591  3789  0833               	movf	??_start_ad_convert+1,w
 12592  378A  3D35               	addwfc	??_start_ad_convert+3,w
 12593  378B  0087               	movwf	7
 12594  378C  0021               	movlb	1	; select bank1
 12595  378D  0849               	movf	start_ad_convert@i^(0+128),w
 12596  378E  0020               	movlb	0	; select bank0
 12597  378F  00B6               	movwf	??_start_ad_convert+4
 12598  3790  3070               	movlw	112
 12599  3791  01B7               	clrf	??_start_ad_convert+5
 12600  3792  35B6               	lslf	??_start_ad_convert+4,f
 12601  3793  0DB7               	rlf	??_start_ad_convert+5,f
 12602  3794  00B8               	movwf	??_start_ad_convert+6
 12603  3795  3023               	movlw	35
 12604  3796  00B9               	movwf	??_start_ad_convert+7
 12605  3797  0836               	movf	??_start_ad_convert+4,w
 12606  3798  0738               	addwf	??_start_ad_convert+6,w
 12607  3799  0084               	movwf	4
 12608  379A  0837               	movf	??_start_ad_convert+5,w
 12609  379B  3D39               	addwfc	??_start_ad_convert+7,w
 12610  379C  0085               	movwf	5
 12611  379D  3F40               	moviw [0]fsr1
 12612  379E  3F80               	movwi [0]fsr0
 12613  379F  3F41               	moviw [1]fsr1
 12614  37A0  3F81               	movwi [1]fsr0
 12615  37A1  0021               	movlb	1	; select bank1
 12616  37A2  0849               	movf	start_ad_convert@i^(0+128),w
 12617  37A3  0020               	movlb	0	; select bank0
 12618  37A4  00B2               	movwf	??_start_ad_convert
 12619  37A5  3072               	movlw	114
 12620  37A6  01B3               	clrf	??_start_ad_convert+1
 12621  37A7  35B2               	lslf	??_start_ad_convert,f
 12622  37A8  0DB3               	rlf	??_start_ad_convert+1,f
 12623  37A9  00B4               	movwf	??_start_ad_convert+2
 12624  37AA  3023               	movlw	35
 12625  37AB  00B5               	movwf	??_start_ad_convert+3
 12626  37AC  0832               	movf	??_start_ad_convert,w
 12627  37AD  0734               	addwf	??_start_ad_convert+2,w
 12628  37AE  0086               	movwf	6
 12629  37AF  0833               	movf	??_start_ad_convert+1,w
 12630  37B0  3D35               	addwfc	??_start_ad_convert+3,w
 12631  37B1  0087               	movwf	7
 12632  37B2  0021               	movlb	1	; select bank1
 12633  37B3  0845               	movf	start_ad_convert@temp^(0+128),w
 12634  37B4  3FC0               	movwi [0]fsr1
 12635  37B5  0846               	movf	(start_ad_convert@temp+1)^(0+128),w
 12636  37B6  3FC1               	movwi [1]fsr1
 12637  37B7                     l16738:	
 12638  37B7  0021               	movlb	1	; select bank1
 12639  37B8  0AC9               	incf	start_ad_convert@i^(0+128),f
 12640  37B9  0008               	return
 12641  37BA                     __end_ofPL8:	
 12642  37BA                     PL22:	
 12643  37BA  01B3               	clrf	??_start_ad_convert+1
 12644  37BB  35B2               	lslf	??_start_ad_convert,f
 12645  37BC  0DB3               	rlf	??_start_ad_convert+1,f
 12646  37BD  00B4               	movwf	??_start_ad_convert+2
 12647  37BE  3023               	movlw	35
 12648  37BF  00B5               	movwf	??_start_ad_convert+3
 12649  37C0  0832               	movf	??_start_ad_convert,w
 12650  37C1  0734               	addwf	??_start_ad_convert+2,w
 12651  37C2  0086               	movwf	6
 12652  37C3  0008               	return
 12653  37C4                     __end_ofPL22:	
 12654  37C4                     PL34:	
 12655  37C4  0849               	movf	start_ad_convert@i^(0+128),w
 12656  37C5  0020               	movlb	0	; select bank0
 12657  37C6  00B2               	movwf	??_start_ad_convert
 12658  37C7  3470               	retlw	112
 12659  37C8                     __end_ofPL34:	
 12660  37C8                     PL36:	
 12661  37C8  3903               	andlw	3
 12662  37C9  00C1               	movwf	start_ad_convert@ad_h^(0+128)
 12663  37CA  01C2               	clrf	(start_ad_convert@ad_h+1)^(0+128)
 12664  37CB  081B               	movf	27,w	;volatile
 12665  37CC  00C3               	movwf	start_ad_convert@ad_l^(0+128)
 12666  37CD  01C4               	clrf	(start_ad_convert@ad_l+1)^(0+128)
 12667  37CE  0841               	movf	start_ad_convert@ad_h^(0+128),w
 12668  37CF  0020               	movlb	0	; select bank0
 12669  37D0  00B3               	movwf	??_start_ad_convert+1
 12670  37D1  01B2               	clrf	??_start_ad_convert
 12671  37D2  0021               	movlb	1	; select bank1
 12672  37D3  0843               	movf	start_ad_convert@ad_l^(0+128),w
 12673  37D4  0020               	movlb	0	; select bank0
 12674  37D5  0432               	iorwf	??_start_ad_convert,w
 12675  37D6  00B4               	movwf	??_start_ad_convert+2
 12676  37D7  0021               	movlb	1	; select bank1
 12677  37D8  0844               	movf	(start_ad_convert@ad_l+1)^(0+128),w
 12678  37D9  0020               	movlb	0	; select bank0
 12679  37DA  0433               	iorwf	??_start_ad_convert+1,w
 12680  37DB  00B5               	movwf	??_start_ad_convert+3
 12681  37DC  0021               	movlb	1	; select bank1
 12682  37DD  0849               	movf	start_ad_convert@i^(0+128),w
 12683  37DE  0020               	movlb	0	; select bank0
 12684  37DF  00B6               	movwf	??_start_ad_convert+4
 12685  37E0  3070               	movlw	112
 12686  37E1  01B7               	clrf	??_start_ad_convert+5
 12687  37E2  35B6               	lslf	??_start_ad_convert+4,f
 12688  37E3  0DB7               	rlf	??_start_ad_convert+5,f
 12689  37E4  00B8               	movwf	??_start_ad_convert+6
 12690  37E5  3023               	movlw	35
 12691  37E6  00B9               	movwf	??_start_ad_convert+7
 12692  37E7  0836               	movf	??_start_ad_convert+4,w
 12693  37E8  0738               	addwf	??_start_ad_convert+6,w
 12694  37E9  0086               	movwf	6
 12695  37EA  0837               	movf	??_start_ad_convert+5,w
 12696  37EB  3D39               	addwfc	??_start_ad_convert+7,w
 12697  37EC  0087               	movwf	7
 12698  37ED  0834               	movf	??_start_ad_convert+2,w
 12699  37EE  3FC0               	movwi [0]fsr1
 12700  37EF  0835               	movf	??_start_ad_convert+3,w
 12701  37F0  3FC1               	movwi [1]fsr1
 12702  37F1  0021               	movlb	1	; select bank1
 12703  37F2  0008               	return
 12704  37F3                     __end_ofPL36:	
 12705  37F3                     PL160:	
 12706  37F3  0020               	movlb	0	; select bank0
 12707  37F4  00B2               	movwf	??_start_ad_convert
 12708  37F5  1C03               	skipc
 12709  37F6  03B3               	decf	??_start_ad_convert+1,f
 12710  37F7  0833               	movf	??_start_ad_convert+1,w
 12711  37F8  3A80               	xorlw	128
 12712  37F9  3C80               	sublw	128
 12713  37FA  1D03               	skipz
 12714  37FB  0008               	return
 12715  37FC  0832               	movf	??_start_ad_convert,w
 12716  37FD  0021               	movlb	1	; select bank1
 12717  37FE  0249               	subwf	start_ad_convert@i^(0+128),w
 12718  37FF  0008               	return
 12719  3800                     __end_ofPL160:	
 12720                           
 12721                           	psect	text13
 12722  08BC                     __ptext13:	
 12723 ;; *************** function ___wmul *****************
 12724 ;; Defined at:
 12725 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  multiplier      2    3[BANK0 ] unsigned int 
 12728 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  product         2    7[BANK0 ] unsigned int 
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  2    3[BANK0 ] unsigned int 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2, status,0
 12735 ;; Tracked objects:
 12736 ;;		On entry : 1F/0
 12737 ;;		On exit  : 1F/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;Total ram usage:        6 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; Hardware stack levels required when called:    2
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_handle_ad_loop
 12751 ;;		_handle_uart_rx_buf
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           
 12756                           ;psect for function ___wmul
 12757  08BC                     ___wmul:	
 12758                           
 12759                           ;incstack = 0
 12760                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12761  08BC  01A7               	clrf	___wmul@product
 12762  08BD  01A8               	clrf	___wmul@product+1
 12763  08BE                     l19240:	
 12764  08BE  1C23               	btfss	___wmul@multiplier,0
 12765  08BF  28C4               	goto	l19244
 12766  08C0  0825               	movf	___wmul@multiplicand,w
 12767  08C1  07A7               	addwf	___wmul@product,f
 12768  08C2  0826               	movf	___wmul@multiplicand+1,w
 12769  08C3  3DA8               	addwfc	___wmul@product+1,f
 12770  08C4                     l19244:	
 12771  08C4  35A5               	lslf	___wmul@multiplicand,f
 12772  08C5  0DA6               	rlf	___wmul@multiplicand+1,f
 12773  08C6  36A4               	lsrf	___wmul@multiplier+1,f
 12774  08C7  0CA3               	rrf	___wmul@multiplier,f
 12775  08C8  0824               	movf	___wmul@multiplier+1,w
 12776  08C9  0423               	iorwf	___wmul@multiplier,w
 12777  08CA  1D03               	skipz
 12778  08CB  28BE               	goto	l19240
 12779  08CC  0828               	movf	___wmul@product+1,w
 12780  08CD  00A4               	movwf	?___wmul+1
 12781  08CE  0827               	movf	___wmul@product,w
 12782  08CF  00A3               	movwf	?___wmul
 12783  08D0  0008               	return
 12784  08D1                     __end_of___wmul:	
 12785                           
 12786                           	psect	text14
 12787  0957                     __ptext14:	
 12788 ;; *************** function ___lldiv *****************
 12789 ;; Defined at:
 12790 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;  divisor         4    3[BANK0 ] unsigned long 
 12793 ;;  dividend        4    7[BANK0 ] unsigned long 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;  quotient        4   11[BANK0 ] unsigned long 
 12796 ;;  counter         1   15[BANK0 ] unsigned char 
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  4    3[BANK0 ] unsigned long 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0
 12801 ;; Tracked objects:
 12802 ;;		On entry : 1F/0
 12803 ;;		On exit  : 1F/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12806 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;Total ram usage:       13 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:    2
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_handle_ad_loop
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           
 12821                           ;psect for function ___lldiv
 12822  0957                     ___lldiv:	
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12826  0957  01AB               	clrf	___lldiv@quotient
 12827  0958  01AC               	clrf	___lldiv@quotient+1
 12828  0959  01AD               	clrf	___lldiv@quotient+2
 12829  095A  01AE               	clrf	___lldiv@quotient+3
 12830  095B  0826               	movf	___lldiv@divisor+3,w
 12831  095C  0425               	iorwf	___lldiv@divisor+2,w
 12832  095D  0424               	iorwf	___lldiv@divisor+1,w
 12833  095E  0423               	iorwf	___lldiv@divisor,w
 12834  095F  1903               	skipnz
 12835  0960  298D               	goto	l19204
 12836  0961  01AF               	clrf	___lldiv@counter
 12837  0962                     L59:	
 12838  0962  0AAF               	incf	___lldiv@counter,f
 12839  0963  1BA6               	btfsc	___lldiv@divisor+3,7
 12840  0964  296A               	goto	l19192
 12841  0965  35A3               	lslf	___lldiv@divisor,f
 12842  0966  0DA4               	rlf	___lldiv@divisor+1,f
 12843  0967  0DA5               	rlf	___lldiv@divisor+2,f
 12844  0968  0DA6               	rlf	___lldiv@divisor+3,f
 12845  0969  2962               	goto	L59
 12846  096A                     l19192:	
 12847  096A  35AB               	lslf	___lldiv@quotient,f
 12848  096B  0DAC               	rlf	___lldiv@quotient+1,f
 12849  096C  0DAD               	rlf	___lldiv@quotient+2,f
 12850  096D  0DAE               	rlf	___lldiv@quotient+3,f
 12851  096E  0826               	movf	___lldiv@divisor+3,w
 12852  096F  022A               	subwf	___lldiv@dividend+3,w
 12853  0970  1D03               	skipz
 12854  0971  297C               	goto	u13315
 12855  0972  0825               	movf	___lldiv@divisor+2,w
 12856  0973  0229               	subwf	___lldiv@dividend+2,w
 12857  0974  1D03               	skipz
 12858  0975  297C               	goto	u13315
 12859  0976  0824               	movf	___lldiv@divisor+1,w
 12860  0977  0228               	subwf	___lldiv@dividend+1,w
 12861  0978  1D03               	skipz
 12862  0979  297C               	goto	u13315
 12863  097A  0823               	movf	___lldiv@divisor,w
 12864  097B  0227               	subwf	___lldiv@dividend,w
 12865  097C                     u13315:	
 12866  097C  1C03               	skipc
 12867  097D  2987               	goto	l19200
 12868  097E  0823               	movf	___lldiv@divisor,w
 12869  097F  02A7               	subwf	___lldiv@dividend,f
 12870  0980  0824               	movf	___lldiv@divisor+1,w
 12871  0981  3BA8               	subwfb	___lldiv@dividend+1,f
 12872  0982  0825               	movf	___lldiv@divisor+2,w
 12873  0983  3BA9               	subwfb	___lldiv@dividend+2,f
 12874  0984  0826               	movf	___lldiv@divisor+3,w
 12875  0985  3BAA               	subwfb	___lldiv@dividend+3,f
 12876  0986  142B               	bsf	___lldiv@quotient,0
 12877  0987                     l19200:	
 12878  0987  36A6               	lsrf	___lldiv@divisor+3,f
 12879  0988  0CA5               	rrf	___lldiv@divisor+2,f
 12880  0989  0CA4               	rrf	___lldiv@divisor+1,f
 12881  098A  0CA3               	rrf	___lldiv@divisor,f
 12882  098B  0BAF               	decfsz	___lldiv@counter,f
 12883  098C  296A               	goto	l19192
 12884  098D                     l19204:	
 12885  098D  082E               	movf	___lldiv@quotient+3,w
 12886  098E  00A6               	movwf	?___lldiv+3
 12887  098F  082D               	movf	___lldiv@quotient+2,w
 12888  0990  00A5               	movwf	?___lldiv+2
 12889  0991  082C               	movf	___lldiv@quotient+1,w
 12890  0992  00A4               	movwf	?___lldiv+1
 12891  0993  082B               	movf	___lldiv@quotient,w
 12892  0994  00A3               	movwf	?___lldiv
 12893  0995  0008               	return
 12894  0996                     __end_of___lldiv:	
 12895                           
 12896                           	psect	text15
 12897  19D0                     __ptext15:	
 12898 ;; *************** function _Mppt_Charge *****************
 12899 ;; Defined at:
 12900 ;;		line 1583 in file "D:\MCUProject\ZH-SL-F60\src\task.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;		None
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;		None
 12905 ;; Return value:  Size  Location     Type
 12906 ;;		None               void
 12907 ;; Registers used:
 12908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 1F/4
 12911 ;;		On exit  : 1A/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;Total ram usage:        0 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:    6
 12921 ;; This function calls:
 12922 ;;		_Set_Buck_Pwm_Duty
 12923 ;;		___fladd
 12924 ;;		___flge
 12925 ;;		___fltol
 12926 ;;		___lwtofl
 12927 ;;		_pid_calc
 12928 ;; This function is called by:
 12929 ;;		_handle_ad_loop
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           
 12934                           ;psect for function _Mppt_Charge
 12935  19D0                     _Mppt_Charge:	
 12936                           
 12937                           ;task.c: 1586: if((battery_voltage_value<dianchi_guoya_huifu)&&(charge_index==0x03))
 12938                           
 12939                           ;incstack = 0
 12940                           ; Regs used in _Mppt_Charge: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12941  19D0  31B4  247D  3199   	fcall	PL92	;call to abstracted procedure
 12942  19D3  2346               	fcall	___lwtofl
 12943  19D4  31B3  2393  3199   	fcall	PL16	;call to abstracted procedure
 12944  19D7  2755  3199         	fcall	PL60	;call to abstracted procedure
 12945  19D9  2658  3199         	fcall	___flge
 12946  19DB  1803               	btfsc	3,0
 12947  19DC  2A4C               	goto	l18880
 12948  19DD  0021               	movlb	1	; select bank1
 12949  19DE  0833               	movf	_charge_index^(0+128),w
 12950  19DF  3A03               	xorlw	3
 12951  19E0  1D03               	skipz
 12952  19E1  2A4C               	goto	l18880
 12953                           
 12954                           ;task.c: 1587: {
 12955                           ;task.c: 1589: if(mppt_status==0x00)
 12956  19E2  0023               	movlb	3	; select bank3
 12957  19E3  08C0               	movf	_mppt_status^(0+384),f
 12958  19E4  1D03               	skipz
 12959  19E5  2A13               	goto	l18854
 12960                           
 12961                           ;task.c: 1590: {
 12962                           ;task.c: 1591: if (charge_current_value>=I_prev)
 12963  19E6  0825               	movf	(_I_prev+1)^(0+384),w
 12964  19E7  0022               	movlb	2	; select bank2
 12965  19E8  0225               	subwf	(_charge_current_value+1)^(0+256),w
 12966  19E9  1D03               	skipz
 12967  19EA  29EF               	goto	u12675
 12968  19EB  0023               	movlb	3	; select bank3
 12969  19EC  0824               	movf	_I_prev^(0+384),w
 12970  19ED  0022               	movlb	2	; select bank2
 12971  19EE  0224               	subwf	_charge_current_value^(0+256),w
 12972  19EF                     u12675:	
 12973  19EF  1803               	btfsc	3,0
 12974  19F0  2A20               	goto	L65
 12975                           
 12976                           ;task.c: 1604: else
 12977                           ;task.c: 1605: {
 12978                           ;task.c: 1606: mppt_status=1;
 12979                           
 12980                           ;task.c: 1603: }
 12981                           
 12982                           ;task.c: 1596: if(buck_pwm_value>=900)
 12983                           
 12984                           ;task.c: 1592: {
 12985                           ;task.c: 1594: buck_pwm_value=buck_pwm_value + 200 * 0.025;
 12986  19F1  0023               	movlb	3	; select bank3
 12987  19F2  01C0               	clrf	_mppt_status^(0+384)
 12988  19F3  0AC0               	incf	_mppt_status^(0+384),f
 12989  19F4                     L63:	
 12990                           
 12991                           ;task.c: 1608: buck_pwm_value=buck_pwm_value - 200 * 0.025;
 12992  19F4  0021               	movlb	1	; select bank1
 12993  19F5  2783  3199         	fcall	PL150	;call to abstracted procedure
 12994  19F7  2346  3199         	fcall	___lwtofl
 12995  19F9  27AD  3199         	fcall	PL182	;call to abstracted procedure
 12996  19FB  30C0               	movlw	192
 12997  19FC  27F5               	fcall	PL236	;call to abstracted procedure
 12998  19FD  318C  24C6  3199   	fcall	___fladd
 12999  1A00  27B6  3199         	fcall	PL184	;call to abstracted procedure
 13000  1A02  2698  3199         	fcall	___fltol
 13001  1A04  279B  3199         	fcall	PL170	;call to abstracted procedure
 13002                           
 13003                           ;task.c: 1610: if(buck_pwm_value<=50)
 13004  1A06  3000               	movlw	0
 13005  1A07  0227               	subwf	(_buck_pwm_value+1)^(0+128),w
 13006  1A08  3033               	movlw	51
 13007  1A09  1903               	skipnz
 13008  1A0A  0226               	subwf	_buck_pwm_value^(0+128),w
 13009  1A0B  1803               	skipnc
 13010  1A0C  2A3D               	goto	l18842
 13011                           
 13012                           ;task.c: 1611: {
 13013                           ;task.c: 1612: buck_pwm_value=50;
 13014  1A0D  3032               	movlw	50
 13015  1A0E  00A6               	movwf	_buck_pwm_value^(0+128)
 13016  1A0F  01A7               	clrf	(_buck_pwm_value+1)^(0+128)
 13017                           
 13018                           ;task.c: 1614: mppt_status=0;
 13019  1A10  0023               	movlb	3	; select bank3
 13020  1A11  01C0               	clrf	_mppt_status^(0+384)
 13021  1A12  2A3D               	goto	l18842
 13022  1A13                     l18854:	
 13023                           
 13024                           ;task.c: 1621: else
 13025                           ;task.c: 1622: {
 13026                           ;task.c: 1623: if (charge_current_value>=I_prev)
 13027  1A13  0825               	movf	(_I_prev+1)^(0+384),w
 13028  1A14  0022               	movlb	2	; select bank2
 13029  1A15  0225               	subwf	(_charge_current_value+1)^(0+256),w
 13030  1A16  1D03               	skipz
 13031  1A17  2A1C               	goto	u12705
 13032  1A18  0023               	movlb	3	; select bank3
 13033  1A19  0824               	movf	_I_prev^(0+384),w
 13034  1A1A  0022               	movlb	2	; select bank2
 13035  1A1B  0224               	subwf	_charge_current_value^(0+256),w
 13036  1A1C                     u12705:	
 13037  1A1C  1803               	btfsc	3,0
 13038  1A1D  29F4               	goto	L63
 13039                           
 13040                           ;task.c: 1640: else
 13041                           ;task.c: 1641: {
 13042                           ;task.c: 1642: mppt_status=0;
 13043                           
 13044                           ;task.c: 1628: if(buck_pwm_value<=50)
 13045                           
 13046                           ;task.c: 1624: {
 13047                           ;task.c: 1626: buck_pwm_value=buck_pwm_value-200 * 0.025;
 13048  1A1E  0023               	movlb	3	; select bank3
 13049  1A1F  01C0               	clrf	_mppt_status^(0+384)
 13050  1A20                     L65:	
 13051                           
 13052                           ;task.c: 1644: buck_pwm_value=buck_pwm_value+ 200 * 0.025;
 13053  1A20  0021               	movlb	1	; select bank1
 13054  1A21  2783  3199         	fcall	PL150	;call to abstracted procedure
 13055  1A23  2346  3199         	fcall	___lwtofl
 13056  1A25  27AD  3199         	fcall	PL182	;call to abstracted procedure
 13057  1A27  3040               	movlw	64
 13058  1A28  27F5               	fcall	PL236	;call to abstracted procedure
 13059  1A29  318C  24C6  3199   	fcall	___fladd
 13060  1A2C  27B6  3199         	fcall	PL184	;call to abstracted procedure
 13061  1A2E  2698  3199         	fcall	___fltol
 13062  1A30  279B  3199         	fcall	PL170	;call to abstracted procedure
 13063                           
 13064                           ;task.c: 1646: if(buck_pwm_value>=900)
 13065  1A32  3003               	movlw	3
 13066  1A33  0227               	subwf	(_buck_pwm_value+1)^(0+128),w
 13067  1A34  3084               	movlw	132
 13068  1A35  1903               	skipnz
 13069  1A36  0226               	subwf	_buck_pwm_value^(0+128),w
 13070  1A37  1C03               	skipc
 13071  1A38  2A3D               	goto	l18842
 13072                           
 13073                           ;task.c: 1597: {
 13074                           ;task.c: 1598: buck_pwm_value=900;
 13075  1A39  3084               	movlw	132
 13076  1A3A  00A6               	movwf	_buck_pwm_value^(0+128)
 13077  1A3B  3003               	movlw	3
 13078  1A3C  00A7               	movwf	(_buck_pwm_value^(0+128)+1)
 13079  1A3D                     l18842:	
 13080                           
 13081                           ;task.c: 1599: }
 13082                           ;task.c: 1601: Set_Buck_Pwm_Duty(buck_pwm_value);
 13083  1A3D  0021               	movlb	1	; select bank1
 13084  1A3E  277B               	fcall	PL138	;call to abstracted procedure
 13085  1A3F  318B  23BA  3199   	fcall	_Set_Buck_Pwm_Duty
 13086                           
 13087                           ;task.c: 1653: }
 13088                           ;task.c: 1657: }
 13089                           ;task.c: 1659: PWM = buck_pwm_value;
 13090  1A42  0021               	movlb	1	; select bank1
 13091  1A43  2783  3199         	fcall	PL150	;call to abstracted procedure
 13092  1A45  2346  3199         	fcall	___lwtofl
 13093  1A47  276B               	fcall	PL132	;call to abstracted procedure
 13094  1A48                     l18878:	
 13095                           
 13096                           ;task.c: 1661: cv_level_time_count=0x00;
 13097  1A48  0024               	movlb	4	; select bank4
 13098  1A49  01C0               	clrf	_cv_level_time_count^(0+512)
 13099  1A4A  01C1               	clrf	(_cv_level_time_count+1)^(0+512)
 13100                           
 13101                           ;task.c: 1663: }
 13102  1A4B  0008               	return
 13103  1A4C                     l18880:	
 13104                           
 13105                           ;task.c: 1664: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value
      +                          <dianchi_guoya_baohu)&&(charge_index==0x03))
 13106  1A4C  31B4  247D  3199   	fcall	PL92	;call to abstracted procedure
 13107  1A4F  2346               	fcall	___lwtofl
 13108  1A50  31B3  2393  3199   	fcall	PL16	;call to abstracted procedure
 13109  1A53  0023               	movlb	3	; select bank3
 13110  1A54  0866               	movf	(_dianchi_cv_level+3)^(0+384),w
 13111  1A55  0020               	movlb	0	; select bank0
 13112  1A56  00E1               	movwf	___flge@ff2+3
 13113  1A57  0023               	movlb	3	; select bank3
 13114  1A58  0865               	movf	(_dianchi_cv_level+2)^(0+384),w
 13115  1A59  0020               	movlb	0	; select bank0
 13116  1A5A  00E0               	movwf	___flge@ff2+2
 13117  1A5B  0023               	movlb	3	; select bank3
 13118  1A5C  0864               	movf	(_dianchi_cv_level+1)^(0+384),w
 13119  1A5D  0020               	movlb	0	; select bank0
 13120  1A5E  00DF               	movwf	___flge@ff2+1
 13121  1A5F  0023               	movlb	3	; select bank3
 13122  1A60  0863               	movf	_dianchi_cv_level^(0+384),w
 13123  1A61  0020               	movlb	0	; select bank0
 13124  1A62  00DE               	movwf	___flge@ff2
 13125  1A63  2658  3199         	fcall	___flge
 13126  1A65  1C03               	btfss	3,0
 13127  1A66  2A90               	goto	l18896
 13128  1A67  086B               	movf	_battery_voltage_value+1,w
 13129  1A68  00B1               	movwf	___lwtofl@c+1
 13130  1A69  086A               	movf	_battery_voltage_value,w
 13131  1A6A  00B0               	movwf	___lwtofl@c
 13132  1A6B  2346               	fcall	___lwtofl
 13133  1A6C  31B3  2393  3199   	fcall	PL16	;call to abstracted procedure
 13134  1A6F  2730  3199         	fcall	PL40	;call to abstracted procedure
 13135  1A71  2658  3199         	fcall	___flge
 13136  1A73  1803               	btfsc	3,0
 13137  1A74  2A90               	goto	l18896
 13138  1A75  0021               	movlb	1	; select bank1
 13139  1A76  0833               	movf	_charge_index^(0+128),w
 13140  1A77  3A03               	xorlw	3
 13141  1A78  1D03               	skipz
 13142  1A79  2A90               	goto	l18896
 13143                           
 13144                           ;task.c: 1665: {
 13145                           ;task.c: 1666: cv_level_time_count++;
 13146  1A7A  0024               	movlb	4	; select bank4
 13147  1A7B  0AC0               	incf	_cv_level_time_count^(0+512),f
 13148  1A7C  1903               	skipnz
 13149  1A7D  0AC1               	incf	(_cv_level_time_count+1)^(0+512),f
 13150                           
 13151                           ;task.c: 1668: if(cv_level_time_count>=100)
 13152  1A7E  3000               	movlw	0
 13153  1A7F  0241               	subwf	(_cv_level_time_count+1)^(0+512),w
 13154  1A80  3064               	movlw	100
 13155  1A81  1903               	skipnz
 13156  1A82  0240               	subwf	_cv_level_time_count^(0+512),w
 13157  1A83  1C03               	skipc
 13158  1A84  0008               	return
 13159  1A85  3004               	movlw	4
 13160                           
 13161                           ;task.c: 1669: {
 13162                           ;task.c: 1670: cv_level_time_count=0x00;
 13163  1A86  01C0               	clrf	_cv_level_time_count^(0+512)
 13164  1A87  01C1               	clrf	(_cv_level_time_count+1)^(0+512)
 13165                           
 13166                           ;task.c: 1672: charge_index=0x04;
 13167  1A88  0021               	movlb	1	; select bank1
 13168  1A89  00B3               	movwf	_charge_index^(0+128)
 13169                           
 13170                           ;task.c: 1674: PWM = buck_pwm_value;
 13171  1A8A  2783  3199         	fcall	PL150	;call to abstracted procedure
 13172  1A8C  2346  3199         	fcall	___lwtofl
 13173  1A8E  276B               	fcall	PL132	;call to abstracted procedure
 13174  1A8F  0008               	return
 13175  1A90                     l18896:	
 13176                           
 13177                           ;task.c: 1677: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index==0x
      +                          04) )
 13178  1A90  31B4  247D  3199   	fcall	PL92	;call to abstracted procedure
 13179  1A93  2346               	fcall	___lwtofl
 13180  1A94  31B3  2393  3199   	fcall	PL16	;call to abstracted procedure
 13181  1A97  2730  3199         	fcall	PL40	;call to abstracted procedure
 13182  1A99  2658  3199         	fcall	___flge
 13183  1A9B  1803               	btfsc	3,0
 13184  1A9C  2A48               	goto	l18878
 13185  1A9D  0021               	movlb	1	; select bank1
 13186  1A9E  0833               	movf	_charge_index^(0+128),w
 13187  1A9F  3A04               	xorlw	4
 13188  1AA0  1D03               	skipz
 13189  1AA1  2A48               	goto	l18878
 13190                           
 13191                           ;task.c: 1678: {
 13192                           ;task.c: 1679: pid_index = 0x02;
 13193  1AA2  3002               	movlw	2
 13194  1AA3  0022               	movlb	2	; select bank2
 13195  1AA4  00C1               	movwf	_pid_index^(0+256)
 13196                           
 13197                           ;task.c: 1681: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
 13198  1AA5  30AC               	movlw	low _PID_CV_charge
 13199  1AA6  0020               	movlb	0	; select bank0
 13200  1AA7  00E6               	movwf	pid_calc@pp
 13201  1AA8  3002               	movlw	high _PID_CV_charge
 13202  1AA9  00E7               	movwf	pid_calc@pp+1
 13203  1AAA  086B               	movf	_battery_voltage_value+1,w
 13204  1AAB  00E9               	movwf	pid_calc@NowPoint+1
 13205  1AAC  086A               	movf	_battery_voltage_value,w
 13206  1AAD  00E8               	movwf	pid_calc@NowPoint
 13207  1AAE  235A  3199         	fcall	_pid_calc
 13208  1AB0  0869               	movf	?_pid_calc+3,w
 13209  1AB1  0025               	movlb	5	; select bank5
 13210  1AB2  00A3               	movwf	(_PWM_I+3)^(0+640)
 13211  1AB3  0020               	movlb	0	; select bank0
 13212  1AB4  0868               	movf	?_pid_calc+2,w
 13213  1AB5  0025               	movlb	5	; select bank5
 13214  1AB6  00A2               	movwf	(_PWM_I+2)^(0+640)
 13215  1AB7  0020               	movlb	0	; select bank0
 13216  1AB8  0867               	movf	?_pid_calc+1,w
 13217  1AB9  0025               	movlb	5	; select bank5
 13218  1ABA  00A1               	movwf	(_PWM_I+1)^(0+640)
 13219  1ABB  0020               	movlb	0	; select bank0
 13220  1ABC  0866               	movf	?_pid_calc,w
 13221  1ABD  0025               	movlb	5	; select bank5
 13222  1ABE  00A0               	movwf	_PWM_I^(0+640)
 13223                           
 13224                           ;task.c: 1683: PWM = PWM+PWM_I;
 13225  1ABF  0823               	movf	(_PWM_I+3)^(0+640),w
 13226  1AC0  0020               	movlb	0	; select bank0
 13227  1AC1  00CA               	movwf	___fladd@f1+3
 13228  1AC2  0025               	movlb	5	; select bank5
 13229  1AC3  0822               	movf	(_PWM_I+2)^(0+640),w
 13230  1AC4  0020               	movlb	0	; select bank0
 13231  1AC5  00C9               	movwf	___fladd@f1+2
 13232  1AC6  0025               	movlb	5	; select bank5
 13233  1AC7  0821               	movf	(_PWM_I+1)^(0+640),w
 13234  1AC8  0020               	movlb	0	; select bank0
 13235  1AC9  00C8               	movwf	___fladd@f1+1
 13236  1ACA  0025               	movlb	5	; select bank5
 13237  1ACB  0820               	movf	_PWM_I^(0+640),w
 13238  1ACC  0020               	movlb	0	; select bank0
 13239  1ACD  00C7               	movwf	___fladd@f1
 13240  1ACE  0021               	movlb	1	; select bank1
 13241  1ACF  0823               	movf	(_PWM+3)^(0+128),w
 13242  1AD0  0020               	movlb	0	; select bank0
 13243  1AD1  00CE               	movwf	___fladd@f2+3
 13244  1AD2  0021               	movlb	1	; select bank1
 13245  1AD3  0822               	movf	(_PWM+2)^(0+128),w
 13246  1AD4  0020               	movlb	0	; select bank0
 13247  1AD5  00CD               	movwf	___fladd@f2+2
 13248  1AD6  0021               	movlb	1	; select bank1
 13249  1AD7  0821               	movf	(_PWM+1)^(0+128),w
 13250  1AD8  0020               	movlb	0	; select bank0
 13251  1AD9  00CC               	movwf	___fladd@f2+1
 13252  1ADA  0021               	movlb	1	; select bank1
 13253  1ADB  0820               	movf	_PWM^(0+128),w
 13254  1ADC  0020               	movlb	0	; select bank0
 13255  1ADD  00CB               	movwf	___fladd@f2
 13256  1ADE  318C  24C6  3199   	fcall	___fladd
 13257  1AE1  084A               	movf	?___fladd+3,w
 13258  1AE2  0021               	movlb	1	; select bank1
 13259  1AE3  00A3               	movwf	(_PWM+3)^(0+128)
 13260  1AE4  0020               	movlb	0	; select bank0
 13261  1AE5  0849               	movf	?___fladd+2,w
 13262  1AE6  0021               	movlb	1	; select bank1
 13263  1AE7  00A2               	movwf	(_PWM+2)^(0+128)
 13264  1AE8  0020               	movlb	0	; select bank0
 13265  1AE9  0848               	movf	?___fladd+1,w
 13266  1AEA  0021               	movlb	1	; select bank1
 13267  1AEB  00A1               	movwf	(_PWM+1)^(0+128)
 13268  1AEC  0020               	movlb	0	; select bank0
 13269  1AED  0847               	movf	?___fladd,w
 13270  1AEE  0021               	movlb	1	; select bank1
 13271  1AEF  00A0               	movwf	_PWM^(0+128)
 13272                           
 13273                           ;task.c: 1685: if( PWM>=900)
 13274  1AF0  0823               	movf	(_PWM+3)^(0+128),w
 13275  1AF1  0020               	movlb	0	; select bank0
 13276  1AF2  00DD               	movwf	___flge@ff1+3
 13277  1AF3  0021               	movlb	1	; select bank1
 13278  1AF4  0822               	movf	(_PWM+2)^(0+128),w
 13279  1AF5  0020               	movlb	0	; select bank0
 13280  1AF6  00DC               	movwf	___flge@ff1+2
 13281  1AF7  0021               	movlb	1	; select bank1
 13282  1AF8  0821               	movf	(_PWM+1)^(0+128),w
 13283  1AF9  0020               	movlb	0	; select bank0
 13284  1AFA  00DB               	movwf	___flge@ff1+1
 13285  1AFB  0021               	movlb	1	; select bank1
 13286  1AFC  0820               	movf	_PWM^(0+128),w
 13287  1AFD  0020               	movlb	0	; select bank0
 13288  1AFE  00DA               	movwf	___flge@ff1
 13289  1AFF  3044               	movlw	68
 13290  1B00  00E1               	movwf	___flge@ff2+3
 13291  1B01  3061               	movlw	97
 13292  1B02  00E0               	movwf	___flge@ff2+2
 13293  1B03  01DF               	clrf	___flge@ff2+1
 13294  1B04  01DE               	clrf	___flge@ff2
 13295  1B05  2658  3199         	fcall	___flge
 13296  1B07  1C03               	btfss	3,0
 13297  1B08  2B0E               	goto	l18910
 13298                           
 13299                           ;task.c: 1686: {
 13300                           ;task.c: 1687: PWM=900;
 13301  1B09  3044               	movlw	68
 13302  1B0A  0021               	movlb	1	; select bank1
 13303  1B0B  00A3               	movwf	(_PWM+3)^(0+128)
 13304  1B0C  3061               	movlw	97
 13305  1B0D  2B2C               	goto	L60
 13306  1B0E                     l18910:	
 13307                           ;task.c: 1688: }
 13308                           
 13309                           
 13310                           ;task.c: 1689: else if(PWM<=50)
 13311  1B0E  3042               	movlw	66
 13312  1B0F  00DD               	movwf	___flge@ff1+3
 13313  1B10  3048               	movlw	72
 13314  1B11  00DC               	movwf	___flge@ff1+2
 13315  1B12  01DB               	clrf	___flge@ff1+1
 13316  1B13  01DA               	clrf	___flge@ff1
 13317  1B14  0021               	movlb	1	; select bank1
 13318  1B15  0823               	movf	(_PWM+3)^(0+128),w
 13319  1B16  0020               	movlb	0	; select bank0
 13320  1B17  00E1               	movwf	___flge@ff2+3
 13321  1B18  0021               	movlb	1	; select bank1
 13322  1B19  0822               	movf	(_PWM+2)^(0+128),w
 13323  1B1A  0020               	movlb	0	; select bank0
 13324  1B1B  00E0               	movwf	___flge@ff2+2
 13325  1B1C  0021               	movlb	1	; select bank1
 13326  1B1D  0821               	movf	(_PWM+1)^(0+128),w
 13327  1B1E  0020               	movlb	0	; select bank0
 13328  1B1F  00DF               	movwf	___flge@ff2+1
 13329  1B20  0021               	movlb	1	; select bank1
 13330  1B21  0820               	movf	_PWM^(0+128),w
 13331  1B22  0020               	movlb	0	; select bank0
 13332  1B23  00DE               	movwf	___flge@ff2
 13333  1B24  2658  3199         	fcall	___flge
 13334  1B26  1C03               	btfss	3,0
 13335  1B27  2B2F               	goto	l18914
 13336                           
 13337                           ;task.c: 1690: {
 13338                           ;task.c: 1691: PWM=50;
 13339  1B28  3042               	movlw	66
 13340  1B29  0021               	movlb	1	; select bank1
 13341  1B2A  00A3               	movwf	(_PWM+3)^(0+128)
 13342  1B2B  3048               	movlw	72
 13343  1B2C                     L60:	
 13344  1B2C  00A2               	movwf	(_PWM+2)^(0+128)
 13345  1B2D  01A1               	clrf	(_PWM+1)^(0+128)
 13346  1B2E  01A0               	clrf	_PWM^(0+128)
 13347  1B2F                     l18914:	
 13348                           
 13349                           ;task.c: 1692: }
 13350                           ;task.c: 1693: buck_pwm_value = (unsigned int)PWM;
 13351  1B2F  0021               	movlb	1	; select bank1
 13352  1B30  0823               	movf	(_PWM+3)^(0+128),w
 13353  1B31  0020               	movlb	0	; select bank0
 13354  1B32  00DD               	movwf	___fltol@f1+3
 13355  1B33  0021               	movlb	1	; select bank1
 13356  1B34  0822               	movf	(_PWM+2)^(0+128),w
 13357  1B35  0020               	movlb	0	; select bank0
 13358  1B36  00DC               	movwf	___fltol@f1+2
 13359  1B37  0021               	movlb	1	; select bank1
 13360  1B38  0821               	movf	(_PWM+1)^(0+128),w
 13361  1B39  0020               	movlb	0	; select bank0
 13362  1B3A  00DB               	movwf	___fltol@f1+1
 13363  1B3B  0021               	movlb	1	; select bank1
 13364  1B3C  0820               	movf	_PWM^(0+128),w
 13365  1B3D  0020               	movlb	0	; select bank0
 13366  1B3E  00DA               	movwf	___fltol@f1
 13367  1B3F  2698  3199         	fcall	___fltol
 13368  1B41  279B  3199         	fcall	PL170	;call to abstracted procedure
 13369                           
 13370                           ;task.c: 1695: Set_Buck_Pwm_Duty(buck_pwm_value);
 13371  1B43  277B               	fcall	PL138	;call to abstracted procedure
 13372  1B44  318B  2BBA         	ljmp	l17066
 13373  1B46                     __end_of_Mppt_Charge:	
 13374                           ;task.c: 1696: }
 13375                           
 13376  1B46                     __ptext20:	
 13377 ;; *************** function ___lwtofl *****************
 13378 ;; Defined at:
 13379 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtofl.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  c               2   16[BANK0 ] unsigned int 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  4   16[BANK0 ] unsigned int 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0, pclath, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 1F/0
 13390 ;;		On exit  : 1F/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;Total ram usage:        4 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:    3
 13400 ;; This function calls:
 13401 ;;		___flpack
 13402 ;; This function is called by:
 13403 ;;		_auto_system
 13404 ;;		_handle_ad_loop
 13405 ;;		_Mppt_Charge
 13406 ;;		_handle_uart_rx_buf
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           
 13411                           ;psect for function ___lwtofl
 13412  1B46                     ___lwtofl:	
 13413                           
 13414                           ;incstack = 0
 13415                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
 13416  1B46  0830               	movf	___lwtofl@c,w
 13417  1B47  00A3               	movwf	___flpack@arg
 13418  1B48  0831               	movf	___lwtofl@c+1,w
 13419  1B49  00A4               	movwf	___flpack@arg+1
 13420  1B4A  3096               	movlw	150
 13421  1B4B  01A5               	clrf	___flpack@arg+2
 13422  1B4C  01A6               	clrf	___flpack@arg+3
 13423  1B4D  00A7               	movwf	___flpack@exp
 13424  1B4E  01A8               	clrf	___flpack@sign
 13425  1B4F  318E  2675         	fcall	___flpack
 13426  1B51  0826               	movf	?___flpack+3,w
 13427  1B52  00B3               	movwf	?___lwtofl+3
 13428  1B53  0825               	movf	?___flpack+2,w
 13429  1B54  00B2               	movwf	?___lwtofl+2
 13430  1B55  0824               	movf	?___flpack+1,w
 13431  1B56  00B1               	movwf	?___lwtofl+1
 13432  1B57  0823               	movf	?___flpack,w
 13433  1B58  00B0               	movwf	?___lwtofl
 13434  1B59  0008               	return
 13435  1B5A                     __end_of___lwtofl:	
 13436  1B5A                     __ptext16:	
 13437 ;; *************** function _pid_calc *****************
 13438 ;; Defined at:
 13439 ;;		line 24 in file "D:\MCUProject\ZH-SL-F60\src\PID.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  pp              2   70[BANK0 ] PTR struct PID_VAR
 13442 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), 
 13443 ;;  NowPoint        2   72[BANK0 ] int 
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;  PWM_var         4   24[BANK1 ] float 
 13446 ;;  Error           4   20[BANK1 ] float 
 13447 ;;  dk              4   16[BANK1 ] float 
 13448 ;;  dError          4    4[BANK1 ] float 
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  4   70[BANK0 ] float 
 13451 ;; Registers used:
 13452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13453 ;; Tracked objects:
 13454 ;;		On entry : 1F/0
 13455 ;;		On exit  : 1F/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;      Totals:         0       4      28       0       0       0       0       0       0       0       0       0       
      +0       0
 13462 ;;Total ram usage:       32 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; Hardware stack levels required when called:    5
 13465 ;; This function calls:
 13466 ;;		___awtofl
 13467 ;;		___fladd
 13468 ;;		___flge
 13469 ;;		___flmul
 13470 ;;		___flsub
 13471 ;; This function is called by:
 13472 ;;		_handle_ad_loop
 13473 ;;		_Mppt_Charge
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           
 13478                           ;psect for function _pid_calc
 13479  1B5A                     _pid_calc:	
 13480                           
 13481                           ;PID.c: 26: float PWM_var;
 13482                           ;PID.c: 28: float dError, Error;
 13483                           ;PID.c: 30: float dk;
 13484                           ;PID.c: 32: dk=5.0;
 13485                           
 13486                           ;incstack = 0
 13487                           ; Regs used in _pid_calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13488  1B5A  3040               	movlw	64
 13489  1B5B  0021               	movlb	1	; select bank1
 13490  1B5C  00D3               	movwf	(pid_calc@dk+3)^(0+128)
 13491  1B5D  30A0               	movlw	160
 13492  1B5E  00D2               	movwf	(pid_calc@dk+2)^(0+128)
 13493  1B5F  01D1               	clrf	(pid_calc@dk+1)^(0+128)
 13494  1B60  01D0               	clrf	pid_calc@dk^(0+128)
 13495                           
 13496                           ;PID.c: 34: Error = pp->SetPoint - NowPoint;
 13497  1B61  0020               	movlb	0	; select bank0
 13498  1B62  0869               	movf	pid_calc@NowPoint+1,w
 13499  1B63  00AE               	movwf	___awtofl@c+1
 13500  1B64  0868               	movf	pid_calc@NowPoint,w
 13501  1B65  00AD               	movwf	___awtofl@c
 13502  1B66  31A7  2751  3199   	fcall	___awtofl
 13503  1B69  0830               	movf	?___awtofl+3,w
 13504  1B6A  00D9               	movwf	___flsub@f2+3
 13505  1B6B  082F               	movf	?___awtofl+2,w
 13506  1B6C  00D8               	movwf	___flsub@f2+2
 13507  1B6D  082E               	movf	?___awtofl+1,w
 13508  1B6E  00D7               	movwf	___flsub@f2+1
 13509  1B6F  082D               	movf	?___awtofl,w
 13510  1B70  00D6               	movwf	___flsub@f2
 13511  1B71  0866               	movf	pid_calc@pp,w
 13512  1B72  0086               	movwf	6
 13513  1B73  0867               	movf	pid_calc@pp+1,w
 13514  1B74  0087               	movwf	7
 13515  1B75  27CE  3199         	fcall	PL194	;call to abstracted procedure
 13516  1B77  26DF  3199         	fcall	___flsub
 13517  1B79  0859               	movf	?___flsub+3,w
 13518  1B7A  0021               	movlb	1	; select bank1
 13519  1B7B  00D7               	movwf	(pid_calc@Error+3)^(0+128)
 13520  1B7C  0020               	movlb	0	; select bank0
 13521  1B7D  0858               	movf	?___flsub+2,w
 13522  1B7E  0021               	movlb	1	; select bank1
 13523  1B7F  00D6               	movwf	(pid_calc@Error+2)^(0+128)
 13524  1B80  0020               	movlb	0	; select bank0
 13525  1B81  0857               	movf	?___flsub+1,w
 13526  1B82  0021               	movlb	1	; select bank1
 13527  1B83  00D5               	movwf	(pid_calc@Error+1)^(0+128)
 13528  1B84  0020               	movlb	0	; select bank0
 13529  1B85  0856               	movf	?___flsub,w
 13530  1B86  0021               	movlb	1	; select bank1
 13531  1B87  00D4               	movwf	pid_calc@Error^(0+128)
 13532                           
 13533                           ;PID.c: 36: if(limit_power_pid_flag==0x01)
 13534  1B88  0023               	movlb	3	; select bank3
 13535  1B89  0B3B               	decfsz	_limit_power_pid_flag^(0+384),w
 13536  1B8A  2BB4               	goto	l18656
 13537                           
 13538                           ;PID.c: 37: {
 13539                           ;PID.c: 38: if((Error<=2)&&(Error>=-2))
 13540  1B8B  3040               	movlw	64
 13541  1B8C  0020               	movlb	0	; select bank0
 13542  1B8D  00DD               	movwf	___flge@ff1+3
 13543  1B8E  01DC               	clrf	___flge@ff1+2
 13544  1B8F  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13545  1B91  2658  3199         	fcall	___flge
 13546  1B93  1C03               	btfss	3,0
 13547  1B94  2B9F               	goto	l18648
 13548  1B95  0021               	movlb	1	; select bank1
 13549  1B96  270F  3199         	fcall	PL10	;call to abstracted procedure
 13550  1B98  30C0               	movlw	192
 13551  1B99  27F0  3199         	fcall	PL228	;call to abstracted procedure
 13552  1B9B  2658  3199         	fcall	___flge
 13553  1B9D  1803               	btfsc	3,0
 13554  1B9E  2BF6               	goto	l18680
 13555  1B9F                     l18648:	
 13556                           ;PID.c: 41: }
 13557                           
 13558                           ;PID.c: 39: {
 13559                           ;PID.c: 40: Error=0;
 13560                           
 13561                           
 13562                           ;PID.c: 42: else if(Error>=4)
 13563  1B9F  0021               	movlb	1	; select bank1
 13564  1BA0  270F  3199         	fcall	PL10	;call to abstracted procedure
 13565  1BA2  3040               	movlw	64
 13566  1BA3  27DD  3199         	fcall	PL214	;call to abstracted procedure
 13567  1BA5  2658  3199         	fcall	___flge
 13568  1BA7  1803               	btfsc	3,0
 13569  1BA8  2BDA               	goto	l18672
 13570                           
 13571                           ;PID.c: 46: else if(Error<=-4)
 13572                           
 13573                           ;PID.c: 45: }
 13574                           
 13575                           ;PID.c: 43: {
 13576                           ;PID.c: 44: dk=200.0;
 13577  1BA9  30C0               	movlw	192
 13578  1BAA  00DD               	movwf	___flge@ff1+3
 13579  1BAB  3080               	movlw	128
 13580  1BAC  00DC               	movwf	___flge@ff1+2
 13581  1BAD  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13582  1BAF  2658  3199         	fcall	___flge
 13583  1BB1  1C03               	btfss	3,0
 13584  1BB2  2C15               	goto	l18688
 13585  1BB3  2BDA               	goto	l18672
 13586  1BB4                     l18656:	
 13587                           ;PID.c: 49: }
 13588                           ;PID.c: 50: }
 13589                           
 13590                           ;PID.c: 47: {
 13591                           ;PID.c: 48: dk=200.0;
 13592                           
 13593                           
 13594                           ;PID.c: 51: else
 13595                           ;PID.c: 52: {
 13596                           ;PID.c: 53: if(pid_index==0x01)
 13597  1BB4  0022               	movlb	2	; select bank2
 13598  1BB5  0B41               	decfsz	_pid_index^(0+256),w
 13599  1BB6  2BDF               	goto	l18674
 13600                           
 13601                           ;PID.c: 54: {
 13602                           ;PID.c: 56: if((Error<=1)&&(Error>=-1))
 13603  1BB7  303F               	movlw	63
 13604  1BB8  2766  3199         	fcall	PL80	;call to abstracted procedure
 13605  1BBA  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13606  1BBC  2658  3199         	fcall	___flge
 13607  1BBE  1C03               	btfss	3,0
 13608  1BBF  2BCA               	goto	l18664
 13609  1BC0  0021               	movlb	1	; select bank1
 13610  1BC1  270F  3199         	fcall	PL10	;call to abstracted procedure
 13611  1BC3  30BF               	movlw	191
 13612  1BC4  27DD  3199         	fcall	PL214	;call to abstracted procedure
 13613  1BC6  2658  3199         	fcall	___flge
 13614  1BC8  1803               	btfsc	3,0
 13615  1BC9  2BF6               	goto	l18680
 13616  1BCA                     l18664:	
 13617                           ;PID.c: 59: }
 13618                           
 13619                           ;PID.c: 57: {
 13620                           ;PID.c: 58: Error=0;
 13621                           
 13622                           
 13623                           ;PID.c: 60: else if(Error>=2)
 13624  1BCA  0021               	movlb	1	; select bank1
 13625  1BCB  270F  3199         	fcall	PL10	;call to abstracted procedure
 13626  1BCD  27C8  3199         	fcall	PL190	;call to abstracted procedure
 13627  1BCF  2658  3199         	fcall	___flge
 13628  1BD1  1803               	btfsc	3,0
 13629  1BD2  2BDA               	goto	l18672
 13630                           
 13631                           ;PID.c: 64: else if(Error<=-2)
 13632                           
 13633                           ;PID.c: 63: }
 13634                           
 13635                           ;PID.c: 61: {
 13636                           ;PID.c: 62: dk=200.0;
 13637  1BD3  30C0               	movlw	192
 13638  1BD4  00DD               	movwf	___flge@ff1+3
 13639  1BD5  01DC               	clrf	___flge@ff1+2
 13640  1BD6  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13641  1BD8  2658  3199         	fcall	___flge
 13642  1BDA                     l18672:	
 13643                           ;PID.c: 67: }
 13644                           
 13645                           ;PID.c: 65: {
 13646                           ;PID.c: 66: dk=200.0;
 13647                           
 13648                           
 13649                           ;PID.c: 68: else
 13650                           ;PID.c: 69: {
 13651                           ;PID.c: 70: dk=200.0;
 13652  1BDA  3043               	movlw	67
 13653  1BDB  0021               	movlb	1	; select bank1
 13654  1BDC  00D3               	movwf	(pid_calc@dk+3)^(0+128)
 13655  1BDD  3048               	movlw	72
 13656  1BDE  2C12               	goto	L66
 13657  1BDF                     l18674:	
 13658                           
 13659                           ;PID.c: 74: else if(pid_index==0x02)
 13660  1BDF  0841               	movf	_pid_index^(0+256),w
 13661  1BE0  3A02               	xorlw	2
 13662  1BE1  1D03               	skipz
 13663  1BE2  2C15               	goto	l18688
 13664                           
 13665                           ;PID.c: 75: {
 13666                           ;PID.c: 76: if((Error<=1)&&(Error>=-1))
 13667  1BE3  303F               	movlw	63
 13668  1BE4  2766  3199         	fcall	PL80	;call to abstracted procedure
 13669  1BE6  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13670  1BE8  2658  3199         	fcall	___flge
 13671  1BEA  1C03               	btfss	3,0
 13672  1BEB  2BFC               	goto	l18682
 13673  1BEC  0021               	movlb	1	; select bank1
 13674  1BED  270F  3199         	fcall	PL10	;call to abstracted procedure
 13675  1BEF  30BF               	movlw	191
 13676  1BF0  27DD  3199         	fcall	PL214	;call to abstracted procedure
 13677  1BF2  2658  3199         	fcall	___flge
 13678  1BF4  1C03               	btfss	3,0
 13679  1BF5  2BFC               	goto	l18682
 13680  1BF6                     l18680:	
 13681                           
 13682                           ;PID.c: 77: {
 13683                           ;PID.c: 78: Error=0;
 13684  1BF6  0021               	movlb	1	; select bank1
 13685  1BF7  01D4               	clrf	pid_calc@Error^(0+128)
 13686  1BF8  01D5               	clrf	(pid_calc@Error+1)^(0+128)
 13687  1BF9  01D6               	clrf	(pid_calc@Error+2)^(0+128)
 13688  1BFA  01D7               	clrf	(pid_calc@Error+3)^(0+128)
 13689                           
 13690                           ;PID.c: 79: }
 13691  1BFB  2C15               	goto	l18688
 13692  1BFC                     l18682:	
 13693                           
 13694                           ;PID.c: 80: else if((Error>=2)||(Error<=-2))
 13695  1BFC  0021               	movlb	1	; select bank1
 13696  1BFD  270F  3199         	fcall	PL10	;call to abstracted procedure
 13697  1BFF  27C8  3199         	fcall	PL190	;call to abstracted procedure
 13698  1C01  2658  3199         	fcall	___flge
 13699  1C03  1803               	btfsc	3,0
 13700  1C04  2C0E               	goto	l18686
 13701  1C05  30C0               	movlw	192
 13702  1C06  00DD               	movwf	___flge@ff1+3
 13703  1C07  01DC               	clrf	___flge@ff1+2
 13704  1C08  26FC  3199         	fcall	PL6	;call to abstracted procedure
 13705  1C0A  2658  3199         	fcall	___flge
 13706  1C0C  1C03               	btfss	3,0
 13707  1C0D  2C15               	goto	l18688
 13708  1C0E                     l18686:	
 13709                           
 13710                           ;PID.c: 81: {
 13711                           ;PID.c: 82: dk=100.0;
 13712  1C0E  3042               	movlw	66
 13713  1C0F  0021               	movlb	1	; select bank1
 13714  1C10  00D3               	movwf	(pid_calc@dk+3)^(0+128)
 13715  1C11  30C8               	movlw	200
 13716  1C12                     L66:	
 13717  1C12  00D2               	movwf	(pid_calc@dk+2)^(0+128)
 13718  1C13  01D1               	clrf	(pid_calc@dk+1)^(0+128)
 13719  1C14  01D0               	clrf	pid_calc@dk^(0+128)
 13720  1C15                     l18688:	
 13721                           
 13722                           ;PID.c: 83: }
 13723                           ;PID.c: 84: }
 13724                           ;PID.c: 86: }
 13725                           ;PID.c: 89: pp->SumError += Error;
 13726  1C15  0021               	movlb	1	; select bank1
 13727  1C16  0857               	movf	(pid_calc@Error+3)^(0+128),w
 13728  1C17  0020               	movlb	0	; select bank0
 13729  1C18  00CA               	movwf	___fladd@f1+3
 13730  1C19  0021               	movlb	1	; select bank1
 13731  1C1A  0856               	movf	(pid_calc@Error+2)^(0+128),w
 13732  1C1B  0020               	movlb	0	; select bank0
 13733  1C1C  00C9               	movwf	___fladd@f1+2
 13734  1C1D  0021               	movlb	1	; select bank1
 13735  1C1E  0855               	movf	(pid_calc@Error+1)^(0+128),w
 13736  1C1F  0020               	movlb	0	; select bank0
 13737  1C20  00C8               	movwf	___fladd@f1+1
 13738  1C21  0021               	movlb	1	; select bank1
 13739  1C22  0854               	movf	pid_calc@Error^(0+128),w
 13740  1C23  0020               	movlb	0	; select bank0
 13741  1C24  00C7               	movwf	___fladd@f1
 13742  1C25  2794               	fcall	PL162	;call to abstracted procedure
 13743  1C26  00CB               	movwf	___fladd@f2
 13744  1C27  3F41               	moviw [1]fsr1
 13745  1C28  00CC               	movwf	___fladd@f2+1
 13746  1C29  3F42               	moviw [2]fsr1
 13747  1C2A  00CD               	movwf	___fladd@f2+2
 13748  1C2B  3F43               	moviw [3]fsr1
 13749  1C2C  00CE               	movwf	___fladd@f2+3
 13750  1C2D  318C  24C6  3199   	fcall	___fladd
 13751  1C30  0866               	movf	pid_calc@pp,w
 13752  1C31  0086               	movwf	6
 13753  1C32  0867               	movf	pid_calc@pp+1,w
 13754  1C33  0087               	movwf	7
 13755  1C34  3158               	addfsr 1,24
 13756  1C35  0847               	movf	?___fladd,w
 13757  1C36  3FC0               	movwi [0]fsr1
 13758  1C37  0848               	movf	?___fladd+1,w
 13759  1C38  3FC1               	movwi [1]fsr1
 13760  1C39  0849               	movf	?___fladd+2,w
 13761  1C3A  3FC2               	movwi [2]fsr1
 13762  1C3B  084A               	movf	?___fladd+3,w
 13763  1C3C  3FC3               	movwi [3]fsr1
 13764                           
 13765                           ;PID.c: 93: if((pp->SumError)>=2) pp->SumError= 2;
 13766  1C3D  2794  3199         	fcall	PL162	;call to abstracted procedure
 13767  1C3F  00DA               	movwf	___flge@ff1
 13768  1C40  3F41               	moviw [1]fsr1
 13769  1C41  00DB               	movwf	___flge@ff1+1
 13770  1C42  3F42               	moviw [2]fsr1
 13771  1C43  00DC               	movwf	___flge@ff1+2
 13772  1C44  3F43               	moviw [3]fsr1
 13773  1C45  00DD               	movwf	___flge@ff1+3
 13774  1C46  27C8  3199         	fcall	PL190	;call to abstracted procedure
 13775  1C48  2658  3199         	fcall	___flge
 13776  1C4A  1C03               	btfss	3,0
 13777  1C4B  2C58               	goto	l18694
 13778  1C4C  0866               	movf	pid_calc@pp,w
 13779  1C4D  0086               	movwf	6
 13780  1C4E  0867               	movf	pid_calc@pp+1,w
 13781  1C4F  0087               	movwf	7
 13782  1C50  3000               	movlw	0
 13783  1C51  3158               	addfsr 1,24
 13784  1C52  3FC0               	movwi [0]fsr1
 13785  1C53  3FC1               	movwi [1]fsr1
 13786  1C54  3FC2               	movwi [2]fsr1
 13787  1C55  3040               	movlw	64
 13788  1C56  3FC3               	movwi [3]fsr1
 13789  1C57  2C73               	goto	l18698
 13790  1C58                     l18694:	
 13791                           
 13792                           ;PID.c: 94: else if((pp->SumError)<=-2) pp->SumError= -2;
 13793  1C58  30C0               	movlw	192
 13794  1C59  00DD               	movwf	___flge@ff1+3
 13795  1C5A  01DC               	clrf	___flge@ff1+2
 13796  1C5B  01DB               	clrf	___flge@ff1+1
 13797  1C5C  01DA               	clrf	___flge@ff1
 13798  1C5D  2794  3199         	fcall	PL162	;call to abstracted procedure
 13799  1C5F  00DE               	movwf	___flge@ff2
 13800  1C60  3F41               	moviw [1]fsr1
 13801  1C61  00DF               	movwf	___flge@ff2+1
 13802  1C62  3F42               	moviw [2]fsr1
 13803  1C63  00E0               	movwf	___flge@ff2+2
 13804  1C64  3F43               	moviw [3]fsr1
 13805  1C65  00E1               	movwf	___flge@ff2+3
 13806  1C66  2658  3199         	fcall	___flge
 13807  1C68  27FB  3199         	fcall	PL266	;call to abstracted procedure
 13808  1C6A  1C03               	btfss	3,0
 13809  1C6B  2C75               	goto	L86
 13810  1C6C  3000               	movlw	0
 13811  1C6D  3158               	addfsr 1,24
 13812  1C6E  3FC0               	movwi [0]fsr1
 13813  1C6F  3FC1               	movwi [1]fsr1
 13814  1C70  3FC2               	movwi [2]fsr1
 13815  1C71  30C0               	movlw	192
 13816  1C72  3FC3               	movwi [3]fsr1
 13817  1C73                     l18698:	
 13818                           
 13819                           ;PID.c: 96: dError = pp->LastError - pp->PrevError;
 13820  1C73  27FB  3199         	fcall	PL266	;call to abstracted procedure
 13821  1C75                     L86:	
 13822  1C75  3154               	addfsr 1,20
 13823  1C76  3F40               	moviw [0]fsr1
 13824  1C77  00D6               	movwf	___flsub@f2
 13825  1C78  3F41               	moviw [1]fsr1
 13826  1C79  00D7               	movwf	___flsub@f2+1
 13827  1C7A  3F42               	moviw [2]fsr1
 13828  1C7B  00D8               	movwf	___flsub@f2+2
 13829  1C7C  3F43               	moviw [3]fsr1
 13830  1C7D  00D9               	movwf	___flsub@f2+3
 13831  1C7E  0866               	movf	pid_calc@pp,w
 13832  1C7F  0086               	movwf	6
 13833  1C80  0867               	movf	pid_calc@pp+1,w
 13834  1C81  0087               	movwf	7
 13835  1C82  3150               	addfsr 1,16
 13836  1C83  27CE  3199         	fcall	PL194	;call to abstracted procedure
 13837  1C85  26DF  3199         	fcall	___flsub
 13838  1C87  0859               	movf	?___flsub+3,w
 13839  1C88  0021               	movlb	1	; select bank1
 13840  1C89  00C7               	movwf	(pid_calc@dError+3)^(0+128)
 13841  1C8A  0020               	movlb	0	; select bank0
 13842  1C8B  0858               	movf	?___flsub+2,w
 13843  1C8C  0021               	movlb	1	; select bank1
 13844  1C8D  00C6               	movwf	(pid_calc@dError+2)^(0+128)
 13845  1C8E  0020               	movlb	0	; select bank0
 13846  1C8F  0857               	movf	?___flsub+1,w
 13847  1C90  0021               	movlb	1	; select bank1
 13848  1C91  00C5               	movwf	(pid_calc@dError+1)^(0+128)
 13849  1C92  0020               	movlb	0	; select bank0
 13850  1C93  0856               	movf	?___flsub,w
 13851  1C94  0021               	movlb	1	; select bank1
 13852  1C95  00C4               	movwf	pid_calc@dError^(0+128)
 13853                           
 13854                           ;PID.c: 98: pp->PrevError = pp->LastError;
 13855  1C96  27D7  3199         	fcall	PL196	;call to abstracted procedure
 13856  1C98  3150               	addfsr 1,16
 13857  1C99  3F40               	moviw [0]fsr1
 13858  1C9A  0021               	movlb	1	; select bank1
 13859  1C9B  00C0               	movwf	??_pid_calc^(0+128)
 13860  1C9C  3F41               	moviw [1]fsr1
 13861  1C9D  00C1               	movwf	(??_pid_calc^(0+128)+1)
 13862  1C9E  3F42               	moviw [2]fsr1
 13863  1C9F  00C2               	movwf	(??_pid_calc^(0+128)+2)
 13864  1CA0  3F43               	moviw [3]fsr1
 13865  1CA1  00C3               	movwf	(??_pid_calc^(0+128)+3)
 13866  1CA2  27D7  3199         	fcall	PL196	;call to abstracted procedure
 13867  1CA4  3154               	addfsr 1,20
 13868  1CA5  0021               	movlb	1	; select bank1
 13869  1CA6  0840               	movf	??_pid_calc^(0+128),w
 13870  1CA7  3FC0               	movwi [0]fsr1
 13871  1CA8  0841               	movf	(??_pid_calc+1)^(0+128),w
 13872  1CA9  3FC1               	movwi [1]fsr1
 13873  1CAA  0842               	movf	(??_pid_calc+2)^(0+128),w
 13874  1CAB  3FC2               	movwi [2]fsr1
 13875  1CAC  0843               	movf	(??_pid_calc+3)^(0+128),w
 13876  1CAD  3FC3               	movwi [3]fsr1
 13877                           
 13878                           ;PID.c: 100: pp->LastError = Error;
 13879  1CAE  27D7  3199         	fcall	PL196	;call to abstracted procedure
 13880  1CB0  3150               	addfsr 1,16
 13881  1CB1  0021               	movlb	1	; select bank1
 13882  1CB2  0854               	movf	pid_calc@Error^(0+128),w
 13883  1CB3  3FC0               	movwi [0]fsr1
 13884  1CB4  0855               	movf	(pid_calc@Error+1)^(0+128),w
 13885  1CB5  3FC1               	movwi [1]fsr1
 13886  1CB6  0856               	movf	(pid_calc@Error+2)^(0+128),w
 13887  1CB7  3FC2               	movwi [2]fsr1
 13888  1CB8  0857               	movf	(pid_calc@Error+3)^(0+128),w
 13889  1CB9  3FC3               	movwi [3]fsr1
 13890                           
 13891                           ;PID.c: 102: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 13892  1CBA  0020               	movlb	0	; select bank0
 13893  1CBB  00B7               	movwf	___flmul@f1+3
 13894  1CBC  0021               	movlb	1	; select bank1
 13895  1CBD  0856               	movf	(pid_calc@Error+2)^(0+128),w
 13896  1CBE  0020               	movlb	0	; select bank0
 13897  1CBF  00B6               	movwf	___flmul@f1+2
 13898  1CC0  0021               	movlb	1	; select bank1
 13899  1CC1  0855               	movf	(pid_calc@Error+1)^(0+128),w
 13900  1CC2  0020               	movlb	0	; select bank0
 13901  1CC3  00B5               	movwf	___flmul@f1+1
 13902  1CC4  0021               	movlb	1	; select bank1
 13903  1CC5  0854               	movf	pid_calc@Error^(0+128),w
 13904  1CC6  27E9  3199         	fcall	PL226	;call to abstracted procedure
 13905  1CC8  3144               	addfsr 1,4
 13906  1CC9  278B               	fcall	PL156	;call to abstracted procedure
 13907  1CCA  318E  2607  3199   	fcall	___flmul
 13908  1CCD  0837               	movf	?___flmul+3,w
 13909  1CCE  0021               	movlb	1	; select bank1
 13910  1CCF  00CB               	movwf	(_pid_calc$2854+3)^(0+128)
 13911  1CD0  0020               	movlb	0	; select bank0
 13912  1CD1  0836               	movf	?___flmul+2,w
 13913  1CD2  0021               	movlb	1	; select bank1
 13914  1CD3  00CA               	movwf	(_pid_calc$2854+2)^(0+128)
 13915  1CD4  0020               	movlb	0	; select bank0
 13916  1CD5  0835               	movf	?___flmul+1,w
 13917  1CD6  0021               	movlb	1	; select bank1
 13918  1CD7  00C9               	movwf	(_pid_calc$2854+1)^(0+128)
 13919  1CD8  0020               	movlb	0	; select bank0
 13920  1CD9  0834               	movf	?___flmul,w
 13921  1CDA  0021               	movlb	1	; select bank1
 13922  1CDB  00C8               	movwf	_pid_calc$2854^(0+128)
 13923                           
 13924                           ;PID.c: 102: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 13925  1CDC  0020               	movlb	0	; select bank0
 13926  1CDD  2794  3199         	fcall	PL162	;call to abstracted procedure
 13927  1CDF  00B4               	movwf	___flmul@f1
 13928  1CE0  3F41               	moviw [1]fsr1
 13929  1CE1  00B5               	movwf	___flmul@f1+1
 13930  1CE2  3F42               	moviw [2]fsr1
 13931  1CE3  00B6               	movwf	___flmul@f1+2
 13932  1CE4  3F43               	moviw [3]fsr1
 13933  1CE5  00B7               	movwf	___flmul@f1+3
 13934  1CE6  0866               	movf	pid_calc@pp,w
 13935  1CE7  0086               	movwf	6
 13936  1CE8  0867               	movf	pid_calc@pp+1,w
 13937  1CE9  0087               	movwf	7
 13938  1CEA  3148               	addfsr 1,8
 13939  1CEB  278B               	fcall	PL156	;call to abstracted procedure
 13940  1CEC  318E  2607  3199   	fcall	___flmul
 13941  1CEF  27A3               	fcall	PL174	;call to abstracted procedure
 13942  1CF0  0853               	movf	(pid_calc@dk+3)^(0+128),w
 13943  1CF1  0020               	movlb	0	; select bank0
 13944  1CF2  00B7               	movwf	___flmul@f1+3
 13945  1CF3  0021               	movlb	1	; select bank1
 13946  1CF4  0852               	movf	(pid_calc@dk+2)^(0+128),w
 13947  1CF5  0020               	movlb	0	; select bank0
 13948  1CF6  00B6               	movwf	___flmul@f1+2
 13949  1CF7  0021               	movlb	1	; select bank1
 13950  1CF8  0851               	movf	(pid_calc@dk+1)^(0+128),w
 13951  1CF9  0020               	movlb	0	; select bank0
 13952  1CFA  00B5               	movwf	___flmul@f1+1
 13953  1CFB  0021               	movlb	1	; select bank1
 13954  1CFC  0850               	movf	pid_calc@dk^(0+128),w
 13955  1CFD  0020               	movlb	0	; select bank0
 13956  1CFE  00B4               	movwf	___flmul@f1
 13957  1CFF  0021               	movlb	1	; select bank1
 13958  1D00  084B               	movf	(_pid_calc$2854+3)^(0+128),w
 13959  1D01  0020               	movlb	0	; select bank0
 13960  1D02  00BB               	movwf	___flmul@f2+3
 13961  1D03  0021               	movlb	1	; select bank1
 13962  1D04  084A               	movf	(_pid_calc$2854+2)^(0+128),w
 13963  1D05  0020               	movlb	0	; select bank0
 13964  1D06  00BA               	movwf	___flmul@f2+2
 13965  1D07  0021               	movlb	1	; select bank1
 13966  1D08  0849               	movf	(_pid_calc$2854+1)^(0+128),w
 13967  1D09  0020               	movlb	0	; select bank0
 13968  1D0A  00B9               	movwf	___flmul@f2+1
 13969  1D0B  0021               	movlb	1	; select bank1
 13970  1D0C  0848               	movf	_pid_calc$2854^(0+128),w
 13971  1D0D  0020               	movlb	0	; select bank0
 13972  1D0E  00B8               	movwf	___flmul@f2
 13973  1D0F  318E  2607  3199   	fcall	___flmul
 13974  1D12  0837               	movf	?___flmul+3,w
 13975  1D13  00CE               	movwf	___fladd@f2+3
 13976  1D14  0836               	movf	?___flmul+2,w
 13977  1D15  00CD               	movwf	___fladd@f2+2
 13978  1D16  0835               	movf	?___flmul+1,w
 13979  1D17  00CC               	movwf	___fladd@f2+1
 13980  1D18  0834               	movf	?___flmul,w
 13981  1D19  00CB               	movwf	___fladd@f2
 13982  1D1A  318C  24C6  3199   	fcall	___fladd
 13983  1D1D  084A               	movf	?___fladd+3,w
 13984  1D1E  0021               	movlb	1	; select bank1
 13985  1D1F  00CF               	movwf	(_pid_calc$2855+3)^(0+128)
 13986  1D20  0020               	movlb	0	; select bank0
 13987  1D21  0849               	movf	?___fladd+2,w
 13988  1D22  0021               	movlb	1	; select bank1
 13989  1D23  00CE               	movwf	(_pid_calc$2855+2)^(0+128)
 13990  1D24  0020               	movlb	0	; select bank0
 13991  1D25  0848               	movf	?___fladd+1,w
 13992  1D26  0021               	movlb	1	; select bank1
 13993  1D27  00CD               	movwf	(_pid_calc$2855+1)^(0+128)
 13994  1D28  0020               	movlb	0	; select bank0
 13995  1D29  0847               	movf	?___fladd,w
 13996  1D2A  0021               	movlb	1	; select bank1
 13997  1D2B  00CC               	movwf	_pid_calc$2855^(0+128)
 13998                           
 13999                           ;PID.c: 102: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 14000  1D2C  0847               	movf	(pid_calc@dError+3)^(0+128),w
 14001  1D2D  0020               	movlb	0	; select bank0
 14002  1D2E  00B7               	movwf	___flmul@f1+3
 14003  1D2F  0021               	movlb	1	; select bank1
 14004  1D30  0846               	movf	(pid_calc@dError+2)^(0+128),w
 14005  1D31  0020               	movlb	0	; select bank0
 14006  1D32  00B6               	movwf	___flmul@f1+2
 14007  1D33  0021               	movlb	1	; select bank1
 14008  1D34  0845               	movf	(pid_calc@dError+1)^(0+128),w
 14009  1D35  0020               	movlb	0	; select bank0
 14010  1D36  00B5               	movwf	___flmul@f1+1
 14011  1D37  0021               	movlb	1	; select bank1
 14012  1D38  0844               	movf	pid_calc@dError^(0+128),w
 14013  1D39  27E9  3199         	fcall	PL226	;call to abstracted procedure
 14014  1D3B  314C               	addfsr 1,12
 14015  1D3C  278B               	fcall	PL156	;call to abstracted procedure
 14016  1D3D  318E  2607  3199   	fcall	___flmul
 14017  1D40  27A3               	fcall	PL174	;call to abstracted procedure
 14018  1D41  084F               	movf	(_pid_calc$2855+3)^(0+128),w
 14019  1D42  0020               	movlb	0	; select bank0
 14020  1D43  00CE               	movwf	___fladd@f2+3
 14021  1D44  0021               	movlb	1	; select bank1
 14022  1D45  084E               	movf	(_pid_calc$2855+2)^(0+128),w
 14023  1D46  0020               	movlb	0	; select bank0
 14024  1D47  00CD               	movwf	___fladd@f2+2
 14025  1D48  0021               	movlb	1	; select bank1
 14026  1D49  084D               	movf	(_pid_calc$2855+1)^(0+128),w
 14027  1D4A  0020               	movlb	0	; select bank0
 14028  1D4B  00CC               	movwf	___fladd@f2+1
 14029  1D4C  0021               	movlb	1	; select bank1
 14030  1D4D  084C               	movf	_pid_calc$2855^(0+128),w
 14031  1D4E  0020               	movlb	0	; select bank0
 14032  1D4F  00CB               	movwf	___fladd@f2
 14033  1D50  318C  24C6  3199   	fcall	___fladd
 14034  1D53  084A               	movf	?___fladd+3,w
 14035  1D54  0021               	movlb	1	; select bank1
 14036  1D55  00DB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 14037  1D56  0020               	movlb	0	; select bank0
 14038  1D57  0849               	movf	?___fladd+2,w
 14039  1D58  0021               	movlb	1	; select bank1
 14040  1D59  00DA               	movwf	(pid_calc@PWM_var+2)^(0+128)
 14041  1D5A  0020               	movlb	0	; select bank0
 14042  1D5B  0848               	movf	?___fladd+1,w
 14043  1D5C  0021               	movlb	1	; select bank1
 14044  1D5D  00D9               	movwf	(pid_calc@PWM_var+1)^(0+128)
 14045  1D5E  0020               	movlb	0	; select bank0
 14046  1D5F  0847               	movf	?___fladd,w
 14047  1D60  0021               	movlb	1	; select bank1
 14048  1D61  00D8               	movwf	pid_calc@PWM_var^(0+128)
 14049                           
 14050                           ;PID.c: 105: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
 14051  1D62  270F  3199         	fcall	PL10	;call to abstracted procedure
 14052  1D64  3040               	movlw	64
 14053  1D65  00E1               	movwf	___flge@ff2+3
 14054  1D66  00E0               	movwf	___flge@ff2+2
 14055  1D67  01DF               	clrf	___flge@ff2+1
 14056  1D68  01DE               	clrf	___flge@ff2
 14057  1D69  2658  3199         	fcall	___flge
 14058  1D6B  1C03               	btfss	3,0
 14059  1D6C  2D77               	goto	l18714
 14060  1D6D  3040               	movlw	64
 14061  1D6E  00DD               	movwf	___flge@ff1+3
 14062  1D6F  30A0               	movlw	160
 14063  1D70  00DC               	movwf	___flge@ff1+2
 14064  1D71  26FC  3199         	fcall	PL6	;call to abstracted procedure
 14065  1D73  2658  3199         	fcall	___flge
 14066  1D75  1803               	btfsc	3,0
 14067  1D76  2D8B               	goto	l18718
 14068  1D77                     l18714:	
 14069  1D77  30C0               	movlw	192
 14070  1D78  00DD               	movwf	___flge@ff1+3
 14071  1D79  3040               	movlw	64
 14072  1D7A  00DC               	movwf	___flge@ff1+2
 14073  1D7B  26FC  3199         	fcall	PL6	;call to abstracted procedure
 14074  1D7D  2658  3199         	fcall	___flge
 14075  1D7F  1C03               	btfss	3,0
 14076  1D80  2DB7               	goto	l18750
 14077  1D81  0021               	movlb	1	; select bank1
 14078  1D82  270F  3199         	fcall	PL10	;call to abstracted procedure
 14079  1D84  30C0               	movlw	192
 14080  1D85  27E3  3199         	fcall	PL222	;call to abstracted procedure
 14081  1D87  2658  3199         	fcall	___flge
 14082  1D89  1C03               	btfss	3,0
 14083  1D8A  2DB7               	goto	l18750
 14084  1D8B                     l18718:	
 14085                           
 14086                           ;PID.c: 106: {
 14087                           ;PID.c: 107: if(light_mode==0x00)
 14088  1D8B  0021               	movlb	1	; select bank1
 14089  1D8C  08B8               	movf	_light_mode^(0+128),f
 14090  1D8D  1D03               	skipz
 14091  1D8E  2DA1               	goto	l18742
 14092                           
 14093                           ;PID.c: 108: {
 14094                           ;PID.c: 109: if(ho_cnt==0 && mi_cnt==0 && se_cnt<30)
 14095  1D8F  087D               	movf	_ho_cnt+1,w
 14096  1D90  047C               	iorwf	_ho_cnt,w
 14097  1D91  1D03               	skipz
 14098  1D92  2DE2               	goto	l18770
 14099  1D93  0022               	movlb	2	; select bank2
 14100  1D94  0827               	movf	(_mi_cnt+1)^(0+256),w
 14101  1D95  0426               	iorwf	_mi_cnt^(0+256),w
 14102  1D96  1D03               	skipz
 14103  1D97  2DE2               	goto	l18770
 14104  1D98  3000               	movlw	0
 14105  1D99  0023               	movlb	3	; select bank3
 14106  1D9A  0237               	subwf	(_se_cnt+1)^(0+384),w
 14107  1D9B  301E               	movlw	30
 14108  1D9C  1903               	skipnz
 14109  1D9D  0236               	subwf	_se_cnt^(0+384),w
 14110  1D9E  1803               	skipnc
 14111  1D9F  2DE2               	goto	l18770
 14112                           
 14113                           ;PID.c: 110: {
 14114                           ;PID.c: 111: if(PWM_var>=2)PWM_var = 2;
 14115  1DA0  0021               	movlb	1	; select bank1
 14116  1DA1                     l18742:	
 14117                           ;PID.c: 118: }
 14118                           ;PID.c: 119: }
 14119                           
 14120                           ;PID.c: 117: else if(PWM_var <= -0.1)PWM_var = -0.1;
 14121                           
 14122                           ;PID.c: 114: else
 14123                           ;PID.c: 115: {
 14124                           ;PID.c: 116: if(PWM_var>=0.1)PWM_var = 0.1;
 14125                           
 14126                           ;PID.c: 112: else if(PWM_var <= -2)PWM_var = -2;
 14127                           
 14128                           
 14129                           ;PID.c: 120: else
 14130                           ;PID.c: 121: {
 14131                           ;PID.c: 122: if(PWM_var>=2)PWM_var = 2;
 14132  1DA1  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14133  1DA2  2746  3199         	fcall	PL46	;call to abstracted procedure
 14134  1DA4  27C8  3199         	fcall	PL190	;call to abstracted procedure
 14135  1DA6  2658  3199         	fcall	___flge
 14136  1DA8  1C03               	btfss	3,0
 14137  1DA9  2DAC               	goto	l18746
 14138  1DAA  3040               	movlw	64
 14139  1DAB  2E42               	goto	L67
 14140  1DAC                     l18746:	
 14141                           
 14142                           ;PID.c: 123: else if(PWM_var <= -2)PWM_var = -2;
 14143  1DAC  30C0               	movlw	192
 14144  1DAD  2741  3199         	fcall	PL44	;call to abstracted procedure
 14145  1DAF  271F  3199         	fcall	PL38	;call to abstracted procedure
 14146  1DB1  2658  3199         	fcall	___flge
 14147  1DB3  1C03               	btfss	3,0
 14148  1DB4  2E47               	goto	l907
 14149  1DB5  30C0               	movlw	192
 14150  1DB6  2E42               	goto	L67
 14151  1DB7                     l18750:	
 14152                           
 14153                           ;PID.c: 127: else if((Error>5)||(Error<-5))
 14154  1DB7  3040               	movlw	64
 14155  1DB8  00DD               	movwf	___flge@ff1+3
 14156  1DB9  30A0               	movlw	160
 14157  1DBA  00DC               	movwf	___flge@ff1+2
 14158  1DBB  26FC  3199         	fcall	PL6	;call to abstracted procedure
 14159  1DBD  2658  3199         	fcall	___flge
 14160  1DBF  1C03               	btfss	3,0
 14161  1DC0  2DCB               	goto	l18754
 14162  1DC1  0021               	movlb	1	; select bank1
 14163  1DC2  270F  3199         	fcall	PL10	;call to abstracted procedure
 14164  1DC4  30C0               	movlw	192
 14165  1DC5  27E3  3199         	fcall	PL222	;call to abstracted procedure
 14166  1DC7  2658  3199         	fcall	___flge
 14167  1DC9  1803               	btfsc	3,0
 14168  1DCA  2E02               	goto	l18786
 14169  1DCB                     l18754:	
 14170                           
 14171                           ;PID.c: 128: {
 14172                           ;PID.c: 129: if(light_mode==0x00)
 14173  1DCB  0021               	movlb	1	; select bank1
 14174  1DCC  08B8               	movf	_light_mode^(0+128),f
 14175  1DCD  1D03               	skipz
 14176  1DCE  2DE4               	goto	l18778
 14177                           
 14178                           ;PID.c: 130: {
 14179                           ;PID.c: 131: if(ho_cnt==0 && mi_cnt==0 && se_cnt<30)
 14180  1DCF  087D               	movf	_ho_cnt+1,w
 14181  1DD0  047C               	iorwf	_ho_cnt,w
 14182  1DD1  1D03               	skipz
 14183  1DD2  2DE2               	goto	l18770
 14184  1DD3  0022               	movlb	2	; select bank2
 14185  1DD4  0827               	movf	(_mi_cnt+1)^(0+256),w
 14186  1DD5  0426               	iorwf	_mi_cnt^(0+256),w
 14187  1DD6  1D03               	skipz
 14188  1DD7  2DE2               	goto	l18770
 14189  1DD8  3000               	movlw	0
 14190  1DD9  0023               	movlb	3	; select bank3
 14191  1DDA  0237               	subwf	(_se_cnt+1)^(0+384),w
 14192  1DDB  301E               	movlw	30
 14193  1DDC  1903               	skipnz
 14194  1DDD  0236               	subwf	_se_cnt^(0+384),w
 14195  1DDE  1803               	skipnc
 14196  1DDF  2DE2               	goto	l18770
 14197                           
 14198                           ;PID.c: 132: {
 14199                           ;PID.c: 133: if(PWM_var>=5)PWM_var = 5;
 14200  1DE0  0021               	movlb	1	; select bank1
 14201  1DE1  2DE4               	goto	l18778
 14202  1DE2                     l18770:	
 14203                           ;PID.c: 134: else if(PWM_var <= -5)PWM_var = -5;
 14204                           
 14205                           
 14206                           ;PID.c: 136: else
 14207                           ;PID.c: 137: {
 14208                           ;PID.c: 138: if(PWM_var>=0.1)PWM_var = 0.1;
 14209  1DE2  0021               	movlb	1	; select bank1
 14210  1DE3  2E06               	goto	L84
 14211  1DE4                     l18778:	
 14212                           ;PID.c: 139: else if(PWM_var <= -0.1)PWM_var = -0.1;
 14213                           
 14214                           
 14215                           ;PID.c: 142: else
 14216                           ;PID.c: 143: {
 14217                           ;PID.c: 144: if(PWM_var>=5)PWM_var = 5;
 14218  1DE4  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14219  1DE5  2746  3199         	fcall	PL46	;call to abstracted procedure
 14220  1DE7  3040               	movlw	64
 14221  1DE8  27E3  3199         	fcall	PL222	;call to abstracted procedure
 14222  1DEA  2658  3199         	fcall	___flge
 14223  1DEC  1C03               	btfss	3,0
 14224  1DED  2DF0               	goto	l18782
 14225  1DEE  3040               	movlw	64
 14226  1DEF  2DFD               	goto	L77
 14227  1DF0                     l18782:	
 14228                           
 14229                           ;PID.c: 145: else if(PWM_var <= -5)PWM_var = -5;
 14230  1DF0  30C0               	movlw	192
 14231  1DF1  00DD               	movwf	___flge@ff1+3
 14232  1DF2  30A0               	movlw	160
 14233  1DF3  00DC               	movwf	___flge@ff1+2
 14234  1DF4  01DB               	clrf	___flge@ff1+1
 14235  1DF5  01DA               	clrf	___flge@ff1
 14236  1DF6  271F  3199         	fcall	PL38	;call to abstracted procedure
 14237  1DF8  2658  3199         	fcall	___flge
 14238  1DFA  1C03               	btfss	3,0
 14239  1DFB  2E47               	goto	l907
 14240  1DFC  30C0               	movlw	192
 14241  1DFD                     L77:	
 14242  1DFD  0021               	movlb	1	; select bank1
 14243  1DFE  00DB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 14244  1DFF  30A0               	movlw	160
 14245  1E00  00DA               	movwf	(pid_calc@PWM_var+2)^(0+128)
 14246  1E01  2E45               	goto	L69
 14247  1E02                     l18786:	
 14248                           
 14249                           ;PID.c: 148: else
 14250                           ;PID.c: 149: {
 14251                           ;PID.c: 150: if(have_person1_flag)
 14252  1E02  0021               	movlb	1	; select bank1
 14253                           
 14254                           ;PID.c: 164: else
 14255                           ;PID.c: 165: {
 14256                           ;PID.c: 166: if(light_mode==0x00)
 14257                           
 14258                           ;PID.c: 160: else if(PWM_var <= -0.5)PWM_var = -0.5;
 14259                           
 14260                           ;PID.c: 157: else
 14261                           ;PID.c: 158: {
 14262                           ;PID.c: 159: if(PWM_var>=0.5)PWM_var = 0.5;
 14263                           
 14264                           ;PID.c: 155: else if(PWM_var <= -0.1)PWM_var = -0.1;
 14265                           
 14266                           ;PID.c: 153: {
 14267                           ;PID.c: 154: if(PWM_var>=0.1)PWM_var = 0.1;
 14268                           
 14269                           ;PID.c: 151: {
 14270                           ;PID.c: 152: if(light_mode==0x00)
 14271  1E03  08B8               	movf	_light_mode^(0+128),f
 14272  1E04  1D03               	skipz
 14273  1E05  2E2C               	goto	l18816
 14274  1E06                     L84:	
 14275                           
 14276                           ;PID.c: 167: {
 14277                           ;PID.c: 168: if(PWM_var>=0.1)PWM_var = 0.1;
 14278  1E06  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14279  1E07  2746  3199         	fcall	PL46	;call to abstracted procedure
 14280  1E09  303D               	movlw	61
 14281  1E0A  00E1               	movwf	___flge@ff2+3
 14282  1E0B  30CC               	movlw	204
 14283  1E0C  00E0               	movwf	___flge@ff2+2
 14284  1E0D  00DF               	movwf	___flge@ff2+1
 14285  1E0E  30CD               	movlw	205
 14286  1E0F  00DE               	movwf	___flge@ff2
 14287  1E10  2658  3199         	fcall	___flge
 14288  1E12  1C03               	btfss	3,0
 14289  1E13  2E16               	goto	l18812
 14290  1E14  303D               	movlw	61
 14291  1E15  2E24               	goto	L74
 14292  1E16                     l18812:	
 14293                           
 14294                           ;PID.c: 169: else if(PWM_var <= -0.1)PWM_var = -0.1;
 14295  1E16  30BD               	movlw	189
 14296  1E17  00DD               	movwf	___flge@ff1+3
 14297  1E18  30CC               	movlw	204
 14298  1E19  00DC               	movwf	___flge@ff1+2
 14299  1E1A  00DB               	movwf	___flge@ff1+1
 14300  1E1B  30CD               	movlw	205
 14301  1E1C  00DA               	movwf	___flge@ff1
 14302  1E1D  271F  3199         	fcall	PL38	;call to abstracted procedure
 14303  1E1F  2658  3199         	fcall	___flge
 14304  1E21  1C03               	btfss	3,0
 14305  1E22  2E47               	goto	l907
 14306  1E23  30BD               	movlw	189
 14307  1E24                     L74:	
 14308  1E24  0021               	movlb	1	; select bank1
 14309  1E25  00DB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 14310  1E26  30CC               	movlw	204
 14311  1E27  00DA               	movwf	(pid_calc@PWM_var+2)^(0+128)
 14312  1E28  00D9               	movwf	(pid_calc@PWM_var+1)^(0+128)
 14313  1E29  30CD               	movlw	205
 14314  1E2A  00D8               	movwf	pid_calc@PWM_var^(0+128)
 14315  1E2B  2E47               	goto	l907
 14316  1E2C                     l18816:	
 14317                           
 14318                           ;PID.c: 171: else
 14319                           ;PID.c: 172: {
 14320                           ;PID.c: 173: if(PWM_var>=0.5)PWM_var = 0.5;
 14321  1E2C  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14322  1E2D  2746  3199         	fcall	PL46	;call to abstracted procedure
 14323  1E2F  303F               	movlw	63
 14324  1E30  27F0  3199         	fcall	PL228	;call to abstracted procedure
 14325  1E32  2658  3199         	fcall	___flge
 14326  1E34  1C03               	btfss	3,0
 14327  1E35  2E38               	goto	l18820
 14328  1E36  303F               	movlw	63
 14329  1E37  2E42               	goto	L67
 14330  1E38                     l18820:	
 14331                           
 14332                           ;PID.c: 174: else if(PWM_var <= -0.5)PWM_var = -0.5;
 14333  1E38  30BF               	movlw	191
 14334  1E39  2741  3199         	fcall	PL44	;call to abstracted procedure
 14335  1E3B  271F  3199         	fcall	PL38	;call to abstracted procedure
 14336  1E3D  2658  3199         	fcall	___flge
 14337  1E3F  1C03               	btfss	3,0
 14338  1E40  2E47               	goto	l907
 14339  1E41  30BF               	movlw	191
 14340  1E42                     L67:	
 14341  1E42  0021               	movlb	1	; select bank1
 14342  1E43  00DB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 14343  1E44  01DA               	clrf	(pid_calc@PWM_var+2)^(0+128)
 14344  1E45                     L69:	
 14345  1E45  01D9               	clrf	(pid_calc@PWM_var+1)^(0+128)
 14346  1E46  01D8               	clrf	pid_calc@PWM_var^(0+128)
 14347  1E47                     l907:	
 14348                           
 14349                           ;PID.c: 175: }
 14350                           ;PID.c: 176: }
 14351                           ;PID.c: 178: }
 14352                           ;PID.c: 181: return (PWM_var );
 14353  1E47  0021               	movlb	1	; select bank1
 14354  1E48  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14355  1E49  0020               	movlb	0	; select bank0
 14356  1E4A  00E9               	movwf	?_pid_calc+3
 14357  1E4B  0021               	movlb	1	; select bank1
 14358  1E4C  085A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 14359  1E4D  0020               	movlb	0	; select bank0
 14360  1E4E  00E8               	movwf	?_pid_calc+2
 14361  1E4F  0021               	movlb	1	; select bank1
 14362  1E50  0859               	movf	(pid_calc@PWM_var+1)^(0+128),w
 14363  1E51  0020               	movlb	0	; select bank0
 14364  1E52  00E7               	movwf	?_pid_calc+1
 14365  1E53  0021               	movlb	1	; select bank1
 14366  1E54  0858               	movf	pid_calc@PWM_var^(0+128),w
 14367  1E55  0020               	movlb	0	; select bank0
 14368  1E56  00E6               	movwf	?_pid_calc
 14369  1E57  0008               	return
 14370  1E58                     __end_of_pid_calc:	
 14371  1E58                     __ptext18:	
 14372 ;; *************** function ___flge *****************
 14373 ;; Defined at:
 14374 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flge.c"
 14375 ;; Parameters:    Size  Location     Type
 14376 ;;  ff1             4   58[BANK0 ] float 
 14377 ;;  ff2             4   62[BANK0 ] float 
 14378 ;; Auto vars:     Size  Location     Type
 14379 ;;		None
 14380 ;; Return value:  Size  Location     Type
 14381 ;;		None               void
 14382 ;; Registers used:
 14383 ;;		wreg, status,2, status,0
 14384 ;; Tracked objects:
 14385 ;;		On entry : 1F/0
 14386 ;;		On exit  : 1F/0
 14387 ;;		Unchanged: 0/0
 14388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14389 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;Total ram usage:       12 bytes
 14394 ;; Hardware stack levels used:    1
 14395 ;; Hardware stack levels required when called:    2
 14396 ;; This function calls:
 14397 ;;		Nothing
 14398 ;; This function is called by:
 14399 ;;		_auto_system
 14400 ;;		_pid_calc
 14401 ;;		_handle_ad_loop
 14402 ;;		_Mppt_Charge
 14403 ;;		_handle_uart_rx_buf
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           
 14408                           ;psect for function ___flge
 14409  1E58                     ___flge:	
 14410                           
 14411                           ;incstack = 0
 14412                           ; Regs used in ___flge: [wreg+status,2+status,0]
 14413  1E58  1FDD               	btfss	___flge@ff1+3,7
 14414  1E59  2E6F               	goto	l19078
 14415  1E5A  3080               	movlw	128
 14416  1E5B  01E2               	clrf	??___flge
 14417  1E5C  01E3               	clrf	??___flge+1
 14418  1E5D  01E4               	clrf	??___flge+2
 14419  1E5E  00E5               	movwf	??___flge+3
 14420  1E5F  085A               	movf	___flge@ff1,w
 14421  1E60  02E2               	subwf	??___flge,f
 14422  1E61  085B               	movf	___flge@ff1+1,w
 14423  1E62  3BE3               	subwfb	??___flge+1,f
 14424  1E63  085C               	movf	___flge@ff1+2,w
 14425  1E64  3BE4               	subwfb	??___flge+2,f
 14426  1E65  085D               	movf	___flge@ff1+3,w
 14427  1E66  3BE5               	subwfb	??___flge+3,f
 14428  1E67  0865               	movf	??___flge+3,w
 14429  1E68  00DD               	movwf	___flge@ff1+3
 14430  1E69  0864               	movf	??___flge+2,w
 14431  1E6A  00DC               	movwf	___flge@ff1+2
 14432  1E6B  0863               	movf	??___flge+1,w
 14433  1E6C  00DB               	movwf	___flge@ff1+1
 14434  1E6D  0862               	movf	??___flge,w
 14435  1E6E  00DA               	movwf	___flge@ff1
 14436  1E6F                     l19078:	
 14437  1E6F  1FE1               	btfss	___flge@ff2+3,7
 14438  1E70  2E86               	goto	l2191
 14439  1E71  3080               	movlw	128
 14440  1E72  01E2               	clrf	??___flge
 14441  1E73  01E3               	clrf	??___flge+1
 14442  1E74  01E4               	clrf	??___flge+2
 14443  1E75  00E5               	movwf	??___flge+3
 14444  1E76  085E               	movf	___flge@ff2,w
 14445  1E77  02E2               	subwf	??___flge,f
 14446  1E78  085F               	movf	___flge@ff2+1,w
 14447  1E79  3BE3               	subwfb	??___flge+1,f
 14448  1E7A  0860               	movf	___flge@ff2+2,w
 14449  1E7B  3BE4               	subwfb	??___flge+2,f
 14450  1E7C  0861               	movf	___flge@ff2+3,w
 14451  1E7D  3BE5               	subwfb	??___flge+3,f
 14452  1E7E  0865               	movf	??___flge+3,w
 14453  1E7F  00E1               	movwf	___flge@ff2+3
 14454  1E80  0864               	movf	??___flge+2,w
 14455  1E81  00E0               	movwf	___flge@ff2+2
 14456  1E82  0863               	movf	??___flge+1,w
 14457  1E83  00DF               	movwf	___flge@ff2+1
 14458  1E84  0862               	movf	??___flge,w
 14459  1E85  00DE               	movwf	___flge@ff2
 14460  1E86                     l2191:	
 14461  1E86  3080               	movlw	128
 14462  1E87  06DD               	xorwf	___flge@ff1+3,f
 14463  1E88  06E1               	xorwf	___flge@ff2+3,f
 14464  1E89  0861               	movf	___flge@ff2+3,w
 14465  1E8A  025D               	subwf	___flge@ff1+3,w
 14466  1E8B  1D03               	skipz
 14467  1E8C  0008               	return
 14468  1E8D  0860               	movf	___flge@ff2+2,w
 14469  1E8E  025C               	subwf	___flge@ff1+2,w
 14470  1E8F  1D03               	skipz
 14471  1E90  0008               	return
 14472  1E91  085F               	movf	___flge@ff2+1,w
 14473  1E92  025B               	subwf	___flge@ff1+1,w
 14474  1E93  1D03               	skipz
 14475  1E94  0008               	return
 14476  1E95  085E               	movf	___flge@ff2,w
 14477  1E96  025A               	subwf	___flge@ff1,w
 14478  1E97  0008               	return
 14479  1E98                     __end_of___flge:	
 14480  1E98                     __ptext21:	
 14481 ;; *************** function ___fltol *****************
 14482 ;; Defined at:
 14483 ;;		line 43 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fltol.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;  f1              4   58[BANK0 ] unsigned int 
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;  exp1            1   67[BANK0 ] unsigned char 
 14488 ;;  sign1           1   66[BANK0 ] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  4   58[BANK0 ] long 
 14491 ;; Registers used:
 14492 ;;		wreg, status,2, status,0
 14493 ;; Tracked objects:
 14494 ;;		On entry : 1F/0
 14495 ;;		On exit  : 1F/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;Total ram usage:       10 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    2
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_handle_ad_loop
 14509 ;;		_handle_task_process
 14510 ;;		_Mppt_Charge
 14511 ;;		_handle_uart_rx_buf
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           
 14516                           ;psect for function ___fltol
 14517  1E98                     ___fltol:	
 14518                           
 14519                           ;incstack = 0
 14520                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14521  1E98  27BF  3199         	fcall	PL188	;call to abstracted procedure
 14522  1E9A  1003               	clrc
 14523  1E9B  0D60               	rlf	??___fltol+2,w
 14524  1E9C  0D61               	rlf	??___fltol+3,w
 14525  1E9D  00E3               	movwf	___fltol@exp1
 14526  1E9E  08E3               	movf	___fltol@exp1,f
 14527  1E9F  1D03               	skipz
 14528  1EA0  2EA6               	goto	l19150
 14529  1EA1                     l19148:	
 14530  1EA1  01DA               	clrf	?___fltol
 14531  1EA2  01DB               	clrf	?___fltol+1
 14532  1EA3  01DC               	clrf	?___fltol+2
 14533  1EA4  01DD               	clrf	?___fltol+3
 14534  1EA5  0008               	return
 14535  1EA6                     l19150:	
 14536  1EA6  27BF  3199         	fcall	PL188	;call to abstracted procedure
 14537  1EA8  301F               	movlw	31
 14538  1EA9                     u13225:	
 14539  1EA9  36E1               	lsrf	??___fltol+3,f
 14540  1EAA  0CE0               	rrf	??___fltol+2,f
 14541  1EAB  0CDF               	rrf	??___fltol+1,f
 14542  1EAC  0CDE               	rrf	??___fltol,f
 14543  1EAD  0B89               	decfsz	9,f
 14544  1EAE  2EA9               	goto	u13225
 14545  1EAF  085E               	movf	??___fltol,w
 14546  1EB0  00E2               	movwf	___fltol@sign1
 14547  1EB1  3096               	movlw	150
 14548  1EB2  17DC               	bsf	___fltol@f1+2,7
 14549  1EB3  01DD               	clrf	___fltol@f1+3
 14550  1EB4  02E3               	subwf	___fltol@exp1,f
 14551  1EB5  1FE3               	btfss	___fltol@exp1,7
 14552  1EB6  2EC3               	goto	l19168
 14553  1EB7  0863               	movf	___fltol@exp1,w
 14554  1EB8  3A80               	xorlw	128
 14555  1EB9  3E97               	addlw	151
 14556  1EBA  1C03               	btfss	3,0
 14557  1EBB  2EA1               	goto	l19148
 14558  1EBC                     l19164:	
 14559  1EBC  36DD               	lsrf	___fltol@f1+3,f
 14560  1EBD  0CDC               	rrf	___fltol@f1+2,f
 14561  1EBE  0CDB               	rrf	___fltol@f1+1,f
 14562  1EBF  0CDA               	rrf	___fltol@f1,f
 14563  1EC0  0FE3               	incfsz	___fltol@exp1,f
 14564  1EC1  2EBC               	goto	l19164
 14565  1EC2  2ED0               	goto	l19174
 14566  1EC3                     l19168:	
 14567  1EC3  3020               	movlw	32
 14568  1EC4  0263               	subwf	___fltol@exp1,w
 14569  1EC5  1803               	btfsc	3,0
 14570  1EC6  2EA1               	goto	l19148
 14571  1EC7                     l2225:	
 14572  1EC7  08E3               	movf	___fltol@exp1,f
 14573  1EC8  1903               	btfsc	3,2
 14574  1EC9  2ED0               	goto	l19174
 14575  1ECA  35DA               	lslf	___fltol@f1,f
 14576  1ECB  0DDB               	rlf	___fltol@f1+1,f
 14577  1ECC  0DDC               	rlf	___fltol@f1+2,f
 14578  1ECD  0DDD               	rlf	___fltol@f1+3,f
 14579  1ECE  03E3               	decf	___fltol@exp1,f
 14580  1ECF  2EC7               	goto	l2225
 14581  1ED0                     l19174:	
 14582  1ED0  0862               	movf	___fltol@sign1,w
 14583  1ED1  1903               	btfsc	3,2
 14584  1ED2  0008               	return
 14585  1ED3  09DA               	comf	___fltol@f1,f
 14586  1ED4  09DB               	comf	___fltol@f1+1,f
 14587  1ED5  09DC               	comf	___fltol@f1+2,f
 14588  1ED6  09DD               	comf	___fltol@f1+3,f
 14589  1ED7  0ADA               	incf	___fltol@f1,f
 14590  1ED8  1903               	skipnz
 14591  1ED9  0ADB               	incf	___fltol@f1+1,f
 14592  1EDA  1903               	skipnz
 14593  1EDB  0ADC               	incf	___fltol@f1+2,f
 14594  1EDC  1903               	skipnz
 14595  1EDD  0ADD               	incf	___fltol@f1+3,f
 14596  1EDE  0008               	return
 14597  1EDF                     __end_of___fltol:	
 14598  1EDF                     __ptext17:	
 14599 ;; *************** function ___flsub *****************
 14600 ;; Defined at:
 14601 ;;		line 18 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flsub.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  f2              4   54[BANK0 ] float 
 14604 ;;  f1              4   58[BANK0 ] float 
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  4   54[BANK0 ] float 
 14609 ;; Registers used:
 14610 ;;		wreg, status,2, status,0, pclath, cstack
 14611 ;; Tracked objects:
 14612 ;;		On entry : 1F/0
 14613 ;;		On exit  : 1F/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;Total ram usage:        8 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    4
 14623 ;; This function calls:
 14624 ;;		___fladd
 14625 ;; This function is called by:
 14626 ;;		_pid_calc
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           
 14631                           ;psect for function ___flsub
 14632  1EDF                     ___flsub:	
 14633                           
 14634                           ;incstack = 0
 14635                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14636  1EDF  3080               	movlw	128
 14637  1EE0  06D9               	xorwf	___flsub@f2+3,f
 14638  1EE1  0859               	movf	___flsub@f2+3,w
 14639  1EE2  00CA               	movwf	___fladd@f1+3
 14640  1EE3  0858               	movf	___flsub@f2+2,w
 14641  1EE4  00C9               	movwf	___fladd@f1+2
 14642  1EE5  0857               	movf	___flsub@f2+1,w
 14643  1EE6  00C8               	movwf	___fladd@f1+1
 14644  1EE7  0856               	movf	___flsub@f2,w
 14645  1EE8  00C7               	movwf	___fladd@f1
 14646  1EE9  085D               	movf	___flsub@f1+3,w
 14647  1EEA  00CE               	movwf	___fladd@f2+3
 14648  1EEB  085C               	movf	___flsub@f1+2,w
 14649  1EEC  00CD               	movwf	___fladd@f2+2
 14650  1EED  085B               	movf	___flsub@f1+1,w
 14651  1EEE  00CC               	movwf	___fladd@f2+1
 14652  1EEF  085A               	movf	___flsub@f1,w
 14653  1EF0  00CB               	movwf	___fladd@f2
 14654  1EF1  318C  24C6         	fcall	___fladd
 14655  1EF3  084A               	movf	?___fladd+3,w
 14656  1EF4  00D9               	movwf	?___flsub+3
 14657  1EF5  0849               	movf	?___fladd+2,w
 14658  1EF6  00D8               	movwf	?___flsub+2
 14659  1EF7  0848               	movf	?___fladd+1,w
 14660  1EF8  00D7               	movwf	?___flsub+1
 14661  1EF9  0847               	movf	?___fladd,w
 14662  1EFA  00D6               	movwf	?___flsub
 14663  1EFB  0008               	return
 14664  1EFC                     __end_of___flsub:	
 14665  1EFC                     PL6:	
 14666  1EFC  01DB               	clrf	___flge@ff1+1
 14667  1EFD  01DA               	clrf	___flge@ff1
 14668  1EFE  0021               	movlb	1	; select bank1
 14669  1EFF  0857               	movf	(pid_calc@Error+3)^(0+128),w
 14670  1F00  0020               	movlb	0	; select bank0
 14671  1F01  00E1               	movwf	___flge@ff2+3
 14672  1F02  0021               	movlb	1	; select bank1
 14673  1F03  0856               	movf	(pid_calc@Error+2)^(0+128),w
 14674  1F04  0020               	movlb	0	; select bank0
 14675  1F05  00E0               	movwf	___flge@ff2+2
 14676  1F06  0021               	movlb	1	; select bank1
 14677  1F07  0855               	movf	(pid_calc@Error+1)^(0+128),w
 14678  1F08  0020               	movlb	0	; select bank0
 14679  1F09  00DF               	movwf	___flge@ff2+1
 14680  1F0A  0021               	movlb	1	; select bank1
 14681  1F0B  0854               	movf	pid_calc@Error^(0+128),w
 14682  1F0C  0020               	movlb	0	; select bank0
 14683  1F0D  00DE               	movwf	___flge@ff2
 14684  1F0E  0008               	return
 14685  1F0F                     __end_ofPL6:	
 14686  1F0F                     PL10:	
 14687  1F0F  0857               	movf	(pid_calc@Error+3)^(0+128),w
 14688  1F10  0020               	movlb	0	; select bank0
 14689  1F11  00DD               	movwf	___flge@ff1+3
 14690  1F12  0021               	movlb	1	; select bank1
 14691  1F13  0856               	movf	(pid_calc@Error+2)^(0+128),w
 14692  1F14  0020               	movlb	0	; select bank0
 14693  1F15  00DC               	movwf	___flge@ff1+2
 14694  1F16  0021               	movlb	1	; select bank1
 14695  1F17  0855               	movf	(pid_calc@Error+1)^(0+128),w
 14696  1F18  0020               	movlb	0	; select bank0
 14697  1F19  00DB               	movwf	___flge@ff1+1
 14698  1F1A  0021               	movlb	1	; select bank1
 14699  1F1B  0854               	movf	pid_calc@Error^(0+128),w
 14700  1F1C  0020               	movlb	0	; select bank0
 14701  1F1D  00DA               	movwf	___flge@ff1
 14702  1F1E  0008               	return
 14703  1F1F                     __end_ofPL10:	
 14704  1F1F                     PL38:	
 14705  1F1F  0021               	movlb	1	; select bank1
 14706  1F20  085B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 14707  1F21  0020               	movlb	0	; select bank0
 14708  1F22  00E1               	movwf	___flge@ff2+3
 14709  1F23  0021               	movlb	1	; select bank1
 14710  1F24  085A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 14711  1F25  0020               	movlb	0	; select bank0
 14712  1F26  00E0               	movwf	___flge@ff2+2
 14713  1F27  0021               	movlb	1	; select bank1
 14714  1F28  0859               	movf	(pid_calc@PWM_var+1)^(0+128),w
 14715  1F29  0020               	movlb	0	; select bank0
 14716  1F2A  00DF               	movwf	___flge@ff2+1
 14717  1F2B  0021               	movlb	1	; select bank1
 14718  1F2C  0858               	movf	pid_calc@PWM_var^(0+128),w
 14719  1F2D  0020               	movlb	0	; select bank0
 14720  1F2E  00DE               	movwf	___flge@ff2
 14721  1F2F  0008               	return
 14722  1F30                     __end_ofPL38:	
 14723  1F30                     PL40:	
 14724  1F30  0022               	movlb	2	; select bank2
 14725  1F31  0854               	movf	(_dianchi_guoya_baohu+3)^(0+256),w
 14726  1F32  0020               	movlb	0	; select bank0
 14727  1F33  00E1               	movwf	___flge@ff2+3
 14728  1F34  0022               	movlb	2	; select bank2
 14729  1F35  0853               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
 14730  1F36  0020               	movlb	0	; select bank0
 14731  1F37  00E0               	movwf	___flge@ff2+2
 14732  1F38  0022               	movlb	2	; select bank2
 14733  1F39  0852               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
 14734  1F3A  0020               	movlb	0	; select bank0
 14735  1F3B  00DF               	movwf	___flge@ff2+1
 14736  1F3C  0022               	movlb	2	; select bank2
 14737  1F3D  0851               	movf	_dianchi_guoya_baohu^(0+256),w
 14738  1F3E  0020               	movlb	0	; select bank0
 14739  1F3F  00DE               	movwf	___flge@ff2
 14740  1F40  0008               	return
 14741  1F41                     __end_ofPL40:	
 14742  1F41                     PL44:	
 14743  1F41  00DD               	movwf	___flge@ff1+3
 14744  1F42  01DC               	clrf	___flge@ff1+2
 14745  1F43  01DB               	clrf	___flge@ff1+1
 14746  1F44  01DA               	clrf	___flge@ff1
 14747  1F45  0008               	return
 14748  1F46                     __end_ofPL44:	
 14749  1F46                     PL46:	
 14750  1F46  0020               	movlb	0	; select bank0
 14751  1F47  00DD               	movwf	___flge@ff1+3
 14752  1F48  0021               	movlb	1	; select bank1
 14753  1F49  085A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 14754  1F4A  0020               	movlb	0	; select bank0
 14755  1F4B  00DC               	movwf	___flge@ff1+2
 14756  1F4C  0021               	movlb	1	; select bank1
 14757  1F4D  0859               	movf	(pid_calc@PWM_var+1)^(0+128),w
 14758  1F4E  0020               	movlb	0	; select bank0
 14759  1F4F  00DB               	movwf	___flge@ff1+1
 14760  1F50  0021               	movlb	1	; select bank1
 14761  1F51  0858               	movf	pid_calc@PWM_var^(0+128),w
 14762  1F52  0020               	movlb	0	; select bank0
 14763  1F53  00DA               	movwf	___flge@ff1
 14764  1F54  0008               	return
 14765  1F55                     __end_ofPL46:	
 14766  1F55                     PL60:	
 14767  1F55  0023               	movlb	3	; select bank3
 14768  1F56  086A               	movf	(_dianchi_guoya_huifu+3)^(0+384),w
 14769  1F57  0020               	movlb	0	; select bank0
 14770  1F58  00E1               	movwf	___flge@ff2+3
 14771  1F59  0023               	movlb	3	; select bank3
 14772  1F5A  0869               	movf	(_dianchi_guoya_huifu+2)^(0+384),w
 14773  1F5B  0020               	movlb	0	; select bank0
 14774  1F5C  00E0               	movwf	___flge@ff2+2
 14775  1F5D  0023               	movlb	3	; select bank3
 14776  1F5E  0868               	movf	(_dianchi_guoya_huifu+1)^(0+384),w
 14777  1F5F  0020               	movlb	0	; select bank0
 14778  1F60  00DF               	movwf	___flge@ff2+1
 14779  1F61  0023               	movlb	3	; select bank3
 14780  1F62  0867               	movf	_dianchi_guoya_huifu^(0+384),w
 14781  1F63  0020               	movlb	0	; select bank0
 14782  1F64  00DE               	movwf	___flge@ff2
 14783  1F65  0008               	return
 14784  1F66                     __end_ofPL60:	
 14785  1F66                     PL80:	
 14786  1F66  0020               	movlb	0	; select bank0
 14787  1F67  00DD               	movwf	___flge@ff1+3
 14788  1F68  3080               	movlw	128
 14789  1F69  00DC               	movwf	___flge@ff1+2
 14790  1F6A  0008               	return
 14791  1F6B                     __end_ofPL80:	
 14792  1F6B                     PL132:	
 14793  1F6B  0833               	movf	?___lwtofl+3,w
 14794  1F6C  0021               	movlb	1	; select bank1
 14795  1F6D  00A3               	movwf	(_PWM+3)^(0+128)
 14796  1F6E  0020               	movlb	0	; select bank0
 14797  1F6F  0832               	movf	?___lwtofl+2,w
 14798  1F70  0021               	movlb	1	; select bank1
 14799  1F71  00A2               	movwf	(_PWM+2)^(0+128)
 14800  1F72  0020               	movlb	0	; select bank0
 14801  1F73  0831               	movf	?___lwtofl+1,w
 14802  1F74  0021               	movlb	1	; select bank1
 14803  1F75  00A1               	movwf	(_PWM+1)^(0+128)
 14804  1F76  0020               	movlb	0	; select bank0
 14805  1F77  0830               	movf	?___lwtofl,w
 14806  1F78  0021               	movlb	1	; select bank1
 14807  1F79  00A0               	movwf	_PWM^(0+128)
 14808  1F7A  0008               	return
 14809  1F7B                     __end_ofPL132:	
 14810  1F7B                     PL138:	
 14811  1F7B  0827               	movf	(_buck_pwm_value+1)^(0+128),w
 14812  1F7C  0020               	movlb	0	; select bank0
 14813  1F7D  00A4               	movwf	Set_Buck_Pwm_Duty@duty+1
 14814  1F7E  0021               	movlb	1	; select bank1
 14815  1F7F  0826               	movf	_buck_pwm_value^(0+128),w
 14816  1F80  0020               	movlb	0	; select bank0
 14817  1F81  00A3               	movwf	Set_Buck_Pwm_Duty@duty
 14818  1F82  0008               	return
 14819  1F83                     __end_ofPL138:	
 14820  1F83                     PL150:	
 14821  1F83  0827               	movf	(_buck_pwm_value+1)^(0+128),w
 14822  1F84  0020               	movlb	0	; select bank0
 14823  1F85  00B1               	movwf	___lwtofl@c+1
 14824  1F86  0021               	movlb	1	; select bank1
 14825  1F87  0826               	movf	_buck_pwm_value^(0+128),w
 14826  1F88  0020               	movlb	0	; select bank0
 14827  1F89  00B0               	movwf	___lwtofl@c
 14828  1F8A  0008               	return
 14829  1F8B                     __end_ofPL150:	
 14830  1F8B                     PL156:	
 14831  1F8B  3F40               	moviw [0]fsr1
 14832  1F8C  00B8               	movwf	___flmul@f2
 14833  1F8D  3F41               	moviw [1]fsr1
 14834  1F8E  00B9               	movwf	___flmul@f2+1
 14835  1F8F  3F42               	moviw [2]fsr1
 14836  1F90  00BA               	movwf	___flmul@f2+2
 14837  1F91  3F43               	moviw [3]fsr1
 14838  1F92  00BB               	movwf	___flmul@f2+3
 14839  1F93  0008               	return
 14840  1F94                     __end_ofPL156:	
 14841  1F94                     PL162:	
 14842  1F94  0866               	movf	pid_calc@pp,w
 14843  1F95  0086               	movwf	6
 14844  1F96  0867               	movf	pid_calc@pp+1,w
 14845  1F97  0087               	movwf	7
 14846  1F98  3158               	addfsr 1,24
 14847  1F99  3F40               	moviw [0]fsr1
 14848  1F9A  0008               	return
 14849  1F9B                     __end_ofPL162:	
 14850  1F9B                     PL170:	
 14851  1F9B  085B               	movf	?___fltol+1,w
 14852  1F9C  0021               	movlb	1	; select bank1
 14853  1F9D  00A7               	movwf	(_buck_pwm_value+1)^(0+128)
 14854  1F9E  0020               	movlb	0	; select bank0
 14855  1F9F  085A               	movf	?___fltol,w
 14856  1FA0  0021               	movlb	1	; select bank1
 14857  1FA1  00A6               	movwf	_buck_pwm_value^(0+128)
 14858  1FA2  0008               	return
 14859  1FA3                     __end_ofPL170:	
 14860  1FA3                     PL174:	
 14861  1FA3  0837               	movf	?___flmul+3,w
 14862  1FA4  00CA               	movwf	___fladd@f1+3
 14863  1FA5  0836               	movf	?___flmul+2,w
 14864  1FA6  00C9               	movwf	___fladd@f1+2
 14865  1FA7  0835               	movf	?___flmul+1,w
 14866  1FA8  00C8               	movwf	___fladd@f1+1
 14867  1FA9  0834               	movf	?___flmul,w
 14868  1FAA  00C7               	movwf	___fladd@f1
 14869  1FAB  0021               	movlb	1	; select bank1
 14870  1FAC  0008               	return
 14871  1FAD                     __end_ofPL174:	
 14872  1FAD                     PL182:	
 14873  1FAD  0833               	movf	?___lwtofl+3,w
 14874  1FAE  00CE               	movwf	___fladd@f2+3
 14875  1FAF  0832               	movf	?___lwtofl+2,w
 14876  1FB0  00CD               	movwf	___fladd@f2+2
 14877  1FB1  0831               	movf	?___lwtofl+1,w
 14878  1FB2  00CC               	movwf	___fladd@f2+1
 14879  1FB3  0830               	movf	?___lwtofl,w
 14880  1FB4  00CB               	movwf	___fladd@f2
 14881  1FB5  0008               	return
 14882  1FB6                     __end_ofPL182:	
 14883  1FB6                     PL184:	
 14884  1FB6  084A               	movf	?___fladd+3,w
 14885  1FB7  00DD               	movwf	___fltol@f1+3
 14886  1FB8  0849               	movf	?___fladd+2,w
 14887  1FB9  00DC               	movwf	___fltol@f1+2
 14888  1FBA  0848               	movf	?___fladd+1,w
 14889  1FBB  00DB               	movwf	___fltol@f1+1
 14890  1FBC  0847               	movf	?___fladd,w
 14891  1FBD  00DA               	movwf	___fltol@f1
 14892  1FBE  0008               	return
 14893  1FBF                     __end_ofPL184:	
 14894  1FBF                     PL188:	
 14895  1FBF  085A               	movf	___fltol@f1,w
 14896  1FC0  00DE               	movwf	??___fltol
 14897  1FC1  085B               	movf	___fltol@f1+1,w
 14898  1FC2  00DF               	movwf	??___fltol+1
 14899  1FC3  085C               	movf	___fltol@f1+2,w
 14900  1FC4  00E0               	movwf	??___fltol+2
 14901  1FC5  085D               	movf	___fltol@f1+3,w
 14902  1FC6  00E1               	movwf	??___fltol+3
 14903  1FC7  0008               	return
 14904  1FC8                     __end_ofPL188:	
 14905  1FC8                     PL190:	
 14906  1FC8  3040               	movlw	64
 14907  1FC9  00E1               	movwf	___flge@ff2+3
 14908  1FCA  01E0               	clrf	___flge@ff2+2
 14909  1FCB  01DF               	clrf	___flge@ff2+1
 14910  1FCC  01DE               	clrf	___flge@ff2
 14911  1FCD  0008               	return
 14912  1FCE                     __end_ofPL190:	
 14913  1FCE                     PL194:	
 14914  1FCE  3F40               	moviw [0]fsr1
 14915  1FCF  00DA               	movwf	___flsub@f1
 14916  1FD0  3F41               	moviw [1]fsr1
 14917  1FD1  00DB               	movwf	___flsub@f1+1
 14918  1FD2  3F42               	moviw [2]fsr1
 14919  1FD3  00DC               	movwf	___flsub@f1+2
 14920  1FD4  3F43               	moviw [3]fsr1
 14921  1FD5  00DD               	movwf	___flsub@f1+3
 14922  1FD6  0008               	return
 14923  1FD7                     __end_ofPL194:	
 14924  1FD7                     PL196:	
 14925  1FD7  0020               	movlb	0	; select bank0
 14926  1FD8  0866               	movf	pid_calc@pp,w
 14927  1FD9  0086               	movwf	6
 14928  1FDA  0867               	movf	pid_calc@pp+1,w
 14929  1FDB  0087               	movwf	7
 14930  1FDC  0008               	return
 14931  1FDD                     __end_ofPL196:	
 14932  1FDD                     PL214:	
 14933  1FDD  00E1               	movwf	___flge@ff2+3
 14934  1FDE  3080               	movlw	128
 14935  1FDF  00E0               	movwf	___flge@ff2+2
 14936  1FE0  01DF               	clrf	___flge@ff2+1
 14937  1FE1  01DE               	clrf	___flge@ff2
 14938  1FE2  0008               	return
 14939  1FE3                     __end_ofPL214:	
 14940  1FE3                     PL222:	
 14941  1FE3  00E1               	movwf	___flge@ff2+3
 14942  1FE4  30A0               	movlw	160
 14943  1FE5  00E0               	movwf	___flge@ff2+2
 14944  1FE6  01DF               	clrf	___flge@ff2+1
 14945  1FE7  01DE               	clrf	___flge@ff2
 14946  1FE8  0008               	return
 14947  1FE9                     __end_ofPL222:	
 14948  1FE9                     PL226:	
 14949  1FE9  0020               	movlb	0	; select bank0
 14950  1FEA  00B4               	movwf	___flmul@f1
 14951  1FEB  0866               	movf	pid_calc@pp,w
 14952  1FEC  0086               	movwf	6
 14953  1FED  0867               	movf	pid_calc@pp+1,w
 14954  1FEE  0087               	movwf	7
 14955  1FEF  0008               	return
 14956  1FF0                     __end_ofPL226:	
 14957  1FF0                     PL228:	
 14958  1FF0  00E1               	movwf	___flge@ff2+3
 14959  1FF1  01E0               	clrf	___flge@ff2+2
 14960  1FF2  01DF               	clrf	___flge@ff2+1
 14961  1FF3  01DE               	clrf	___flge@ff2
 14962  1FF4  0008               	return
 14963  1FF5                     __end_ofPL228:	
 14964  1FF5                     PL236:	
 14965  1FF5  00CA               	movwf	___fladd@f1+3
 14966  1FF6  30A0               	movlw	160
 14967  1FF7  00C9               	movwf	___fladd@f1+2
 14968  1FF8  01C8               	clrf	___fladd@f1+1
 14969  1FF9  01C7               	clrf	___fladd@f1
 14970  1FFA  0008               	return
 14971  1FFB                     __end_ofPL236:	
 14972  1FFB                     PL266:	
 14973  1FFB  0866               	movf	pid_calc@pp,w
 14974  1FFC  0086               	movwf	6
 14975  1FFD  0867               	movf	pid_calc@pp+1,w
 14976  1FFE  0087               	movwf	7
 14977  1FFF  0008               	return
 14978  2000                     __end_ofPL266:	
 14979                           
 14980                           	psect	text22
 14981  0880                     __ptext22:	
 14982 ;; *************** function _Enable_Buck_Pwm *****************
 14983 ;; Defined at:
 14984 ;;		line 123 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
 14985 ;; Parameters:    Size  Location     Type
 14986 ;;		None
 14987 ;; Auto vars:     Size  Location     Type
 14988 ;;		None
 14989 ;; Return value:  Size  Location     Type
 14990 ;;		None               void
 14991 ;; Registers used:
 14992 ;;		None
 14993 ;; Tracked objects:
 14994 ;;		On entry : 1F/1
 14995 ;;		On exit  : 1F/8
 14996 ;;		Unchanged: 0/0
 14997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;Total ram usage:        0 bytes
 15003 ;; Hardware stack levels used:    1
 15004 ;; Hardware stack levels required when called:    2
 15005 ;; This function calls:
 15006 ;;		Nothing
 15007 ;; This function is called by:
 15008 ;;		_handle_ad_loop
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           
 15013                           ;psect for function _Enable_Buck_Pwm
 15014  0880                     _Enable_Buck_Pwm:	
 15015                           
 15016                           ;pwm.c: 125: TRISCbits.TRISC2=0;
 15017                           
 15018                           ;incstack = 0
 15019                           ; Regs used in _Enable_Buck_Pwm: []
 15020  0880  110E               	bcf	14,2	;volatile
 15021                           
 15022                           ;pwm.c: 127: TMR6ON=1;
 15023  0881  0028               	movlb	8	; select bank8
 15024  0882  151E               	bsf	30,2	;volatile
 15025  0883  0008               	return
 15026  0884                     __end_of_Enable_Buck_Pwm:	
 15027                           
 15028                           	psect	intentry
 15029  0004                     __pintentry:	
 15030 ;; *************** function _isr *****************
 15031 ;; Defined at:
 15032 ;;		line 62 in file "D:\MCUProject\ZH-SL-F60\src\interrupt.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;		None
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  time_cnt        2    1[BANK0 ] unsigned int 
 15037 ;;  r1_data         1    0[BANK0 ] unsigned char 
 15038 ;;  r2_data         1    0        unsigned char 
 15039 ;; Return value:  Size  Location     Type
 15040 ;;		None               void
 15041 ;; Registers used:
 15042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 10/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;Total ram usage:       11 bytes
 15053 ;; Hardware stack levels used:    1
 15054 ;; Hardware stack levels required when called:    1
 15055 ;; This function calls:
 15056 ;;		i1_Disable_Bost_Pwm
 15057 ;;		i1_Set_Bost_Pwm_Duty
 15058 ;; This function is called by:
 15059 ;;		Interrupt level 1
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063  0004                     _isr:	
 15064                           
 15065                           ;incstack = 0
 15066                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15067  0004  3180               	pagesel	$
 15068                           
 15069                           ;interrupt.c: 64: unsigned char r1_data,r2_data;
 15070                           ;interrupt.c: 67: if (TMR1IE && TMR1IF)
 15071  0005  0021               	movlb	1	; select bank1
 15072  0006  1C11               	btfss	17,0	;volatile
 15073  0007  29A7               	goto	i1l15784
 15074  0008  0020               	movlb	0	; select bank0
 15075  0009  1C11               	btfss	17,0	;volatile
 15076  000A  29A7               	goto	i1l15784
 15077                           
 15078                           ;interrupt.c: 68: {
 15079                           ;interrupt.c: 69: TMR1IF = 0x00;
 15080  000B  1011               	bcf	17,0	;volatile
 15081                           
 15082                           ;interrupt.c: 70: TMR1H = 0xE0;
 15083  000C  30E0               	movlw	224
 15084  000D  0097               	movwf	23	;volatile
 15085                           
 15086                           ;interrupt.c: 71: TMR1L = 0xC0;
 15087  000E  30C0               	movlw	192
 15088  000F  0096               	movwf	22	;volatile
 15089                           
 15090                           ;interrupt.c: 74: if(system_check_time==0x01)
 15091  0010  0022               	movlb	2	; select bank2
 15092  0011  0B47               	decfsz	_system_check_time^(0+256),w
 15093  0012  284C               	goto	i1l15596
 15094                           
 15095                           ;interrupt.c: 75: {
 15096                           ;interrupt.c: 76: system_time_count++;
 15097  0013  0023               	movlb	3	; select bank3
 15098  0014  0AB8               	incf	_system_time_count^(0+384),f
 15099  0015  1903               	skipnz
 15100  0016  0AB9               	incf	(_system_time_count+1)^(0+384),f
 15101                           
 15102                           ;interrupt.c: 78: if(system_time_count>800)
 15103  0017  3003               	movlw	3
 15104  0018  0239               	subwf	(_system_time_count+1)^(0+384),w
 15105  0019  3021               	movlw	33
 15106  001A  1903               	skipnz
 15107  001B  0238               	subwf	_system_time_count^(0+384),w
 15108  001C  1C03               	skipc
 15109  001D  2843               	goto	i1l15588
 15110                           
 15111                           ;interrupt.c: 82: set_1HZ_flag^=0x01;
 15112  001E  01B8               	clrf	_system_time_count^(0+384)
 15113  001F  01B9               	clrf	(_system_time_count+1)^(0+384)
 15114                           
 15115                           ;interrupt.c: 84: if(have_person1_flag==0x01)
 15116  0020  0021               	movlb	1	; select bank1
 15117  0021  0B36               	decfsz	_have_person1_flag^(0+128),w
 15118  0022  282C               	goto	i1l15572
 15119                           
 15120                           ;interrupt.c: 85: {
 15121                           ;interrupt.c: 86: have_person1_time_count++;
 15122  0023  0022               	movlb	2	; select bank2
 15123  0024  301A               	movlw	26
 15124  0025  0AB4               	incf	_have_person1_time_count^(0+256),f
 15125                           
 15126                           ;interrupt.c: 88: if(have_person1_time_count>25)
 15127  0026  0234               	subwf	_have_person1_time_count^(0+256),w
 15128  0027  1C03               	skipc
 15129  0028  282C               	goto	i1l15572
 15130                           
 15131                           ;interrupt.c: 89: {
 15132                           ;interrupt.c: 90: have_person1_time_count=0x00;
 15133  0029  01B4               	clrf	_have_person1_time_count^(0+256)
 15134                           
 15135                           ;interrupt.c: 92: have_person1_flag=0x00;
 15136  002A  0021               	movlb	1	; select bank1
 15137  002B  01B6               	clrf	_have_person1_flag^(0+128)
 15138  002C                     i1l15572:	
 15139                           
 15140                           ;interrupt.c: 93: }
 15141                           ;interrupt.c: 94: }
 15142                           ;interrupt.c: 96: if(open_sleep_time==0x01 && device_status==0x00)
 15143  002C  0022               	movlb	2	; select bank2
 15144  002D  0B40               	decfsz	_open_sleep_time^(0+256),w
 15145  002E  2843               	goto	i1l15588
 15146  002F  0021               	movlb	1	; select bank1
 15147  0030  08B4               	movf	_device_status^(0+128),f
 15148  0031  1D03               	skipz
 15149  0032  2843               	goto	i1l15588
 15150                           
 15151                           ;interrupt.c: 97: {
 15152                           ;interrupt.c: 98: sleep_time_count++;
 15153  0033  0024               	movlb	4	; select bank4
 15154  0034  0AD6               	incf	_sleep_time_count^(0+512),f
 15155  0035  1903               	skipnz
 15156  0036  0AD7               	incf	(_sleep_time_count+1)^(0+512),f
 15157                           
 15158                           ;interrupt.c: 100: if(sleep_time_count>=20)
 15159  0037  3000               	movlw	0
 15160  0038  0257               	subwf	(_sleep_time_count+1)^(0+512),w
 15161  0039  3014               	movlw	20
 15162  003A  1903               	skipnz
 15163  003B  0256               	subwf	_sleep_time_count^(0+512),w
 15164  003C  1C03               	skipc
 15165  003D  2843               	goto	i1l15588
 15166                           
 15167                           ;interrupt.c: 101: {
 15168                           ;interrupt.c: 102: sleep_time_count=0x00;
 15169  003E  01D6               	clrf	_sleep_time_count^(0+512)
 15170  003F  01D7               	clrf	(_sleep_time_count+1)^(0+512)
 15171                           
 15172                           ;interrupt.c: 106: __nop();
 15173  0040  0000               	nop
 15174                           
 15175                           ;interrupt.c: 107: __nop();
 15176  0041  0000               	nop
 15177                           
 15178                           ;interrupt.c: 108: __nop();
 15179  0042  0000               	nop
 15180  0043                     i1l15588:	
 15181                           
 15182                           ;interrupt.c: 109: }
 15183                           ;interrupt.c: 110: }
 15184                           ;interrupt.c: 112: }
 15185                           ;interrupt.c: 114: scan_key_time_count++;
 15186  0043  0022               	movlb	2	; select bank2
 15187  0044  3028               	movlw	40
 15188  0045  0AC6               	incf	_scan_key_time_count^(0+256),f
 15189                           
 15190                           ;interrupt.c: 116: if(scan_key_time_count>=40)
 15191  0046  0246               	subwf	_scan_key_time_count^(0+256),w
 15192  0047  1C03               	skipc
 15193  0048  284C               	goto	i1l15596
 15194                           
 15195                           ;interrupt.c: 117: {
 15196                           ;interrupt.c: 118: scan_key_time_count=0x00;
 15197  0049  01C6               	clrf	_scan_key_time_count^(0+256)
 15198                           
 15199                           ;interrupt.c: 120: handle_scan_key_flag=0x01;
 15200  004A  01B2               	clrf	_handle_scan_key_flag^(0+256)
 15201  004B  0AB2               	incf	_handle_scan_key_flag^(0+256),f
 15202  004C                     i1l15596:	
 15203                           
 15204                           ;interrupt.c: 121: }
 15205                           ;interrupt.c: 123: }
 15206                           ;interrupt.c: 125: if(open_discharge_time==0x01)
 15207  004C  0B3F               	decfsz	_open_discharge_time^(0+256),w
 15208  004D  2884               	goto	i1l15622
 15209                           
 15210                           ;interrupt.c: 126: {
 15211                           ;interrupt.c: 127: if(ms_cnt<1000)
 15212  004E  3003               	movlw	3
 15213  004F  0023               	movlb	3	; select bank3
 15214  0050  0235               	subwf	(_ms_cnt+1)^(0+384),w
 15215  0051  30E8               	movlw	232
 15216  0052  1903               	skipnz
 15217  0053  0234               	subwf	_ms_cnt^(0+384),w
 15218  0054  1803               	skipnc
 15219  0055  285A               	goto	i1l15602
 15220                           
 15221                           ;interrupt.c: 128: {
 15222                           ;interrupt.c: 129: ms_cnt++;
 15223  0056  0AB4               	incf	_ms_cnt^(0+384),f
 15224  0057  1903               	skipnz
 15225  0058  0AB5               	incf	(_ms_cnt+1)^(0+384),f
 15226                           
 15227                           ;interrupt.c: 130: }
 15228  0059  2884               	goto	i1l15622
 15229  005A                     i1l15602:	
 15230  005A  3000               	movlw	0
 15231                           
 15232                           ;interrupt.c: 131: else
 15233                           ;interrupt.c: 132: {
 15234                           ;interrupt.c: 133: ms_cnt=0x00;
 15235  005B  01B4               	clrf	_ms_cnt^(0+384)
 15236  005C  01B5               	clrf	(_ms_cnt+1)^(0+384)
 15237                           
 15238                           ;interrupt.c: 135: if(se_cnt<60)
 15239  005D  0237               	subwf	(_se_cnt+1)^(0+384),w
 15240  005E  303C               	movlw	60
 15241  005F  1903               	skipnz
 15242  0060  0236               	subwf	_se_cnt^(0+384),w
 15243  0061  1803               	skipnc
 15244  0062  2867               	goto	i1l15608
 15245                           
 15246                           ;interrupt.c: 136: {
 15247                           ;interrupt.c: 137: se_cnt++;
 15248  0063  0AB6               	incf	_se_cnt^(0+384),f
 15249  0064  1903               	skipnz
 15250  0065  0AB7               	incf	(_se_cnt+1)^(0+384),f
 15251                           
 15252                           ;interrupt.c: 138: }
 15253  0066  2884               	goto	i1l15622
 15254  0067                     i1l15608:	
 15255  0067  3000               	movlw	0
 15256                           
 15257                           ;interrupt.c: 139: else
 15258                           ;interrupt.c: 140: {
 15259                           ;interrupt.c: 141: se_cnt=0x00;
 15260  0068  01B6               	clrf	_se_cnt^(0+384)
 15261  0069  01B7               	clrf	(_se_cnt+1)^(0+384)
 15262                           
 15263                           ;interrupt.c: 143: if(mi_cnt<60)
 15264  006A  0022               	movlb	2	; select bank2
 15265  006B  0227               	subwf	(_mi_cnt+1)^(0+256),w
 15266  006C  303C               	movlw	60
 15267  006D  1903               	skipnz
 15268  006E  0226               	subwf	_mi_cnt^(0+256),w
 15269  006F  1803               	skipnc
 15270  0070  2875               	goto	i1l15614
 15271                           
 15272                           ;interrupt.c: 144: {
 15273                           ;interrupt.c: 145: mi_cnt++;
 15274  0071  0AA6               	incf	_mi_cnt^(0+256),f
 15275  0072  1903               	skipnz
 15276  0073  0AA7               	incf	(_mi_cnt+1)^(0+256),f
 15277                           
 15278                           ;interrupt.c: 146: }
 15279  0074  2884               	goto	i1l15622
 15280  0075                     i1l15614:	
 15281  0075  3000               	movlw	0
 15282                           
 15283                           ;interrupt.c: 147: else
 15284                           ;interrupt.c: 148: {
 15285                           ;interrupt.c: 149: mi_cnt=0x00;
 15286  0076  01A6               	clrf	_mi_cnt^(0+256)
 15287  0077  01A7               	clrf	(_mi_cnt+1)^(0+256)
 15288                           
 15289                           ;interrupt.c: 151: if(ho_cnt<24)
 15290  0078  027D               	subwf	_ho_cnt+1,w
 15291  0079  3018               	movlw	24
 15292  007A  1903               	skipnz
 15293  007B  027C               	subwf	_ho_cnt,w
 15294  007C  1803               	skipnc
 15295  007D  2882               	goto	i1l15620
 15296                           
 15297                           ;interrupt.c: 152: {
 15298                           ;interrupt.c: 153: ho_cnt++;
 15299  007E  0AFC               	incf	_ho_cnt,f
 15300  007F  1903               	skipnz
 15301  0080  0AFD               	incf	_ho_cnt+1,f
 15302                           
 15303                           ;interrupt.c: 154: }
 15304  0081  2884               	goto	i1l15622
 15305  0082                     i1l15620:	
 15306                           
 15307                           ;interrupt.c: 155: else
 15308                           ;interrupt.c: 156: {
 15309                           ;interrupt.c: 157: ho_cnt=0x00;
 15310  0082  01FC               	clrf	_ho_cnt
 15311  0083  01FD               	clrf	_ho_cnt+1
 15312  0084                     i1l15622:	
 15313                           
 15314                           ;interrupt.c: 158: }
 15315                           ;interrupt.c: 159: }
 15316                           ;interrupt.c: 160: }
 15317                           ;interrupt.c: 161: }
 15318                           ;interrupt.c: 162: }
 15319                           ;interrupt.c: 164: if(open_an0_time==0x01)
 15320  0084  0022               	movlb	2	; select bank2
 15321  0085  0B38               	decfsz	_open_an0_time^(0+256),w
 15322  0086  2897               	goto	i1l15632
 15323                           
 15324                           ;interrupt.c: 165: {
 15325                           ;interrupt.c: 166: an0_time_count++;
 15326  0087  0023               	movlb	3	; select bank3
 15327  0088  0AA6               	incf	_an0_time_count^(0+384),f
 15328  0089  1903               	skipnz
 15329  008A  0AA7               	incf	(_an0_time_count+1)^(0+384),f
 15330                           
 15331                           ;interrupt.c: 168: if(an0_time_count>=1000)
 15332  008B  3003               	movlw	3
 15333  008C  0227               	subwf	(_an0_time_count+1)^(0+384),w
 15334  008D  30E8               	movlw	232
 15335  008E  1903               	skipnz
 15336  008F  0226               	subwf	_an0_time_count^(0+384),w
 15337  0090  1C03               	skipc
 15338  0091  2897               	goto	i1l15632
 15339                           
 15340                           ;interrupt.c: 169: {
 15341                           ;interrupt.c: 170: an0_time_count=0x00;
 15342  0092  01A6               	clrf	_an0_time_count^(0+384)
 15343  0093  01A7               	clrf	(_an0_time_count+1)^(0+384)
 15344                           
 15345                           ;interrupt.c: 172: handle_an0_process_flag=0x01;
 15346  0094  0022               	movlb	2	; select bank2
 15347  0095  01AB               	clrf	_handle_an0_process_flag^(0+256)
 15348  0096  0AAB               	incf	_handle_an0_process_flag^(0+256),f
 15349  0097                     i1l15632:	
 15350                           
 15351                           ;interrupt.c: 173: }
 15352                           ;interrupt.c: 175: }
 15353                           ;interrupt.c: 176: if(open_an1_time==0x01)
 15354  0097  0022               	movlb	2	; select bank2
 15355  0098  0B3A               	decfsz	_open_an1_time^(0+256),w
 15356  0099  28AA               	goto	i1l15642
 15357                           
 15358                           ;interrupt.c: 177: {
 15359                           ;interrupt.c: 178: an1_time_count++;
 15360  009A  0023               	movlb	3	; select bank3
 15361  009B  0AA8               	incf	_an1_time_count^(0+384),f
 15362  009C  1903               	skipnz
 15363  009D  0AA9               	incf	(_an1_time_count+1)^(0+384),f
 15364                           
 15365                           ;interrupt.c: 180: if(an1_time_count>=1000)
 15366  009E  3003               	movlw	3
 15367  009F  0229               	subwf	(_an1_time_count+1)^(0+384),w
 15368  00A0  30E8               	movlw	232
 15369  00A1  1903               	skipnz
 15370  00A2  0228               	subwf	_an1_time_count^(0+384),w
 15371  00A3  1C03               	skipc
 15372  00A4  28AA               	goto	i1l15642
 15373                           
 15374                           ;interrupt.c: 181: {
 15375                           ;interrupt.c: 182: an1_time_count=0x00;
 15376  00A5  01A8               	clrf	_an1_time_count^(0+384)
 15377  00A6  01A9               	clrf	(_an1_time_count+1)^(0+384)
 15378                           
 15379                           ;interrupt.c: 184: handle_an1_process_flag=0x01;
 15380  00A7  0022               	movlb	2	; select bank2
 15381  00A8  01AD               	clrf	_handle_an1_process_flag^(0+256)
 15382  00A9  0AAD               	incf	_handle_an1_process_flag^(0+256),f
 15383  00AA                     i1l15642:	
 15384                           
 15385                           ;interrupt.c: 185: }
 15386                           ;interrupt.c: 187: }
 15387                           ;interrupt.c: 188: if(open_an2_time==0x01)
 15388  00AA  0022               	movlb	2	; select bank2
 15389  00AB  0B3B               	decfsz	_open_an2_time^(0+256),w
 15390  00AC  28BD               	goto	i1l15652
 15391                           
 15392                           ;interrupt.c: 189: {
 15393                           ;interrupt.c: 190: an2_time_count++;
 15394  00AD  0023               	movlb	3	; select bank3
 15395  00AE  0AAA               	incf	_an2_time_count^(0+384),f
 15396  00AF  1903               	skipnz
 15397  00B0  0AAB               	incf	(_an2_time_count+1)^(0+384),f
 15398                           
 15399                           ;interrupt.c: 192: if(an2_time_count>=5)
 15400  00B1  3000               	movlw	0
 15401  00B2  022B               	subwf	(_an2_time_count+1)^(0+384),w
 15402  00B3  3005               	movlw	5
 15403  00B4  1903               	skipnz
 15404  00B5  022A               	subwf	_an2_time_count^(0+384),w
 15405  00B6  1C03               	skipc
 15406  00B7  28BD               	goto	i1l15652
 15407                           
 15408                           ;interrupt.c: 193: {
 15409                           ;interrupt.c: 194: an2_time_count=0x00;
 15410  00B8  01AA               	clrf	_an2_time_count^(0+384)
 15411  00B9  01AB               	clrf	(_an2_time_count+1)^(0+384)
 15412                           
 15413                           ;interrupt.c: 196: handle_an2_process_flag=0x01;
 15414  00BA  0022               	movlb	2	; select bank2
 15415  00BB  01AE               	clrf	_handle_an2_process_flag^(0+256)
 15416  00BC  0AAE               	incf	_handle_an2_process_flag^(0+256),f
 15417  00BD                     i1l15652:	
 15418                           
 15419                           ;interrupt.c: 197: }
 15420                           ;interrupt.c: 199: }
 15421                           ;interrupt.c: 201: if(open_an3_time==0x01)
 15422  00BD  0022               	movlb	2	; select bank2
 15423  00BE  0B3C               	decfsz	_open_an3_time^(0+256),w
 15424  00BF  28D0               	goto	i1l15662
 15425                           
 15426                           ;interrupt.c: 202: {
 15427                           ;interrupt.c: 203: an3_time_count++;
 15428  00C0  0023               	movlb	3	; select bank3
 15429  00C1  0AAC               	incf	_an3_time_count^(0+384),f
 15430  00C2  1903               	skipnz
 15431  00C3  0AAD               	incf	(_an3_time_count+1)^(0+384),f
 15432                           
 15433                           ;interrupt.c: 205: if(an3_time_count>=5)
 15434  00C4  3000               	movlw	0
 15435  00C5  022D               	subwf	(_an3_time_count+1)^(0+384),w
 15436  00C6  3005               	movlw	5
 15437  00C7  1903               	skipnz
 15438  00C8  022C               	subwf	_an3_time_count^(0+384),w
 15439  00C9  1C03               	skipc
 15440  00CA  28D0               	goto	i1l15662
 15441                           
 15442                           ;interrupt.c: 206: {
 15443                           ;interrupt.c: 207: an3_time_count=0x00;
 15444  00CB  01AC               	clrf	_an3_time_count^(0+384)
 15445  00CC  01AD               	clrf	(_an3_time_count+1)^(0+384)
 15446                           
 15447                           ;interrupt.c: 209: handle_an3_process_flag=0x01;
 15448  00CD  0022               	movlb	2	; select bank2
 15449  00CE  01AF               	clrf	_handle_an3_process_flag^(0+256)
 15450  00CF  0AAF               	incf	_handle_an3_process_flag^(0+256),f
 15451  00D0                     i1l15662:	
 15452                           
 15453                           ;interrupt.c: 210: }
 15454                           ;interrupt.c: 212: }
 15455                           ;interrupt.c: 215: if(open_an9_time==0x01)
 15456  00D0  0022               	movlb	2	; select bank2
 15457  00D1  0B3E               	decfsz	_open_an9_time^(0+256),w
 15458  00D2  28E3               	goto	i1l15672
 15459                           
 15460                           ;interrupt.c: 216: {
 15461                           ;interrupt.c: 217: an9_time_count++;
 15462  00D3  0023               	movlb	3	; select bank3
 15463  00D4  0AB0               	incf	_an9_time_count^(0+384),f
 15464  00D5  1903               	skipnz
 15465  00D6  0AB1               	incf	(_an9_time_count+1)^(0+384),f
 15466                           
 15467                           ;interrupt.c: 219: if(an9_time_count>=5)
 15468  00D7  3000               	movlw	0
 15469  00D8  0231               	subwf	(_an9_time_count+1)^(0+384),w
 15470  00D9  3005               	movlw	5
 15471  00DA  1903               	skipnz
 15472  00DB  0230               	subwf	_an9_time_count^(0+384),w
 15473  00DC  1C03               	skipc
 15474  00DD  28E3               	goto	i1l15672
 15475                           
 15476                           ;interrupt.c: 220: {
 15477                           ;interrupt.c: 221: an9_time_count=0x00;
 15478  00DE  01B0               	clrf	_an9_time_count^(0+384)
 15479  00DF  01B1               	clrf	(_an9_time_count+1)^(0+384)
 15480                           
 15481                           ;interrupt.c: 223: handle_an9_process_flag=0x01;
 15482  00E0  0022               	movlb	2	; select bank2
 15483  00E1  01B1               	clrf	_handle_an9_process_flag^(0+256)
 15484  00E2  0AB1               	incf	_handle_an9_process_flag^(0+256),f
 15485  00E3                     i1l15672:	
 15486                           
 15487                           ;interrupt.c: 226: }
 15488                           ;interrupt.c: 228: }
 15489                           ;interrupt.c: 230: if(open_an4_time==0x01)
 15490  00E3  0022               	movlb	2	; select bank2
 15491  00E4  0B3D               	decfsz	_open_an4_time^(0+256),w
 15492  00E5  28F6               	goto	i1l15682
 15493                           
 15494                           ;interrupt.c: 231: {
 15495                           ;interrupt.c: 232: an4_time_count++;
 15496  00E6  0023               	movlb	3	; select bank3
 15497  00E7  0AAE               	incf	_an4_time_count^(0+384),f
 15498  00E8  1903               	skipnz
 15499  00E9  0AAF               	incf	(_an4_time_count+1)^(0+384),f
 15500                           
 15501                           ;interrupt.c: 234: if(an4_time_count>=5)
 15502  00EA  3000               	movlw	0
 15503  00EB  022F               	subwf	(_an4_time_count+1)^(0+384),w
 15504  00EC  3005               	movlw	5
 15505  00ED  1903               	skipnz
 15506  00EE  022E               	subwf	_an4_time_count^(0+384),w
 15507  00EF  1C03               	skipc
 15508  00F0  28F6               	goto	i1l15682
 15509                           
 15510                           ;interrupt.c: 235: {
 15511                           ;interrupt.c: 236: an4_time_count=0x00;
 15512  00F1  01AE               	clrf	_an4_time_count^(0+384)
 15513  00F2  01AF               	clrf	(_an4_time_count+1)^(0+384)
 15514                           
 15515                           ;interrupt.c: 238: handle_an4_process_flag=0x01;
 15516  00F3  0022               	movlb	2	; select bank2
 15517  00F4  01B0               	clrf	_handle_an4_process_flag^(0+256)
 15518  00F5  0AB0               	incf	_handle_an4_process_flag^(0+256),f
 15519  00F6                     i1l15682:	
 15520                           
 15521                           ;interrupt.c: 239: }
 15522                           ;interrupt.c: 241: }
 15523                           ;interrupt.c: 243: if(open_an10_time==0x01)
 15524  00F6  0022               	movlb	2	; select bank2
 15525  00F7  0B39               	decfsz	_open_an10_time^(0+256),w
 15526  00F8  2909               	goto	i1l15692
 15527                           
 15528                           ;interrupt.c: 244: {
 15529                           ;interrupt.c: 245: an10_time_count++;
 15530  00F9  0024               	movlb	4	; select bank4
 15531  00FA  0ABC               	incf	_an10_time_count^(0+512),f
 15532  00FB  1903               	skipnz
 15533  00FC  0ABD               	incf	(_an10_time_count+1)^(0+512),f
 15534                           
 15535                           ;interrupt.c: 247: if(an10_time_count>=2)
 15536  00FD  3000               	movlw	0
 15537  00FE  023D               	subwf	(_an10_time_count+1)^(0+512),w
 15538  00FF  3002               	movlw	2
 15539  0100  1903               	skipnz
 15540  0101  023C               	subwf	_an10_time_count^(0+512),w
 15541  0102  1C03               	skipc
 15542  0103  2909               	goto	i1l15692
 15543                           
 15544                           ;interrupt.c: 248: {
 15545                           ;interrupt.c: 249: an10_time_count=0x00;
 15546  0104  01BC               	clrf	_an10_time_count^(0+512)
 15547  0105  01BD               	clrf	(_an10_time_count+1)^(0+512)
 15548                           
 15549                           ;interrupt.c: 251: handle_an10_process_flag=0x01;
 15550  0106  0022               	movlb	2	; select bank2
 15551  0107  01AC               	clrf	_handle_an10_process_flag^(0+256)
 15552  0108  0AAC               	incf	_handle_an10_process_flag^(0+256),f
 15553  0109                     i1l15692:	
 15554                           
 15555                           ;interrupt.c: 252: }
 15556                           ;interrupt.c: 254: }
 15557                           ;interrupt.c: 257: if (uart1_time_count > 0x00)
 15558  0109  0021               	movlb	1	; select bank1
 15559  010A  083C               	movf	_uart1_time_count^(0+128),w
 15560  010B  1903               	btfsc	3,2
 15561  010C  2984               	goto	i1l15758
 15562                           
 15563                           ;interrupt.c: 258: {
 15564                           ;interrupt.c: 259: uart1_time_count--;
 15565  010D  0BBC               	decfsz	_uart1_time_count^(0+128),f
 15566                           
 15567                           ;interrupt.c: 261: if(uart1_time_count==0)
 15568  010E  2984               	goto	i1l15758
 15569                           
 15570                           ;interrupt.c: 262: {
 15571                           ;interrupt.c: 263: if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA1)&&(uart1_rx_
      +                          buf[4]==0xAA))
 15572  010F  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15573  0110  3A05               	xorlw	5
 15574  0111  1D03               	skipz
 15575  0112  2920               	goto	i1l15704
 15576  0113  0028               	movlb	8	; select bank8
 15577  0114  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15578  0115  3AA1               	xorlw	161
 15579  0116  1D03               	skipz
 15580  0117  2920               	goto	i1l15704
 15581  0118  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 15582  0119  3AAA               	xorlw	170
 15583  011A  1D03               	skipz
 15584  011B  2920               	goto	i1l15704
 15585                           
 15586                           ;interrupt.c: 264: {
 15587                           ;interrupt.c: 265: rx_frame_kind=0x01;
 15588  011C  0022               	movlb	2	; select bank2
 15589  011D  01C5               	clrf	_rx_frame_kind^(0+256)
 15590  011E  0AC5               	incf	_rx_frame_kind^(0+256),f
 15591  011F  2931               	goto	i1l15712
 15592  0120                     i1l15704:	
 15593                           ;interrupt.c: 268: }
 15594                           
 15595                           ;interrupt.c: 267: uart1_receive_flag=TRUE;
 15596                           
 15597                           
 15598                           ;interrupt.c: 269: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA2)&&(uart
      +                          1_rx_buf[4]==0xAA))
 15599  0120  0021               	movlb	1	; select bank1
 15600  0121  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15601  0122  3A05               	xorlw	5
 15602  0123  1D03               	skipz
 15603  0124  2935               	goto	i1l15714
 15604  0125  0028               	movlb	8	; select bank8
 15605  0126  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15606  0127  3AA2               	xorlw	162
 15607  0128  1D03               	skipz
 15608  0129  2935               	goto	i1l15714
 15609  012A  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 15610  012B  3AAA               	xorlw	170
 15611  012C  1D03               	skipz
 15612  012D  2935               	goto	i1l15714
 15613                           
 15614                           ;interrupt.c: 270: {
 15615                           ;interrupt.c: 271: rx_frame_kind=0x02;
 15616  012E  3002               	movlw	2
 15617  012F                     L94:	
 15618  012F  0022               	movlb	2	; select bank2
 15619  0130  00C5               	movwf	_rx_frame_kind^(0+256)
 15620  0131                     i1l15712:	
 15621                           
 15622                           ;interrupt.c: 273: uart1_receive_flag=TRUE;
 15623  0131  01CC               	clrf	_uart1_receive_flag^(0+256)
 15624  0132  0ACC               	incf	_uart1_receive_flag^(0+256),f
 15625                           
 15626                           ;interrupt.c: 274: }
 15627  0133  0021               	movlb	1	; select bank1
 15628  0134  2984               	goto	i1l15758
 15629  0135                     i1l15714:	
 15630                           
 15631                           ;interrupt.c: 275: else if((uart1_receive_byte_count==21)&&(uart1_rx_buf[1]==0xA3)&&(uar
      +                          t1_rx_buf[20]==0xAA))
 15632  0135  0021               	movlb	1	; select bank1
 15633  0136  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15634  0137  3A15               	xorlw	21
 15635  0138  1D03               	skipz
 15636  0139  2945               	goto	i1l15724
 15637  013A  0028               	movlb	8	; select bank8
 15638  013B  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15639  013C  3AA3               	xorlw	163
 15640  013D  1D03               	skipz
 15641  013E  2945               	goto	i1l15724
 15642  013F  0834               	movf	(_uart1_rx_buf^(0+1024)+20),w
 15643  0140  3AAA               	xorlw	170
 15644  0141  1D03               	skipz
 15645  0142  2945               	goto	i1l15724
 15646                           
 15647                           ;interrupt.c: 276: {
 15648                           ;interrupt.c: 277: rx_frame_kind=0x03;
 15649  0143  3003               	movlw	3
 15650  0144  292F               	goto	L94
 15651  0145                     i1l15724:	
 15652                           
 15653                           ;interrupt.c: 281: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA4)&&(uart
      +                          1_rx_buf[4]==0xAA))
 15654  0145  0021               	movlb	1	; select bank1
 15655  0146  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15656  0147  3A05               	xorlw	5
 15657  0148  1D03               	skipz
 15658  0149  2955               	goto	i1l15734
 15659  014A  0028               	movlb	8	; select bank8
 15660  014B  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15661  014C  3AA4               	xorlw	164
 15662  014D  1D03               	skipz
 15663  014E  2955               	goto	i1l15734
 15664  014F  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 15665  0150  3AAA               	xorlw	170
 15666  0151  1D03               	skipz
 15667  0152  2955               	goto	i1l15734
 15668                           
 15669                           ;interrupt.c: 282: {
 15670                           ;interrupt.c: 283: rx_frame_kind=0x04;
 15671  0153  3004               	movlw	4
 15672  0154  292F               	goto	L94
 15673  0155                     i1l15734:	
 15674                           
 15675                           ;interrupt.c: 287: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA5)&&(uart
      +                          1_rx_buf[4]==0xAA))
 15676  0155  0021               	movlb	1	; select bank1
 15677  0156  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15678  0157  3A05               	xorlw	5
 15679  0158  1D03               	skipz
 15680  0159  2965               	goto	i1l15744
 15681  015A  0028               	movlb	8	; select bank8
 15682  015B  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15683  015C  3AA5               	xorlw	165
 15684  015D  1D03               	skipz
 15685  015E  2965               	goto	i1l15744
 15686  015F  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 15687  0160  3AAA               	xorlw	170
 15688  0161  1D03               	skipz
 15689  0162  2965               	goto	i1l15744
 15690                           
 15691                           ;interrupt.c: 288: {
 15692                           ;interrupt.c: 289: rx_frame_kind=0x05;
 15693  0163  3005               	movlw	5
 15694  0164  292F               	goto	L94
 15695  0165                     i1l15744:	
 15696                           
 15697                           ;interrupt.c: 293: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA6)&&(uart
      +                          1_rx_buf[4]==0xAA))
 15698  0165  0021               	movlb	1	; select bank1
 15699  0166  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15700  0167  3A05               	xorlw	5
 15701  0168  1D03               	skipz
 15702  0169  2975               	goto	i1l258
 15703  016A  0028               	movlb	8	; select bank8
 15704  016B  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 15705  016C  3AA6               	xorlw	166
 15706  016D  1D03               	skipz
 15707  016E  2975               	goto	i1l258
 15708  016F  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 15709  0170  3AAA               	xorlw	170
 15710  0171  1D03               	skipz
 15711  0172  2975               	goto	i1l258
 15712                           
 15713                           ;interrupt.c: 294: {
 15714                           ;interrupt.c: 295: rx_frame_kind=0x06;
 15715  0173  3006               	movlw	6
 15716  0174  292F               	goto	L94
 15717  0175                     i1l258:	
 15718                           
 15719                           ;interrupt.c: 299: else
 15720                           ;interrupt.c: 300: {
 15721                           ;interrupt.c: 301: if (RCSTAbits.FERR || RCSTAbits.OERR)
 15722  0175  0023               	movlb	3	; select bank3
 15723  0176  191D               	btfsc	29,2	;volatile
 15724  0177  297A               	goto	i1l262
 15725  0178  1C9D               	btfss	29,1	;volatile
 15726  0179  2982               	goto	i1l15756
 15727  017A                     i1l262:	
 15728                           
 15729                           ;interrupt.c: 302: {
 15730                           ;interrupt.c: 303: RCSTAbits.CREN = 0x00;
 15731  017A  121D               	bcf	29,4	;volatile
 15732                           
 15733                           ;interrupt.c: 304: RCSTAbits.SPEN = 0x00;
 15734  017B  139D               	bcf	29,7	;volatile
 15735                           
 15736                           ;interrupt.c: 305: __nop();
 15737  017C  0000               	nop
 15738                           
 15739                           ;interrupt.c: 306: __nop();
 15740  017D  0000               	nop
 15741                           
 15742                           ;interrupt.c: 307: __nop();
 15743  017E  0000               	nop
 15744                           
 15745                           ;interrupt.c: 308: RCSTAbits.CREN = 0x01;
 15746  017F  0023               	movlb	3	; select bank3
 15747  0180  161D               	bsf	29,4	;volatile
 15748                           
 15749                           ;interrupt.c: 309: RCSTAbits.SPEN = 0x01;
 15750  0181  179D               	bsf	29,7	;volatile
 15751  0182                     i1l15756:	
 15752                           
 15753                           ;interrupt.c: 310: }
 15754                           ;interrupt.c: 312: uart1_receive_byte_count=0x00;
 15755  0182  0021               	movlb	1	; select bank1
 15756  0183  01BB               	clrf	_uart1_receive_byte_count^(0+128)
 15757  0184                     i1l15758:	
 15758                           
 15759                           ;interrupt.c: 313: }
 15760                           ;interrupt.c: 314: }
 15761                           ;interrupt.c: 316: }
 15762                           ;interrupt.c: 319: if (uart_send_delay_timer > 0x00)
 15763  0184  0022               	movlb	2	; select bank2
 15764  0185  084E               	movf	_uart_send_delay_timer^(0+256),w
 15765  0186  1903               	btfsc	3,2
 15766  0187  298C               	goto	i1l15764
 15767                           
 15768                           ;interrupt.c: 320: {
 15769                           ;interrupt.c: 321: uart_send_delay_timer--;
 15770  0188  0BCE               	decfsz	_uart_send_delay_timer^(0+256),f
 15771                           
 15772                           ;interrupt.c: 323: if (uart_send_delay_timer == 0x00)
 15773  0189  298C               	goto	i1l15764
 15774                           
 15775                           ;interrupt.c: 324: {
 15776                           ;interrupt.c: 325: TXIE = 0x01;
 15777  018A  0021               	movlb	1	; select bank1
 15778  018B  1611               	bsf	17,4	;volatile
 15779  018C                     i1l15764:	
 15780                           
 15781                           ;interrupt.c: 326: }
 15782                           ;interrupt.c: 328: }
 15783                           ;interrupt.c: 330: if (uart_send_end_flag == 0x01)
 15784  018C  0022               	movlb	2	; select bank2
 15785  018D  0B4F               	decfsz	_uart_send_end_flag^(0+256),w
 15786  018E  2994               	goto	i1l15770
 15787                           
 15788                           ;interrupt.c: 331: {
 15789                           ;interrupt.c: 332: if (TXSTAbits.TRMT)
 15790  018F  0023               	movlb	3	; select bank3
 15791  0190  1C9E               	btfss	30,1	;volatile
 15792  0191  2994               	goto	i1l15770
 15793                           
 15794                           ;interrupt.c: 333: {
 15795                           ;interrupt.c: 335: uart_send_end_flag = 0x00;
 15796  0192  0022               	movlb	2	; select bank2
 15797  0193  01CF               	clrf	_uart_send_end_flag^(0+256)
 15798  0194                     i1l15770:	
 15799                           
 15800                           ;interrupt.c: 337: }
 15801                           ;interrupt.c: 339: }
 15802                           ;interrupt.c: 343: if(ird_receive_time_count>0)
 15803  0194  0022               	movlb	2	; select bank2
 15804  0195  0836               	movf	_ird_receive_time_count^(0+256),w
 15805  0196  1903               	btfsc	3,2
 15806  0197  29A7               	goto	i1l15784
 15807                           
 15808                           ;interrupt.c: 344: {
 15809                           ;interrupt.c: 345: ird_receive_time_count--;
 15810  0198  0BB6               	decfsz	_ird_receive_time_count^(0+256),f
 15811                           
 15812                           ;interrupt.c: 347: if(ird_receive_time_count==0x00)
 15813  0199  29A7               	goto	i1l15784
 15814                           
 15815                           ;interrupt.c: 348: {
 15816                           ;interrupt.c: 349: if(receive_bit_count==32)
 15817  019A  0844               	movf	_receive_bit_count^(0+256),w
 15818  019B  3A20               	xorlw	32
 15819  019C  1D03               	skipz
 15820  019D  29A2               	goto	i1l15780
 15821                           
 15822                           ;interrupt.c: 350: {
 15823                           ;interrupt.c: 351: ird_receive_flag=0x01;
 15824  019E  01B5               	clrf	_ird_receive_flag^(0+256)
 15825  019F  0AB5               	incf	_ird_receive_flag^(0+256),f
 15826                           
 15827                           ;interrupt.c: 353: receive_bit_count=0x00;
 15828  01A0  01C4               	clrf	_receive_bit_count^(0+256)
 15829                           
 15830                           ;interrupt.c: 354: }
 15831  01A1  29A7               	goto	i1l15784
 15832  01A2                     i1l15780:	
 15833                           
 15834                           ;interrupt.c: 355: else
 15835                           ;interrupt.c: 356: {
 15836                           ;interrupt.c: 357: receive_bit_count=0x00;
 15837  01A2  01C4               	clrf	_receive_bit_count^(0+256)
 15838                           
 15839                           ;interrupt.c: 359: ird_status=0x00;
 15840  01A3  01B7               	clrf	_ird_status^(0+256)
 15841                           
 15842                           ;interrupt.c: 361: TMR0=0;
 15843  01A4  0020               	movlb	0	; select bank0
 15844  01A5  0195               	clrf	21	;volatile
 15845                           
 15846                           ;interrupt.c: 363: TMR0IF = 0;
 15847  01A6  110B               	bcf	11,2	;volatile
 15848  01A7                     i1l15784:	
 15849                           
 15850                           ;interrupt.c: 365: }
 15851                           ;interrupt.c: 366: }
 15852                           ;interrupt.c: 367: }
 15853                           ;interrupt.c: 371: }
 15854                           ;interrupt.c: 375: if (TXIE && TXIF)
 15855  01A7  0021               	movlb	1	; select bank1
 15856  01A8  1E11               	btfss	17,4	;volatile
 15857  01A9  29C4               	goto	i1l271
 15858  01AA  0020               	movlb	0	; select bank0
 15859  01AB  1E11               	btfss	17,4	;volatile
 15860  01AC  29C4               	goto	i1l271
 15861                           
 15862                           ;interrupt.c: 376: {
 15863                           ;interrupt.c: 377: if (uart_send_byte_count > 0x00)
 15864  01AD  0022               	movlb	2	; select bank2
 15865  01AE  084D               	movf	_uart_send_byte_count^(0+256),w
 15866  01AF  1903               	btfsc	3,2
 15867  01B0  29BB               	goto	i1l15796
 15868                           
 15869                           ;interrupt.c: 378: {
 15870                           ;interrupt.c: 379: uart_send_byte_count--;
 15871  01B1  03CD               	decf	_uart_send_byte_count^(0+256),f
 15872                           
 15873                           ;interrupt.c: 380: TXREG = *uart_send_point;
 15874  01B2  0850               	movf	_uart_send_point^(0+256),w
 15875  01B3  0086               	movwf	6
 15876  01B4  0187               	clrf	7
 15877  01B5  0801               	movf	1,w
 15878  01B6  0023               	movlb	3	; select bank3
 15879  01B7  009A               	movwf	26	;volatile
 15880                           
 15881                           ;interrupt.c: 381: uart_send_point++;
 15882  01B8  0022               	movlb	2	; select bank2
 15883  01B9  0AD0               	incf	_uart_send_point^(0+256),f
 15884                           
 15885                           ;interrupt.c: 382: }
 15886  01BA  29C4               	goto	i1l271
 15887  01BB                     i1l15796:	
 15888                           
 15889                           ;interrupt.c: 383: else if (uart_send_byte_count == 0x00)
 15890  01BB  08CD               	movf	_uart_send_byte_count^(0+256),f
 15891  01BC  1D03               	skipz
 15892  01BD  29C3               	goto	i1l274
 15893                           
 15894                           ;interrupt.c: 384: {
 15895                           ;interrupt.c: 385: uart_send_end_flag = 0x01;
 15896  01BE  01CF               	clrf	_uart_send_end_flag^(0+256)
 15897  01BF  0ACF               	incf	_uart_send_end_flag^(0+256),f
 15898                           
 15899                           ;interrupt.c: 386: TXIE = 0x00;
 15900  01C0  0021               	movlb	1	; select bank1
 15901  01C1  1211               	bcf	17,4	;volatile
 15902                           
 15903                           ;interrupt.c: 387: }
 15904  01C2  29C4               	goto	i1l271
 15905  01C3                     i1l274:	
 15906                           
 15907                           ;interrupt.c: 388: else
 15908                           ;interrupt.c: 389: {
 15909                           ;interrupt.c: 390: __nop();
 15910  01C3  0000               	nop
 15911  01C4                     i1l271:	
 15912                           
 15913                           ;interrupt.c: 391: }
 15914                           ;interrupt.c: 392: }
 15915                           ;interrupt.c: 394: if(RCIF && RCIE)
 15916  01C4  0020               	movlb	0	; select bank0
 15917  01C5  1E91               	btfss	17,5	;volatile
 15918  01C6  29E9               	goto	i1l15812
 15919  01C7  0021               	movlb	1	; select bank1
 15920  01C8  1E91               	btfss	17,5	;volatile
 15921  01C9  29E9               	goto	i1l15812
 15922                           
 15923                           ;interrupt.c: 395: {
 15924                           ;interrupt.c: 397: r1_data=RCREG;
 15925  01CA  0023               	movlb	3	; select bank3
 15926  01CB  0819               	movf	25,w	;volatile
 15927  01CC  0020               	movlb	0	; select bank0
 15928  01CD  00A0               	movwf	isr@r1_data
 15929                           
 15930                           ;interrupt.c: 399: uart1_time_count=0x0A;
 15931  01CE  300A               	movlw	10
 15932  01CF  0021               	movlb	1	; select bank1
 15933  01D0  00BC               	movwf	_uart1_time_count^(0+128)
 15934                           
 15935                           ;interrupt.c: 401: if( (uart1_receive_byte_count<21)&&(uart1_receive_flag==FALSE) )
 15936  01D1  3015               	movlw	21
 15937  01D2  023B               	subwf	_uart1_receive_byte_count^(0+128),w
 15938  01D3  1803               	skipnc
 15939  01D4  29E9               	goto	i1l15812
 15940  01D5  0022               	movlb	2	; select bank2
 15941  01D6  08CC               	movf	_uart1_receive_flag^(0+256),f
 15942  01D7  1D03               	skipz
 15943  01D8  29E9               	goto	i1l15812
 15944                           
 15945                           ;interrupt.c: 402: {
 15946                           ;interrupt.c: 403: uart1_rx_buf[uart1_receive_byte_count]=r1_data;
 15947  01D9  0021               	movlb	1	; select bank1
 15948  01DA  083B               	movf	_uart1_receive_byte_count^(0+128),w
 15949  01DB  3E20               	addlw	_uart1_rx_buf& (0+255)
 15950  01DC  0086               	movwf	6
 15951  01DD  3004               	movlw	4	; select bank8/9
 15952  01DE  0087               	movwf	7
 15953  01DF  0020               	movlb	0	; select bank0
 15954  01E0  0820               	movf	isr@r1_data,w
 15955  01E1  0081               	movwf	1
 15956                           
 15957                           ;interrupt.c: 405: if(uart1_rx_buf[0]==0x55)
 15958  01E2  0028               	movlb	8	; select bank8
 15959  01E3  0820               	movf	_uart1_rx_buf^(0+1024),w
 15960  01E4  3A55               	xorlw	85
 15961  01E5  1D03               	skipz
 15962  01E6  29E9               	goto	i1l15812
 15963                           
 15964                           ;interrupt.c: 406: {
 15965                           ;interrupt.c: 407: uart1_receive_byte_count++;
 15966  01E7  0021               	movlb	1	; select bank1
 15967  01E8  0ABB               	incf	_uart1_receive_byte_count^(0+128),f
 15968  01E9                     i1l15812:	
 15969                           
 15970                           ;interrupt.c: 408: }
 15971                           ;interrupt.c: 409: }
 15972                           ;interrupt.c: 413: }
 15973                           ;interrupt.c: 416: if(C1IE && C1IF)
 15974  01E9  0021               	movlb	1	; select bank1
 15975  01EA  1E92               	btfss	18,5	;volatile
 15976  01EB  2A06               	goto	i1l15824
 15977  01EC  0020               	movlb	0	; select bank0
 15978  01ED  1E92               	btfss	18,5	;volatile
 15979  01EE  2A06               	goto	i1l15824
 15980                           
 15981                           ;interrupt.c: 417: {
 15982                           ;interrupt.c: 418: C1IF=0;
 15983  01EF  1292               	bcf	18,5	;volatile
 15984                           
 15985                           ;interrupt.c: 420: handle_short_flag=0x01;
 15986  01F0  0022               	movlb	2	; select bank2
 15987  01F1  3003               	movlw	3
 15988  01F2  01B3               	clrf	_handle_short_flag^(0+256)
 15989  01F3  0AB3               	incf	_handle_short_flag^(0+256),f
 15990                           
 15991                           ;interrupt.c: 422: discharge_index=0x03;
 15992  01F4  0021               	movlb	1	; select bank1
 15993  01F5  00B5               	movwf	_discharge_index^(0+128)
 15994                           
 15995                           ;interrupt.c: 424: (LATCbits.LATC3 = 0x00);
 15996  01F6  0022               	movlb	2	; select bank2
 15997  01F7  118E               	bcf	14,3	;volatile
 15998                           
 15999                           ;interrupt.c: 426: bost_pwm_value=2;
 16000  01F8  3002               	movlw	2
 16001  01F9  0021               	movlb	1	; select bank1
 16002  01FA  00A4               	movwf	_bost_pwm_value^(0+128)
 16003  01FB  01A5               	clrf	(_bost_pwm_value+1)^(0+128)
 16004                           
 16005                           ;interrupt.c: 428: Set_Bost_Pwm_Duty(bost_pwm_value);
 16006  01FC  0825               	movf	(_bost_pwm_value+1)^(0+128),w
 16007  01FD  00F1               	movwf	i1Set_Bost_Pwm_Duty@dduty+1
 16008  01FE  0824               	movf	_bost_pwm_value^(0+128),w
 16009  01FF  00F0               	movwf	i1Set_Bost_Pwm_Duty@dduty
 16010  0200  318F  27D9  3180   	fcall	i1_Set_Bost_Pwm_Duty
 16011                           
 16012                           ;interrupt.c: 430: Disable_Bost_Pwm();
 16013  0203  3188  2084  3180   	fcall	i1_Disable_Bost_Pwm
 16014  0206                     i1l15824:	
 16015                           
 16016                           ;interrupt.c: 432: }
 16017                           ;interrupt.c: 434: if(IOCIE && IOCIF)
 16018  0206  198B               	btfsc	11,3	;volatile
 16019  0207  1C0B               	btfss	11,0	;volatile
 16020  0208  0009               	retfie
 16021                           
 16022                           ;interrupt.c: 435: {
 16023                           ;interrupt.c: 436: unsigned int time_cnt;
 16024                           ;interrupt.c: 438: if(IOCBF4)
 16025  0209  0027               	movlb	7	; select bank7
 16026  020A  1A16               	btfsc	22,4	;volatile
 16027                           
 16028                           ;interrupt.c: 439: {
 16029                           ;interrupt.c: 440: IOCBF4=0;
 16030  020B  1216               	bcf	22,4	;volatile
 16031                           
 16032                           ;interrupt.c: 441: }
 16033                           ;interrupt.c: 443: if(IOCBF7)
 16034  020C  1F96               	btfss	22,7	;volatile
 16035  020D  0009               	retfie
 16036                           
 16037                           ;interrupt.c: 444: {
 16038                           ;interrupt.c: 445: IOCBF7 = 0;
 16039  020E  1396               	bcf	22,7	;volatile
 16040                           
 16041                           ;interrupt.c: 447: ird_receive_time_count=150;
 16042  020F  3096               	movlw	150
 16043  0210  0022               	movlb	2	; select bank2
 16044  0211  00B6               	movwf	_ird_receive_time_count^(0+256)
 16045                           
 16046                           ;interrupt.c: 449: if((receive_bit_count<32)&&(ird_receive_flag==0x00))
 16047  0212  3020               	movlw	32
 16048  0213  0244               	subwf	_receive_bit_count^(0+256),w
 16049  0214  1803               	skipnc
 16050  0215  0009               	retfie
 16051  0216  08B5               	movf	_ird_receive_flag^(0+256),f
 16052  0217  1D03               	skipz
 16053  0218  0009               	retfie
 16054                           
 16055                           ;interrupt.c: 450: {
 16056                           ;interrupt.c: 451: if(ird_status==0x00)
 16057  0219  08B7               	movf	_ird_status^(0+256),f
 16058  021A  1D03               	skipz
 16059  021B  2A2A               	goto	i1l15846
 16060                           
 16061                           ;interrupt.c: 452: {
 16062                           ;interrupt.c: 453: ird_status=0x01;
 16063  021C  01B7               	clrf	_ird_status^(0+256)
 16064  021D  0AB7               	incf	_ird_status^(0+256),f
 16065  021E  2A26               	goto	L95
 16066  021F                     i1l15852:	
 16067                           ;interrupt.c: 455: TMR0=0;
 16068                           
 16069                           
 16070                           ;interrupt.c: 465: {
 16071                           ;interrupt.c: 466: receive_bit_count=0x00;
 16072  021F  0022               	movlb	2	; select bank2
 16073  0220  01C4               	clrf	_receive_bit_count^(0+256)
 16074                           
 16075                           ;interrupt.c: 468: ird_data=0x00;
 16076  0221  0024               	movlb	4	; select bank4
 16077  0222  01EC               	clrf	_ird_data^(0+512)
 16078  0223  01ED               	clrf	(_ird_data+1)^(0+512)
 16079  0224  01EE               	clrf	(_ird_data+2)^(0+512)
 16080  0225  01EF               	clrf	(_ird_data+3)^(0+512)
 16081  0226                     L95:	
 16082                           
 16083                           ;interrupt.c: 470: TMR0=0;
 16084  0226  0020               	movlb	0	; select bank0
 16085  0227  0195               	clrf	21	;volatile
 16086                           
 16087                           ;interrupt.c: 457: TMR0IF = 0;
 16088  0228  110B               	bcf	11,2	;volatile
 16089                           
 16090                           ;interrupt.c: 459: }
 16091  0229  0009               	retfie
 16092  022A                     i1l15846:	
 16093                           
 16094                           ;interrupt.c: 460: else if(ird_status==0x01)
 16095  022A  0B37               	decfsz	_ird_status^(0+256),w
 16096  022B  0009               	retfie
 16097                           
 16098                           ;interrupt.c: 461: {
 16099                           ;interrupt.c: 462: time_cnt=TMR0;
 16100  022C  0020               	movlb	0	; select bank0
 16101  022D  0815               	movf	21,w	;volatile
 16102  022E  00A1               	movwf	isr@time_cnt
 16103  022F  01A2               	clrf	isr@time_cnt+1
 16104                           
 16105                           ;interrupt.c: 464: if(TMR0IF==1)
 16106  0230  190B               	btfsc	11,2	;volatile
 16107  0231  2A1F               	goto	i1l15852
 16108                           
 16109                           ;interrupt.c: 476: else if((time_cnt>20)&&(time_cnt<50))
 16110  0232  3000               	movlw	0
 16111  0233  0222               	subwf	isr@time_cnt+1,w
 16112  0234  3015               	movlw	21
 16113  0235  1903               	skipnz
 16114  0236  0221               	subwf	isr@time_cnt,w
 16115  0237  3000               	movlw	0
 16116  0238  1C03               	skipc
 16117  0239  2A49               	goto	L96
 16118  023A  0222               	subwf	isr@time_cnt+1,w
 16119  023B  3032               	movlw	50
 16120  023C  1903               	skipnz
 16121  023D  0221               	subwf	isr@time_cnt,w
 16122  023E  1803               	skipnc
 16123  023F  2A48               	goto	i1l15868
 16124                           
 16125                           ;interrupt.c: 477: {
 16126                           ;interrupt.c: 478: receive_bit_count++;
 16127  0240  0022               	movlb	2	; select bank2
 16128  0241  0AC4               	incf	_receive_bit_count^(0+256),f
 16129                           
 16130                           ;interrupt.c: 480: ird_data=ird_data<<1;
 16131  0242  0024               	movlb	4	; select bank4
 16132  0243  35EC               	lslf	_ird_data^(0+512),f
 16133  0244  0DED               	rlf	(_ird_data+1)^(0+512),f
 16134  0245  0DEE               	rlf	(_ird_data+2)^(0+512),f
 16135  0246  0DEF               	rlf	(_ird_data+3)^(0+512),f
 16136  0247  2A26               	goto	L95
 16137  0248                     i1l15868:	
 16138                           
 16139                           ;interrupt.c: 486: else if((time_cnt>50)&&(time_cnt<90))
 16140  0248  3000               	movlw	0
 16141  0249                     L96:	
 16142  0249  0222               	subwf	isr@time_cnt+1,w
 16143  024A  3033               	movlw	51
 16144  024B  1903               	skipnz
 16145  024C  0221               	subwf	isr@time_cnt,w
 16146  024D  1C03               	skipc
 16147  024E  0009               	retfie
 16148  024F  3000               	movlw	0
 16149  0250  0222               	subwf	isr@time_cnt+1,w
 16150  0251  305A               	movlw	90
 16151  0252  1903               	skipnz
 16152  0253  0221               	subwf	isr@time_cnt,w
 16153  0254  1803               	skipnc
 16154  0255  0009               	retfie
 16155                           
 16156                           ;interrupt.c: 487: {
 16157                           ;interrupt.c: 488: receive_bit_count++;
 16158  0256  0022               	movlb	2	; select bank2
 16159  0257  3001               	movlw	1
 16160  0258  0AC4               	incf	_receive_bit_count^(0+256),f
 16161                           
 16162                           ;interrupt.c: 490: ird_data=(ird_data<<1)+1;
 16163  0259  00F4               	movwf	??_isr
 16164  025A  01F5               	clrf	??_isr+1
 16165  025B  01F6               	clrf	??_isr+2
 16166  025C  01F7               	clrf	??_isr+3
 16167  025D  0024               	movlb	4	; select bank4
 16168  025E  086C               	movf	_ird_data^(0+512),w
 16169  025F  00F8               	movwf	??_isr+4
 16170  0260  086D               	movf	(_ird_data+1)^(0+512),w
 16171  0261  00F9               	movwf	??_isr+5
 16172  0262  086E               	movf	(_ird_data+2)^(0+512),w
 16173  0263  00FA               	movwf	??_isr+6
 16174  0264  086F               	movf	(_ird_data+3)^(0+512),w
 16175  0265  00FB               	movwf	??_isr+7
 16176  0266  35F8               	lslf	??_isr+4,f
 16177  0267  0DF9               	rlf	??_isr+5,f
 16178  0268  0DFA               	rlf	??_isr+6,f
 16179  0269  0DFB               	rlf	??_isr+7,f
 16180  026A  0878               	movf	??_isr+4,w
 16181  026B  07F4               	addwf	??_isr,f
 16182  026C  0879               	movf	??_isr+5,w
 16183  026D  3DF5               	addwfc	??_isr+1,f
 16184  026E  087A               	movf	??_isr+6,w
 16185  026F  3DF6               	addwfc	??_isr+2,f
 16186  0270  087B               	movf	??_isr+7,w
 16187  0271  3DF7               	addwfc	??_isr+3,f
 16188  0272  0877               	movf	??_isr+3,w
 16189  0273  00EF               	movwf	(_ird_data+3)^(0+512)
 16190  0274  0876               	movf	??_isr+2,w
 16191  0275  00EE               	movwf	(_ird_data+2)^(0+512)
 16192  0276  0875               	movf	??_isr+1,w
 16193  0277  00ED               	movwf	(_ird_data+1)^(0+512)
 16194  0278  0874               	movf	??_isr,w
 16195  0279  00EC               	movwf	_ird_data^(0+512)
 16196  027A  2A26               	goto	L95
 16197  027B                     __end_of_isr:	
 16198                           
 16199                           	psect	text50
 16200  0884                     __ptext50:	
 16201 ;; *************** function i1_Disable_Bost_Pwm *****************
 16202 ;; Defined at:
 16203 ;;		line 203 in file "D:\MCUProject\ZH-SL-F60\src\pwm.c"
 16204 ;; Parameters:    Size  Location     Type
 16205 ;;		None
 16206 ;; Auto vars:     Size  Location     Type
 16207 ;;		None
 16208 ;; Return value:  Size  Location     Type
 16209 ;;		None               void
 16210 ;; Registers used:
 16211 ;;		None
 16212 ;; Tracked objects:
 16213 ;;		On entry : 1F/6
 16214 ;;		On exit  : 1F/8
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;Total ram usage:        0 bytes
 16222 ;; Hardware stack levels used:    1
 16223 ;; This function calls:
 16224 ;;		Nothing
 16225 ;; This function is called by:
 16226 ;;		_isr
 16227 ;; This function uses a non-reentrant model
 16228 ;;
 16229                           
 16230                           
 16231                           ;psect for function i1_Disable_Bost_Pwm
 16232  0884                     i1_Disable_Bost_Pwm:	
 16233                           
 16234                           ;pwm.c: 205: TRISBbits.TRISB5 =1;
 16235                           
 16236                           ;incstack = 0
 16237                           ; Regs used in i1_Disable_Bost_Pwm: []
 16238  0884  0021               	movlb	1	; select bank1
 16239  0885  168D               	bsf	13,5	;volatile
 16240                           
 16241                           ;pwm.c: 207: TMR4ON=0;
 16242  0886  0028               	movlb	8	; select bank8
 16243  0887  1117               	bcf	23,2	;volatile
 16244  0888  0008               	return
 16245  0889                     __end_ofi1_Disable_Bost_Pwm:	
 16246  007E                     btemp	set	126	;btemp
 16247  007E                     wtemp	set	126
 16248  007E                     wtemp0	set	126
 16249  0080                     wtemp1	set	128
 16250  0082                     wtemp2	set	130
 16251  0084                     wtemp3	set	132
 16252  0086                     wtemp4	set	134
 16253  0088                     wtemp5	set	136
 16254  007F                     wtemp6	set	127
 16255  007E                     ttemp	set	126
 16256  007E                     ttemp0	set	126
 16257  0081                     ttemp1	set	129
 16258  0084                     ttemp2	set	132
 16259  0087                     ttemp3	set	135
 16260  007F                     ttemp4	set	127
 16261  007E                     ltemp	set	126
 16262  007E                     ltemp0	set	126
 16263  0082                     ltemp1	set	130
 16264  0086                     ltemp2	set	134
 16265  0080                     ltemp3	set	128
 16266  2370                     
 16267                           	psect	text5_split_1
 16268  027D                     l18376:	
 16269                           
 16270                           ;uart.c: 384: if(uart1_rx_buf[1]==0xA2)
 16271  027D  0028               	movlb	8	; select bank8
 16272  027E  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16273  027F  3AA2               	xorlw	162
 16274  0280  1D03               	skipz
 16275  0281  2E96               	goto	l18632
 16276                           
 16277                           ;uart.c: 385: {
 16278                           ;uart.c: 386: crc_in=crc16(&uart1_rx_buf[1],1);
 16279  0282  3021               	movlw	low (_uart1_rx_buf+1)
 16280  0283  27F5               	fcall	PL224	;call to abstracted procedure
 16281  0284  3189  212C  3182   	fcall	_crc16
 16282  0287  0824               	movf	?_crc16+1,w
 16283  0288  00E7               	movwf	handle_uart_rx_buf@crc_in+1
 16284                           
 16285                           ;uart.c: 388: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
 16286  0289  27C1  3182         	fcall	PL166	;call to abstracted procedure
 16287  028B  1D03               	skipz
 16288  028C  2E96               	goto	l18632
 16289                           
 16290                           ;uart.c: 389: {
 16291                           ;uart.c: 392: uart1_tx_buf[0]=0x55;
 16292  028D  3055               	movlw	85
 16293  028E  0027               	movlb	7	; select bank7
 16294  028F  00A0               	movwf	_uart1_tx_buf^(0+896)
 16295                           
 16296                           ;uart.c: 394: uart1_tx_buf[1]=0xB2;
 16297  0290  30B2               	movlw	178
 16298  0291  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 16299                           
 16300                           ;uart.c: 396: uart1_tx_buf[2] =(unsigned char )(light_pv/256);
 16301  0292  26EA  3182         	fcall	PL78	;call to abstracted procedure
 16302  0294  26BB               	fcall	PL26	;call to abstracted procedure
 16303  0295  31A6  26E5  3182   	fcall	___fldiv
 16304  0298  26C4               	fcall	PL28	;call to abstracted procedure
 16305  0299  319E  2698  3182   	fcall	___fltol
 16306  029C  085A               	movf	?___fltol,w
 16307  029D  0027               	movlb	7	; select bank7
 16308  029E  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 16309                           
 16310                           ;uart.c: 398: uart1_tx_buf[3] =(unsigned char )light_pv;
 16311  029F  2772               	fcall	PL122	;call to abstracted procedure
 16312  02A0  319E  2698  3182   	fcall	___fltol
 16313  02A3  085A               	movf	?___fltol,w
 16314  02A4  0027               	movlb	7	; select bank7
 16315  02A5  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 16316                           
 16317                           ;uart.c: 400: uart1_tx_buf[4] =(unsigned char )(load_cc_I/256);
 16318  02A6  26A4               	fcall	PL12	;call to abstracted procedure
 16319  02A7  31A6  26E5  3182   	fcall	___fldiv
 16320  02AA  26C4               	fcall	PL28	;call to abstracted procedure
 16321  02AB  319E  2698  3182   	fcall	___fltol
 16322  02AE  085A               	movf	?___fltol,w
 16323  02AF  0027               	movlb	7	; select bank7
 16324  02B0  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 16325                           
 16326                           ;uart.c: 402: uart1_tx_buf[5] =(unsigned char )load_cc_I;
 16327  02B1  2761               	fcall	PL120	;call to abstracted procedure
 16328  02B2  319E  2698  3182   	fcall	___fltol
 16329  02B5  085A               	movf	?___fltol,w
 16330  02B6  0027               	movlb	7	; select bank7
 16331  02B7  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 16332                           
 16333                           ;uart.c: 404: uart1_tx_buf[6] =(unsigned char )(step_01_load_percent);
 16334  02B8  272E               	fcall	PL114	;call to abstracted procedure
 16335  02B9  319E  2698  3182   	fcall	___fltol
 16336  02BC  085A               	movf	?___fltol,w
 16337  02BD  0027               	movlb	7	; select bank7
 16338  02BE  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
 16339                           
 16340                           ;uart.c: 406: uart1_tx_buf[7] =(unsigned char )(step_02_load_percent);
 16341  02BF  2750               	fcall	PL118	;call to abstracted procedure
 16342  02C0  319E  2698  3182   	fcall	___fltol
 16343  02C3  085A               	movf	?___fltol,w
 16344  02C4  0027               	movlb	7	; select bank7
 16345  02C5  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
 16346                           
 16347                           ;uart.c: 408: uart1_tx_buf[8] =(unsigned char )(step_03_load_percent);
 16348  02C6  273F               	fcall	PL116	;call to abstracted procedure
 16349  02C7  319E  2698  3182   	fcall	___fltol
 16350  02CA  085A               	movf	?___fltol,w
 16351  02CB  0027               	movlb	7	; select bank7
 16352  02CC  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
 16353                           
 16354                           ;uart.c: 410: uart1_tx_buf[9] =(unsigned char )(step_04_load_percent);
 16355  02CD  270C               	fcall	PL108	;call to abstracted procedure
 16356  02CE  319E  2698  3182   	fcall	___fltol
 16357  02D1  085A               	movf	?___fltol,w
 16358  02D2  0027               	movlb	7	; select bank7
 16359  02D3  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
 16360                           
 16361                           ;uart.c: 412: uart1_tx_buf[10]=(unsigned char )(step_05_load_percent);
 16362  02D4  271D               	fcall	PL110	;call to abstracted procedure
 16363  02D5  319E  2698  3182   	fcall	___fltol
 16364  02D8  085A               	movf	?___fltol,w
 16365  02D9  0027               	movlb	7	; select bank7
 16366  02DA  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
 16367                           
 16368                           ;uart.c: 414: uart1_tx_buf[11]=(unsigned char )(bt_id);
 16369  02DB  0021               	movlb	1	; select bank1
 16370  02DC  086A               	movf	_bt_id^(0+128),w
 16371  02DD  0027               	movlb	7	; select bank7
 16372  02DE  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
 16373                           
 16374                           ;uart.c: 416: uart1_tx_buf[12]=(unsigned char )(light_time);
 16375  02DF  0021               	movlb	1	; select bank1
 16376  02E0  083E               	movf	_light_time^(0+128),w
 16377  02E1  0027               	movlb	7	; select bank7
 16378  02E2  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
 16379                           
 16380                           ;uart.c: 418: uart1_tx_buf[13] =(unsigned char )(step_01_time_limit);
 16381  02E3  0021               	movlb	1	; select bank1
 16382  02E4  0866               	movf	_step_01_time_limit^(0+128),w
 16383  02E5  0027               	movlb	7	; select bank7
 16384  02E6  00AD               	movwf	(_uart1_tx_buf^(0+896)+13)
 16385                           
 16386                           ;uart.c: 420: uart1_tx_buf[14] =(unsigned char )(step_02_time_limit);
 16387  02E7  0021               	movlb	1	; select bank1
 16388  02E8  0868               	movf	_step_02_time_limit^(0+128),w
 16389  02E9  0027               	movlb	7	; select bank7
 16390  02EA  00AE               	movwf	(_uart1_tx_buf^(0+896)+14)
 16391                           
 16392                           ;uart.c: 422: uart1_tx_buf[15] =(unsigned char )(step_03_time_limit);
 16393  02EB  0022               	movlb	2	; select bank2
 16394  02EC  0869               	movf	_step_03_time_limit^(0+256),w
 16395  02ED  0027               	movlb	7	; select bank7
 16396  02EE  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
 16397                           
 16398                           ;uart.c: 424: uart1_tx_buf[16] =(unsigned char )(step_04_time_limit);
 16399  02EF  0022               	movlb	2	; select bank2
 16400  02F0  086B               	movf	_step_04_time_limit^(0+256),w
 16401  02F1  0027               	movlb	7	; select bank7
 16402  02F2  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
 16403                           
 16404                           ;uart.c: 426: uart1_tx_buf[17] =(unsigned char )(step_05_time_limit);
 16405  02F3  0022               	movlb	2	; select bank2
 16406  02F4  086D               	movf	_step_05_time_limit^(0+256),w
 16407  02F5  0027               	movlb	7	; select bank7
 16408  02F6  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
 16409                           
 16410                           ;uart.c: 429: crc_data=crc16(&uart1_tx_buf[1],17);
 16411  02F7  27EF               	fcall	PL216	;call to abstracted procedure
 16412  02F8  3011               	movlw	17
 16413  02F9  00A5               	movwf	crc16@usDataLen
 16414  02FA  3189  212C  3182   	fcall	_crc16
 16415                           
 16416                           ;uart.c: 431: uart1_tx_buf[18]=crc_data/256;
 16417  02FD  2702  3182         	fcall	PL86	;call to abstracted procedure
 16418  02FF  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
 16419                           
 16420                           ;uart.c: 433: uart1_tx_buf[19]=crc_data%256;
 16421  0300  0021               	movlb	1	; select bank1
 16422  0301  0828               	movf	_crc_data^(0+128),w
 16423  0302  0027               	movlb	7	; select bank7
 16424  0303  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
 16425                           
 16426                           ;uart.c: 435: uart1_tx_buf[20]=0xAA;
 16427  0304  30AA               	movlw	170
 16428  0305  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
 16429  0306  2E96               	goto	l18632
 16430  0307                     l18424:	
 16431                           
 16432                           ;uart.c: 443: if(uart1_rx_buf[1]==0xA3)
 16433  0307  0028               	movlb	8	; select bank8
 16434  0308  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16435  0309  3AA3               	xorlw	163
 16436  030A  1D03               	skipz
 16437  030B  2E96               	goto	l18632
 16438                           
 16439                           ;uart.c: 444: {
 16440                           ;uart.c: 445: crc_in=crc16(&uart1_rx_buf[1],17);
 16441  030C  3021               	movlw	low (_uart1_rx_buf+1)
 16442  030D  0020               	movlb	0	; select bank0
 16443  030E  00A3               	movwf	crc16@puchMsg
 16444  030F  3004               	movlw	high (_uart1_rx_buf+1)
 16445  0310  00A4               	movwf	crc16@puchMsg+1
 16446  0311  3011               	movlw	17
 16447  0312  00A5               	movwf	crc16@usDataLen
 16448  0313  3189  212C  3182   	fcall	_crc16
 16449  0316  0824               	movf	?_crc16+1,w
 16450  0317  00E7               	movwf	handle_uart_rx_buf@crc_in+1
 16451  0318  0823               	movf	?_crc16,w
 16452  0319  00E6               	movwf	handle_uart_rx_buf@crc_in
 16453                           
 16454                           ;uart.c: 447: if(crc_in==( (uart1_rx_buf[18]<<8) | uart1_rx_buf[19]) )
 16455  031A  0867               	movf	handle_uart_rx_buf@crc_in+1,w
 16456  031B  0028               	movlb	8	; select bank8
 16457  031C  0632               	xorwf	(_uart1_rx_buf^(0+1024)+18),w
 16458  031D  1D03               	skipz
 16459  031E  2B23               	goto	u11925
 16460  031F  0020               	movlb	0	; select bank0
 16461  0320  0866               	movf	handle_uart_rx_buf@crc_in,w
 16462  0321  0028               	movlb	8	; select bank8
 16463  0322  0633               	xorwf	(_uart1_rx_buf^(0+1024)+19),w
 16464  0323                     u11925:	
 16465  0323  1D03               	skipz
 16466  0324  2E96               	goto	l18632
 16467                           
 16468                           ;uart.c: 448: {
 16469                           ;uart.c: 450: light_pv = (uart1_rx_buf[2]<<8) | uart1_rx_buf[3];
 16470  0325  0822               	movf	(_uart1_rx_buf^(0+1024)+2),w
 16471  0326  0020               	movlb	0	; select bank0
 16472  0327  00AE               	movwf	___awtofl@c+1
 16473  0328  0028               	movlb	8	; select bank8
 16474  0329  0823               	movf	(_uart1_rx_buf^(0+1024)+3),w
 16475  032A  0020               	movlb	0	; select bank0
 16476  032B  00AD               	movwf	___awtofl@c
 16477  032C  31A7  2751  3182   	fcall	___awtofl
 16478  032F  0830               	movf	?___awtofl+3,w
 16479  0330  0021               	movlb	1	; select bank1
 16480  0331  00E1               	movwf	(_light_pv+3)^(0+128)
 16481  0332  0020               	movlb	0	; select bank0
 16482  0333  082F               	movf	?___awtofl+2,w
 16483  0334  0021               	movlb	1	; select bank1
 16484  0335  00E0               	movwf	(_light_pv+2)^(0+128)
 16485  0336  0020               	movlb	0	; select bank0
 16486  0337  082E               	movf	?___awtofl+1,w
 16487  0338  0021               	movlb	1	; select bank1
 16488  0339  00DF               	movwf	(_light_pv+1)^(0+128)
 16489  033A  0020               	movlb	0	; select bank0
 16490  033B  082D               	movf	?___awtofl,w
 16491  033C  0021               	movlb	1	; select bank1
 16492  033D  00DE               	movwf	_light_pv^(0+128)
 16493                           
 16494                           ;uart.c: 452: load_cc_I = (uart1_rx_buf[4]<<8) | uart1_rx_buf[5];
 16495  033E  0028               	movlb	8	; select bank8
 16496  033F  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16497  0340  0020               	movlb	0	; select bank0
 16498  0341  00AE               	movwf	___awtofl@c+1
 16499  0342  0028               	movlb	8	; select bank8
 16500  0343  0825               	movf	(_uart1_rx_buf^(0+1024)+5),w
 16501  0344  0020               	movlb	0	; select bank0
 16502  0345  00AD               	movwf	___awtofl@c
 16503  0346  31A7  2751  3182   	fcall	___awtofl
 16504  0349  0830               	movf	?___awtofl+3,w
 16505  034A  0021               	movlb	1	; select bank1
 16506  034B  00E5               	movwf	(_load_cc_I+3)^(0+128)
 16507  034C  0020               	movlb	0	; select bank0
 16508  034D  082F               	movf	?___awtofl+2,w
 16509  034E  0021               	movlb	1	; select bank1
 16510  034F  00E4               	movwf	(_load_cc_I+2)^(0+128)
 16511  0350  0020               	movlb	0	; select bank0
 16512  0351  082E               	movf	?___awtofl+1,w
 16513  0352  0021               	movlb	1	; select bank1
 16514  0353  00E3               	movwf	(_load_cc_I+1)^(0+128)
 16515  0354  0020               	movlb	0	; select bank0
 16516  0355  082D               	movf	?___awtofl,w
 16517  0356  0021               	movlb	1	; select bank1
 16518  0357  00E2               	movwf	_load_cc_I^(0+128)
 16519                           
 16520                           ;uart.c: 454: step_01_load_percent = uart1_rx_buf[6];
 16521  0358  0028               	movlb	8	; select bank8
 16522  0359  0826               	movf	(_uart1_rx_buf^(0+1024)+6),w
 16523  035A  31A5  2502  3182   	fcall	___lbtofl
 16524  035D  0830               	movf	?___lbtofl+3,w
 16525  035E  0022               	movlb	2	; select bank2
 16526  035F  00D8               	movwf	(_step_01_load_percent+3)^(0+256)
 16527  0360  0020               	movlb	0	; select bank0
 16528  0361  082F               	movf	?___lbtofl+2,w
 16529  0362  0022               	movlb	2	; select bank2
 16530  0363  00D7               	movwf	(_step_01_load_percent+2)^(0+256)
 16531  0364  0020               	movlb	0	; select bank0
 16532  0365  082E               	movf	?___lbtofl+1,w
 16533  0366  0022               	movlb	2	; select bank2
 16534  0367  00D6               	movwf	(_step_01_load_percent+1)^(0+256)
 16535  0368  0020               	movlb	0	; select bank0
 16536  0369  082D               	movf	?___lbtofl,w
 16537  036A  0022               	movlb	2	; select bank2
 16538  036B  00D5               	movwf	_step_01_load_percent^(0+256)
 16539                           
 16540                           ;uart.c: 456: step_02_load_percent = uart1_rx_buf[7];
 16541  036C  0028               	movlb	8	; select bank8
 16542  036D  0827               	movf	(_uart1_rx_buf^(0+1024)+7),w
 16543  036E  31A5  2502  3182   	fcall	___lbtofl
 16544  0371  0830               	movf	?___lbtofl+3,w
 16545  0372  0022               	movlb	2	; select bank2
 16546  0373  00DC               	movwf	(_step_02_load_percent+3)^(0+256)
 16547  0374  0020               	movlb	0	; select bank0
 16548  0375  082F               	movf	?___lbtofl+2,w
 16549  0376  0022               	movlb	2	; select bank2
 16550  0377  00DB               	movwf	(_step_02_load_percent+2)^(0+256)
 16551  0378  0020               	movlb	0	; select bank0
 16552  0379  082E               	movf	?___lbtofl+1,w
 16553  037A  0022               	movlb	2	; select bank2
 16554  037B  00DA               	movwf	(_step_02_load_percent+1)^(0+256)
 16555  037C  0020               	movlb	0	; select bank0
 16556  037D  082D               	movf	?___lbtofl,w
 16557  037E  0022               	movlb	2	; select bank2
 16558  037F  00D9               	movwf	_step_02_load_percent^(0+256)
 16559                           
 16560                           ;uart.c: 458: step_03_load_percent = uart1_rx_buf[8];
 16561  0380  0028               	movlb	8	; select bank8
 16562  0381  0828               	movf	(_uart1_rx_buf^(0+1024)+8),w
 16563  0382  31A5  2502  3182   	fcall	___lbtofl
 16564  0385  0830               	movf	?___lbtofl+3,w
 16565  0386  0022               	movlb	2	; select bank2
 16566  0387  00E0               	movwf	(_step_03_load_percent+3)^(0+256)
 16567  0388  0020               	movlb	0	; select bank0
 16568  0389  082F               	movf	?___lbtofl+2,w
 16569  038A  0022               	movlb	2	; select bank2
 16570  038B  00DF               	movwf	(_step_03_load_percent+2)^(0+256)
 16571  038C  0020               	movlb	0	; select bank0
 16572  038D  082E               	movf	?___lbtofl+1,w
 16573  038E  0022               	movlb	2	; select bank2
 16574  038F  00DE               	movwf	(_step_03_load_percent+1)^(0+256)
 16575  0390  0020               	movlb	0	; select bank0
 16576  0391  082D               	movf	?___lbtofl,w
 16577  0392  0022               	movlb	2	; select bank2
 16578  0393  00DD               	movwf	_step_03_load_percent^(0+256)
 16579                           
 16580                           ;uart.c: 460: step_04_load_percent = uart1_rx_buf[9];
 16581  0394  0028               	movlb	8	; select bank8
 16582  0395  0829               	movf	(_uart1_rx_buf^(0+1024)+9),w
 16583  0396  31A5  2502  3182   	fcall	___lbtofl
 16584  0399  0830               	movf	?___lbtofl+3,w
 16585  039A  0022               	movlb	2	; select bank2
 16586  039B  00E4               	movwf	(_step_04_load_percent+3)^(0+256)
 16587  039C  0020               	movlb	0	; select bank0
 16588  039D  082F               	movf	?___lbtofl+2,w
 16589  039E  0022               	movlb	2	; select bank2
 16590  039F  00E3               	movwf	(_step_04_load_percent+2)^(0+256)
 16591  03A0  0020               	movlb	0	; select bank0
 16592  03A1  082E               	movf	?___lbtofl+1,w
 16593  03A2  0022               	movlb	2	; select bank2
 16594  03A3  00E2               	movwf	(_step_04_load_percent+1)^(0+256)
 16595  03A4  0020               	movlb	0	; select bank0
 16596  03A5  082D               	movf	?___lbtofl,w
 16597  03A6  0022               	movlb	2	; select bank2
 16598  03A7  00E1               	movwf	_step_04_load_percent^(0+256)
 16599                           
 16600                           ;uart.c: 462: step_05_load_percent = uart1_rx_buf[10];
 16601  03A8  0028               	movlb	8	; select bank8
 16602  03A9  082A               	movf	(_uart1_rx_buf^(0+1024)+10),w
 16603  03AA  31A5  2502  3182   	fcall	___lbtofl
 16604  03AD  0830               	movf	?___lbtofl+3,w
 16605  03AE  0022               	movlb	2	; select bank2
 16606  03AF  00E8               	movwf	(_step_05_load_percent+3)^(0+256)
 16607  03B0  0020               	movlb	0	; select bank0
 16608  03B1  082F               	movf	?___lbtofl+2,w
 16609  03B2  0022               	movlb	2	; select bank2
 16610  03B3  00E7               	movwf	(_step_05_load_percent+2)^(0+256)
 16611  03B4  0020               	movlb	0	; select bank0
 16612  03B5  082E               	movf	?___lbtofl+1,w
 16613  03B6  0022               	movlb	2	; select bank2
 16614  03B7  00E6               	movwf	(_step_05_load_percent+1)^(0+256)
 16615  03B8  0020               	movlb	0	; select bank0
 16616  03B9  082D               	movf	?___lbtofl,w
 16617  03BA  0022               	movlb	2	; select bank2
 16618  03BB  00E5               	movwf	_step_05_load_percent^(0+256)
 16619                           
 16620                           ;uart.c: 464: Adjust_Pout_Flag=0x00;
 16621  03BC  0021               	movlb	1	; select bank1
 16622  03BD  01B2               	clrf	_Adjust_Pout_Flag^(0+128)
 16623                           
 16624                           ;uart.c: 465: voltage_adjust_index=0x01;
 16625  03BE  01EC               	clrf	_voltage_adjust_index^(0+128)
 16626  03BF  0AEC               	incf	_voltage_adjust_index^(0+128),f
 16627                           
 16628                           ;uart.c: 467: bt_id = uart1_rx_buf[11];
 16629  03C0  0028               	movlb	8	; select bank8
 16630  03C1  082B               	movf	(_uart1_rx_buf^(0+1024)+11),w
 16631  03C2  0021               	movlb	1	; select bank1
 16632  03C3  00EA               	movwf	_bt_id^(0+128)
 16633                           
 16634                           ;uart.c: 469: light_time = uart1_rx_buf[12];
 16635  03C4  0028               	movlb	8	; select bank8
 16636  03C5  082C               	movf	(_uart1_rx_buf^(0+1024)+12),w
 16637  03C6  0021               	movlb	1	; select bank1
 16638  03C7  00BE               	movwf	_light_time^(0+128)
 16639  03C8  01BF               	clrf	(_light_time+1)^(0+128)
 16640                           
 16641                           ;uart.c: 471: step_01_time_limit = uart1_rx_buf[13];
 16642  03C9  0028               	movlb	8	; select bank8
 16643  03CA  082D               	movf	(_uart1_rx_buf^(0+1024)+13),w
 16644  03CB  0021               	movlb	1	; select bank1
 16645  03CC  00E6               	movwf	_step_01_time_limit^(0+128)
 16646  03CD  01E7               	clrf	(_step_01_time_limit+1)^(0+128)
 16647                           
 16648                           ;uart.c: 473: step_02_time_limit = uart1_rx_buf[14];
 16649  03CE  0028               	movlb	8	; select bank8
 16650  03CF  082E               	movf	(_uart1_rx_buf^(0+1024)+14),w
 16651  03D0  0021               	movlb	1	; select bank1
 16652  03D1  00E8               	movwf	_step_02_time_limit^(0+128)
 16653  03D2  01E9               	clrf	(_step_02_time_limit+1)^(0+128)
 16654                           
 16655                           ;uart.c: 475: step_03_time_limit = uart1_rx_buf[15];
 16656  03D3  0028               	movlb	8	; select bank8
 16657  03D4  082F               	movf	(_uart1_rx_buf^(0+1024)+15),w
 16658  03D5  0022               	movlb	2	; select bank2
 16659  03D6  00E9               	movwf	_step_03_time_limit^(0+256)
 16660  03D7  01EA               	clrf	(_step_03_time_limit+1)^(0+256)
 16661                           
 16662                           ;uart.c: 477: step_04_time_limit = uart1_rx_buf[16];
 16663  03D8  0028               	movlb	8	; select bank8
 16664  03D9  0830               	movf	(_uart1_rx_buf^(0+1024)+16),w
 16665  03DA  0022               	movlb	2	; select bank2
 16666  03DB  00EB               	movwf	_step_04_time_limit^(0+256)
 16667  03DC  01EC               	clrf	(_step_04_time_limit+1)^(0+256)
 16668                           
 16669                           ;uart.c: 479: step_05_time_limit = uart1_rx_buf[17];
 16670  03DD  0028               	movlb	8	; select bank8
 16671  03DE  0831               	movf	(_uart1_rx_buf^(0+1024)+17),w
 16672  03DF  0022               	movlb	2	; select bank2
 16673  03E0  00ED               	movwf	_step_05_time_limit^(0+256)
 16674  03E1  01EE               	clrf	(_step_05_time_limit+1)^(0+256)
 16675                           
 16676                           ;uart.c: 481: if((light_pv>=100)&&(light_pv<=1200)&&(load_cc_I<=500)&&(step_01_load_perc
      +                          ent<=100)&&(step_02_load_percent<=100) &&(step_03_load_percent<=100)&&(step_04_load_perc
      +                          ent<=100)&&(step_05_load_percent<=100)&&(bt_id>=1)&&(bt_id<=2) &&(light_time<=60)&&(step
 16677  03E2  0021               	movlb	1	; select bank1
 16678  03E3  0861               	movf	(_light_pv+3)^(0+128),w
 16679  03E4  0020               	movlb	0	; select bank0
 16680  03E5  00DD               	movwf	___flge@ff1+3
 16681  03E6  0021               	movlb	1	; select bank1
 16682  03E7  0860               	movf	(_light_pv+2)^(0+128),w
 16683  03E8  0020               	movlb	0	; select bank0
 16684  03E9  00DC               	movwf	___flge@ff1+2
 16685  03EA  0021               	movlb	1	; select bank1
 16686  03EB  085F               	movf	(_light_pv+1)^(0+128),w
 16687  03EC  0020               	movlb	0	; select bank0
 16688  03ED  00DB               	movwf	___flge@ff1+1
 16689  03EE  0021               	movlb	1	; select bank1
 16690  03EF  085E               	movf	_light_pv^(0+128),w
 16691  03F0  0020               	movlb	0	; select bank0
 16692  03F1  00DA               	movwf	___flge@ff1
 16693  03F2  3042               	movlw	66
 16694  03F3  00E1               	movwf	___flge@ff2+3
 16695  03F4  30C8               	movlw	200
 16696  03F5  00E0               	movwf	___flge@ff2+2
 16697  03F6  01DF               	clrf	___flge@ff2+1
 16698  03F7  01DE               	clrf	___flge@ff2
 16699  03F8  319E  2658  3182   	fcall	___flge
 16700  03FB  1C03               	btfss	3,0
 16701  03FC  2DFE               	goto	l18524
 16702  03FD  3044               	movlw	68
 16703  03FE  00DD               	movwf	___flge@ff1+3
 16704  03FF  3096               	movlw	150
 16705  0400  00DC               	movwf	___flge@ff1+2
 16706  0401  01DB               	clrf	___flge@ff1+1
 16707  0402  01DA               	clrf	___flge@ff1
 16708  0403  0021               	movlb	1	; select bank1
 16709  0404  0861               	movf	(_light_pv+3)^(0+128),w
 16710  0405  0020               	movlb	0	; select bank0
 16711  0406  00E1               	movwf	___flge@ff2+3
 16712  0407  0021               	movlb	1	; select bank1
 16713  0408  0860               	movf	(_light_pv+2)^(0+128),w
 16714  0409  0020               	movlb	0	; select bank0
 16715  040A  00E0               	movwf	___flge@ff2+2
 16716  040B  0021               	movlb	1	; select bank1
 16717  040C  085F               	movf	(_light_pv+1)^(0+128),w
 16718  040D  0020               	movlb	0	; select bank0
 16719  040E  00DF               	movwf	___flge@ff2+1
 16720  040F  0021               	movlb	1	; select bank1
 16721  0410  085E               	movf	_light_pv^(0+128),w
 16722  0411  0020               	movlb	0	; select bank0
 16723  0412  00DE               	movwf	___flge@ff2
 16724  0413  319E  2658  3182   	fcall	___flge
 16725  0416  1C03               	btfss	3,0
 16726  0417  2DFE               	goto	l18524
 16727  0418  3043               	movlw	67
 16728  0419  00DD               	movwf	___flge@ff1+3
 16729  041A  30FA               	movlw	250
 16730  041B  00DC               	movwf	___flge@ff1+2
 16731  041C  01DB               	clrf	___flge@ff1+1
 16732  041D  01DA               	clrf	___flge@ff1
 16733  041E  0021               	movlb	1	; select bank1
 16734  041F  0865               	movf	(_load_cc_I+3)^(0+128),w
 16735  0420  0020               	movlb	0	; select bank0
 16736  0421  00E1               	movwf	___flge@ff2+3
 16737  0422  0021               	movlb	1	; select bank1
 16738  0423  0864               	movf	(_load_cc_I+2)^(0+128),w
 16739  0424  0020               	movlb	0	; select bank0
 16740  0425  00E0               	movwf	___flge@ff2+2
 16741  0426  0021               	movlb	1	; select bank1
 16742  0427  0863               	movf	(_load_cc_I+1)^(0+128),w
 16743  0428  0020               	movlb	0	; select bank0
 16744  0429  00DF               	movwf	___flge@ff2+1
 16745  042A  0021               	movlb	1	; select bank1
 16746  042B  0862               	movf	_load_cc_I^(0+128),w
 16747  042C  0020               	movlb	0	; select bank0
 16748  042D  00DE               	movwf	___flge@ff2
 16749  042E  319E  2658  3182   	fcall	___flge
 16750  0431  1C03               	btfss	3,0
 16751  0432  2DFE               	goto	l18524
 16752  0433  3042               	movlw	66
 16753  0434  27AD               	fcall	PL152	;call to abstracted procedure
 16754  0435  0858               	movf	(_step_01_load_percent+3)^(0+256),w
 16755  0436  0020               	movlb	0	; select bank0
 16756  0437  00E1               	movwf	___flge@ff2+3
 16757  0438  0022               	movlb	2	; select bank2
 16758  0439  0857               	movf	(_step_01_load_percent+2)^(0+256),w
 16759  043A  0020               	movlb	0	; select bank0
 16760  043B  00E0               	movwf	___flge@ff2+2
 16761  043C  0022               	movlb	2	; select bank2
 16762  043D  0856               	movf	(_step_01_load_percent+1)^(0+256),w
 16763  043E  0020               	movlb	0	; select bank0
 16764  043F  00DF               	movwf	___flge@ff2+1
 16765  0440  0022               	movlb	2	; select bank2
 16766  0441  0855               	movf	_step_01_load_percent^(0+256),w
 16767  0442  0020               	movlb	0	; select bank0
 16768  0443  00DE               	movwf	___flge@ff2
 16769  0444  319E  2658  3182   	fcall	___flge
 16770  0447  1C03               	btfss	3,0
 16771  0448  2DFE               	goto	l18524
 16772  0449  3042               	movlw	66
 16773  044A  27AD               	fcall	PL152	;call to abstracted procedure
 16774  044B  085C               	movf	(_step_02_load_percent+3)^(0+256),w
 16775  044C  0020               	movlb	0	; select bank0
 16776  044D  00E1               	movwf	___flge@ff2+3
 16777  044E  0022               	movlb	2	; select bank2
 16778  044F  085B               	movf	(_step_02_load_percent+2)^(0+256),w
 16779  0450  0020               	movlb	0	; select bank0
 16780  0451  00E0               	movwf	___flge@ff2+2
 16781  0452  0022               	movlb	2	; select bank2
 16782  0453  085A               	movf	(_step_02_load_percent+1)^(0+256),w
 16783  0454  0020               	movlb	0	; select bank0
 16784  0455  00DF               	movwf	___flge@ff2+1
 16785  0456  0022               	movlb	2	; select bank2
 16786  0457  0859               	movf	_step_02_load_percent^(0+256),w
 16787  0458  0020               	movlb	0	; select bank0
 16788  0459  00DE               	movwf	___flge@ff2
 16789  045A  319E  2658  3182   	fcall	___flge
 16790  045D  1C03               	btfss	3,0
 16791  045E  2DFE               	goto	l18524
 16792  045F  3042               	movlw	66
 16793  0460  27AD               	fcall	PL152	;call to abstracted procedure
 16794  0461  0860               	movf	(_step_03_load_percent+3)^(0+256),w
 16795  0462  0020               	movlb	0	; select bank0
 16796  0463  00E1               	movwf	___flge@ff2+3
 16797  0464  0022               	movlb	2	; select bank2
 16798  0465  085F               	movf	(_step_03_load_percent+2)^(0+256),w
 16799  0466  0020               	movlb	0	; select bank0
 16800  0467  00E0               	movwf	___flge@ff2+2
 16801  0468  0022               	movlb	2	; select bank2
 16802  0469  085E               	movf	(_step_03_load_percent+1)^(0+256),w
 16803  046A  0020               	movlb	0	; select bank0
 16804  046B  00DF               	movwf	___flge@ff2+1
 16805  046C  0022               	movlb	2	; select bank2
 16806  046D  085D               	movf	_step_03_load_percent^(0+256),w
 16807  046E  0020               	movlb	0	; select bank0
 16808  046F  00DE               	movwf	___flge@ff2
 16809  0470  319E  2658  3182   	fcall	___flge
 16810  0473  1C03               	btfss	3,0
 16811  0474  2DFE               	goto	l18524
 16812  0475  3042               	movlw	66
 16813  0476  27AD               	fcall	PL152	;call to abstracted procedure
 16814  0477  0864               	movf	(_step_04_load_percent+3)^(0+256),w
 16815  0478  0020               	movlb	0	; select bank0
 16816  0479  00E1               	movwf	___flge@ff2+3
 16817  047A  0022               	movlb	2	; select bank2
 16818  047B  0863               	movf	(_step_04_load_percent+2)^(0+256),w
 16819  047C  0020               	movlb	0	; select bank0
 16820  047D  00E0               	movwf	___flge@ff2+2
 16821  047E  0022               	movlb	2	; select bank2
 16822  047F  0862               	movf	(_step_04_load_percent+1)^(0+256),w
 16823  0480  0020               	movlb	0	; select bank0
 16824  0481  00DF               	movwf	___flge@ff2+1
 16825  0482  0022               	movlb	2	; select bank2
 16826  0483  0861               	movf	_step_04_load_percent^(0+256),w
 16827  0484  0020               	movlb	0	; select bank0
 16828  0485  00DE               	movwf	___flge@ff2
 16829  0486  319E  2658  3182   	fcall	___flge
 16830  0489  1C03               	btfss	3,0
 16831  048A  2DFE               	goto	l18524
 16832  048B  3042               	movlw	66
 16833  048C  27AD               	fcall	PL152	;call to abstracted procedure
 16834  048D  0868               	movf	(_step_05_load_percent+3)^(0+256),w
 16835  048E  0020               	movlb	0	; select bank0
 16836  048F  00E1               	movwf	___flge@ff2+3
 16837  0490  0022               	movlb	2	; select bank2
 16838  0491  0867               	movf	(_step_05_load_percent+2)^(0+256),w
 16839  0492  0020               	movlb	0	; select bank0
 16840  0493  00E0               	movwf	___flge@ff2+2
 16841  0494  0022               	movlb	2	; select bank2
 16842  0495  0866               	movf	(_step_05_load_percent+1)^(0+256),w
 16843  0496  0020               	movlb	0	; select bank0
 16844  0497  00DF               	movwf	___flge@ff2+1
 16845  0498  0022               	movlb	2	; select bank2
 16846  0499  0865               	movf	_step_05_load_percent^(0+256),w
 16847  049A  0020               	movlb	0	; select bank0
 16848  049B  00DE               	movwf	___flge@ff2
 16849  049C  319E  2658  3182   	fcall	___flge
 16850  049F  1C03               	btfss	3,0
 16851  04A0  2DFE               	goto	l18524
 16852  04A1  0021               	movlb	1	; select bank1
 16853  04A2  086A               	movf	_bt_id^(0+128),w
 16854  04A3  1903               	btfsc	3,2
 16855  04A4  2DFE               	goto	l18524
 16856  04A5  3003               	movlw	3
 16857  04A6  026A               	subwf	_bt_id^(0+128),w
 16858  04A7  1803               	skipnc
 16859  04A8  2DFE               	goto	l18524
 16860  04A9  3000               	movlw	0
 16861  04AA  023F               	subwf	(_light_time+1)^(0+128),w
 16862  04AB  303D               	movlw	61
 16863  04AC  1903               	skipnz
 16864  04AD  023E               	subwf	_light_time^(0+128),w
 16865  04AE  1803               	skipnc
 16866  04AF  2DFE               	goto	l18524
 16867  04B0  3000               	movlw	0
 16868  04B1  0267               	subwf	(_step_01_time_limit+1)^(0+128),w
 16869  04B2  3019               	movlw	25
 16870  04B3  1903               	skipnz
 16871  04B4  0266               	subwf	_step_01_time_limit^(0+128),w
 16872  04B5  1803               	skipnc
 16873  04B6  2DFE               	goto	l18524
 16874  04B7  3000               	movlw	0
 16875  04B8  0269               	subwf	(_step_02_time_limit+1)^(0+128),w
 16876  04B9  3019               	movlw	25
 16877  04BA  1903               	skipnz
 16878  04BB  0268               	subwf	_step_02_time_limit^(0+128),w
 16879  04BC  1803               	skipnc
 16880  04BD  2DFE               	goto	l18524
 16881  04BE  3000               	movlw	0
 16882  04BF  0022               	movlb	2	; select bank2
 16883  04C0  026A               	subwf	(_step_03_time_limit+1)^(0+256),w
 16884  04C1  3019               	movlw	25
 16885  04C2  1903               	skipnz
 16886  04C3  0269               	subwf	_step_03_time_limit^(0+256),w
 16887  04C4  1803               	skipnc
 16888  04C5  2CD4               	goto	u12081
 16889  04C6  3000               	movlw	0
 16890  04C7  026C               	subwf	(_step_04_time_limit+1)^(0+256),w
 16891  04C8  3019               	movlw	25
 16892  04C9  1903               	skipnz
 16893  04CA  026B               	subwf	_step_04_time_limit^(0+256),w
 16894  04CB  1803               	skipnc
 16895  04CC  2CD4               	goto	u12081
 16896  04CD  3000               	movlw	0
 16897  04CE  026E               	subwf	(_step_05_time_limit+1)^(0+256),w
 16898  04CF  3019               	movlw	25
 16899  04D0  1903               	skipnz
 16900  04D1  026D               	subwf	_step_05_time_limit^(0+256),w
 16901  04D2  1C03               	btfss	3,0
 16902  04D3  2CD6               	goto	l18482
 16903  04D4                     u12081:	
 16904  04D4  0021               	movlb	1	; select bank1
 16905  04D5  2DFE               	goto	l18524
 16906  04D6                     l18482:	
 16907                           
 16908                           ;uart.c: 484: {
 16909                           ;uart.c: 486: eeprom_write(0x00,(unsigned char)(light_pv/256));
 16910  04D6  26EA  3182         	fcall	PL78	;call to abstracted procedure
 16911  04D8  26BB               	fcall	PL26	;call to abstracted procedure
 16912  04D9  31A6  26E5  3182   	fcall	___fldiv
 16913  04DC  26C4               	fcall	PL28	;call to abstracted procedure
 16914  04DD  319E  2698  3182   	fcall	___fltol
 16915  04E0  085A               	movf	?___fltol,w
 16916  04E1  00E4               	movwf	eeprom_write@value
 16917  04E2  3000               	movlw	0
 16918  04E3  31A7  2775  3182   	fcall	_eeprom_write
 16919                           
 16920                           ;uart.c: 488: eeprom_write(0x01,(unsigned char)light_pv);
 16921  04E6  2772               	fcall	PL122	;call to abstracted procedure
 16922  04E7  319E  2698  3182   	fcall	___fltol
 16923  04EA  085A               	movf	?___fltol,w
 16924  04EB  00E4               	movwf	eeprom_write@value
 16925  04EC  3001               	movlw	1
 16926  04ED  31A7  2775  3182   	fcall	_eeprom_write
 16927                           
 16928                           ;uart.c: 491: eeprom_write(0x02,(unsigned char)(load_cc_I/256));
 16929  04F0  26A4               	fcall	PL12	;call to abstracted procedure
 16930  04F1  31A6  26E5  3182   	fcall	___fldiv
 16931  04F4  26C4               	fcall	PL28	;call to abstracted procedure
 16932  04F5  319E  2698  3182   	fcall	___fltol
 16933  04F8  085A               	movf	?___fltol,w
 16934  04F9  00E4               	movwf	eeprom_write@value
 16935  04FA  3002               	movlw	2
 16936  04FB  31A7  2775  3182   	fcall	_eeprom_write
 16937                           
 16938                           ;uart.c: 493: eeprom_write(0x03,(unsigned char)load_cc_I);
 16939  04FE  2761               	fcall	PL120	;call to abstracted procedure
 16940  04FF  319E  2698  3182   	fcall	___fltol
 16941  0502  085A               	movf	?___fltol,w
 16942  0503  00E4               	movwf	eeprom_write@value
 16943  0504  3003               	movlw	3
 16944  0505  31A7  2775  3182   	fcall	_eeprom_write
 16945                           
 16946                           ;uart.c: 496: eeprom_write(0x04,(unsigned char)(step_01_load_percent));
 16947  0508  272E               	fcall	PL114	;call to abstracted procedure
 16948  0509  319E  2698  3182   	fcall	___fltol
 16949  050C  085A               	movf	?___fltol,w
 16950  050D  00E4               	movwf	eeprom_write@value
 16951  050E  3004               	movlw	4
 16952  050F  31A7  2775  3182   	fcall	_eeprom_write
 16953                           
 16954                           ;uart.c: 498: eeprom_write(0x05,(unsigned char)(step_02_load_percent));
 16955  0512  2750               	fcall	PL118	;call to abstracted procedure
 16956  0513  319E  2698  3182   	fcall	___fltol
 16957  0516  085A               	movf	?___fltol,w
 16958  0517  00E4               	movwf	eeprom_write@value
 16959  0518  3005               	movlw	5
 16960  0519  31A7  2775  3182   	fcall	_eeprom_write
 16961                           
 16962                           ;uart.c: 500: eeprom_write(0x06,(unsigned char)(step_03_load_percent));
 16963  051C  273F               	fcall	PL116	;call to abstracted procedure
 16964  051D  319E  2698  3182   	fcall	___fltol
 16965  0520  085A               	movf	?___fltol,w
 16966  0521  00E4               	movwf	eeprom_write@value
 16967  0522  3006               	movlw	6
 16968  0523  31A7  2775  3182   	fcall	_eeprom_write
 16969                           
 16970                           ;uart.c: 502: eeprom_write(0x07,(unsigned char)(step_04_load_percent));
 16971  0526  270C               	fcall	PL108	;call to abstracted procedure
 16972  0527  319E  2698  3182   	fcall	___fltol
 16973  052A  085A               	movf	?___fltol,w
 16974  052B  00E4               	movwf	eeprom_write@value
 16975  052C  3007               	movlw	7
 16976  052D  31A7  2775  3182   	fcall	_eeprom_write
 16977                           
 16978                           ;uart.c: 504: eeprom_write(0x08,(unsigned char)(step_05_load_percent));
 16979  0530  271D               	fcall	PL110	;call to abstracted procedure
 16980  0531  319E  2698  3182   	fcall	___fltol
 16981  0534  085A               	movf	?___fltol,w
 16982  0535  00E4               	movwf	eeprom_write@value
 16983  0536  3008               	movlw	8
 16984  0537  31A7  2775  3182   	fcall	_eeprom_write
 16985                           
 16986                           ;uart.c: 506: eeprom_write(0x0a,(unsigned char)(bt_id));
 16987  053A  0021               	movlb	1	; select bank1
 16988  053B  086A               	movf	_bt_id^(0+128),w
 16989  053C  0020               	movlb	0	; select bank0
 16990  053D  00E4               	movwf	eeprom_write@value
 16991  053E  300A               	movlw	10
 16992  053F  31A7  2775  3182   	fcall	_eeprom_write
 16993                           
 16994                           ;uart.c: 508: eeprom_write(0x0b,(unsigned char)(light_time));
 16995  0542  0021               	movlb	1	; select bank1
 16996  0543  083E               	movf	_light_time^(0+128),w
 16997  0544  0020               	movlb	0	; select bank0
 16998  0545  00E4               	movwf	eeprom_write@value
 16999  0546  300B               	movlw	11
 17000  0547  31A7  2775  3182   	fcall	_eeprom_write
 17001                           
 17002                           ;uart.c: 510: eeprom_write(0x0c,(unsigned char)(step_01_time_limit));
 17003  054A  0021               	movlb	1	; select bank1
 17004  054B  0866               	movf	_step_01_time_limit^(0+128),w
 17005  054C  0020               	movlb	0	; select bank0
 17006  054D  00E4               	movwf	eeprom_write@value
 17007  054E  300C               	movlw	12
 17008  054F  31A7  2775  3182   	fcall	_eeprom_write
 17009                           
 17010                           ;uart.c: 512: eeprom_write(0x0d,(unsigned char)(step_02_time_limit));
 17011  0552  0021               	movlb	1	; select bank1
 17012  0553  0868               	movf	_step_02_time_limit^(0+128),w
 17013  0554  0020               	movlb	0	; select bank0
 17014  0555  00E4               	movwf	eeprom_write@value
 17015  0556  300D               	movlw	13
 17016  0557  31A7  2775  3182   	fcall	_eeprom_write
 17017                           
 17018                           ;uart.c: 514: eeprom_write(0x0e,(unsigned char)(step_03_time_limit));
 17019  055A  0022               	movlb	2	; select bank2
 17020  055B  0869               	movf	_step_03_time_limit^(0+256),w
 17021  055C  0020               	movlb	0	; select bank0
 17022  055D  00E4               	movwf	eeprom_write@value
 17023  055E  300E               	movlw	14
 17024  055F  31A7  2775  3182   	fcall	_eeprom_write
 17025                           
 17026                           ;uart.c: 516: eeprom_write(0x0f,(unsigned char)(step_04_time_limit));
 17027  0562  0022               	movlb	2	; select bank2
 17028  0563  086B               	movf	_step_04_time_limit^(0+256),w
 17029  0564  0020               	movlb	0	; select bank0
 17030  0565  00E4               	movwf	eeprom_write@value
 17031  0566  300F               	movlw	15
 17032  0567  31A7  2775  3182   	fcall	_eeprom_write
 17033                           
 17034                           ;uart.c: 518: eeprom_write(0x10,(unsigned char)(step_05_time_limit));
 17035  056A  0022               	movlb	2	; select bank2
 17036  056B  086D               	movf	_step_05_time_limit^(0+256),w
 17037  056C  0020               	movlb	0	; select bank0
 17038  056D  00E4               	movwf	eeprom_write@value
 17039  056E  3010               	movlw	16
 17040  056F  31A7  2775  3182   	fcall	_eeprom_write
 17041                           
 17042                           ;uart.c: 521: light_on_pv_level =(light_pv*10)/61;
 17043  0572  3042               	movlw	66
 17044  0573  0020               	movlb	0	; select bank0
 17045  0574  00CA               	movwf	___fldiv@f2+3
 17046  0575  3074               	movlw	116
 17047  0576  00C9               	movwf	___fldiv@f2+2
 17048  0577  3041               	movlw	65
 17049  0578  01C8               	clrf	___fldiv@f2+1
 17050  0579  01C7               	clrf	___fldiv@f2
 17051  057A  00B7               	movwf	___flmul@f1+3
 17052  057B  3020               	movlw	32
 17053  057C  00B6               	movwf	___flmul@f1+2
 17054  057D  01B5               	clrf	___flmul@f1+1
 17055  057E  01B4               	clrf	___flmul@f1
 17056  057F  0021               	movlb	1	; select bank1
 17057  0580  0861               	movf	(_light_pv+3)^(0+128),w
 17058  0581  0020               	movlb	0	; select bank0
 17059  0582  00BB               	movwf	___flmul@f2+3
 17060  0583  0021               	movlb	1	; select bank1
 17061  0584  0860               	movf	(_light_pv+2)^(0+128),w
 17062  0585  0020               	movlb	0	; select bank0
 17063  0586  00BA               	movwf	___flmul@f2+2
 17064  0587  0021               	movlb	1	; select bank1
 17065  0588  085F               	movf	(_light_pv+1)^(0+128),w
 17066  0589  0020               	movlb	0	; select bank0
 17067  058A  00B9               	movwf	___flmul@f2+1
 17068  058B  0021               	movlb	1	; select bank1
 17069  058C  085E               	movf	_light_pv^(0+128),w
 17070  058D  0020               	movlb	0	; select bank0
 17071  058E  00B8               	movwf	___flmul@f2
 17072  058F  318E  2607  3182   	fcall	___flmul
 17073  0592  31B4  2460  3182   	fcall	PL82	;call to abstracted procedure
 17074  0595  31A6  26E5  3182   	fcall	___fldiv
 17075  0598  084A               	movf	?___fldiv+3,w
 17076  0599  0025               	movlb	5	; select bank5
 17077  059A  00E7               	movwf	(_light_on_pv_level+3)^(0+640)
 17078  059B  0020               	movlb	0	; select bank0
 17079  059C  0849               	movf	?___fldiv+2,w
 17080  059D  0025               	movlb	5	; select bank5
 17081  059E  00E6               	movwf	(_light_on_pv_level+2)^(0+640)
 17082  059F  0020               	movlb	0	; select bank0
 17083  05A0  0848               	movf	?___fldiv+1,w
 17084  05A1  0025               	movlb	5	; select bank5
 17085  05A2  00E5               	movwf	(_light_on_pv_level+1)^(0+640)
 17086  05A3  0020               	movlb	0	; select bank0
 17087  05A4  0847               	movf	?___fldiv,w
 17088  05A5  0025               	movlb	5	; select bank5
 17089  05A6  00E4               	movwf	_light_on_pv_level^(0+640)
 17090                           
 17091                           ;uart.c: 522: light_off_pv_level =(10.0/61)*1000;
 17092  05A7  3043               	movlw	67
 17093  05A8  00E3               	movwf	(_light_off_pv_level+3)^(0+640)
 17094  05A9  3023               	movlw	35
 17095  05AA  00E2               	movwf	(_light_off_pv_level+2)^(0+640)
 17096  05AB  30EF               	movlw	239
 17097  05AC  00E1               	movwf	(_light_off_pv_level+1)^(0+640)
 17098  05AD  3037               	movlw	55
 17099  05AE  00E0               	movwf	_light_off_pv_level^(0+640)
 17100                           
 17101                           ;uart.c: 524: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
 17102  05AF  3043               	movlw	67
 17103  05B0  0020               	movlb	0	; select bank0
 17104  05B1  31B3  2377  3182   	fcall	PL4	;call to abstracted procedure
 17105  05B4  31A6  26E5  3182   	fcall	___fldiv
 17106  05B7  26CD               	fcall	PL30	;call to abstracted procedure
 17107  05B8  318E  2607  3182   	fcall	___flmul
 17108  05BB  31B3  239C  3182   	fcall	PL18	;call to abstracted procedure
 17109                           
 17110                           ;uart.c: 526: if(light_time==0x00)
 17111  05BE  0021               	movlb	1	; select bank1
 17112  05BF  083F               	movf	(_light_time+1)^(0+128),w
 17113  05C0  043E               	iorwf	_light_time^(0+128),w
 17114  05C1  1D03               	skipz
 17115  05C2  2DCB               	goto	l18492
 17116                           
 17117                           ;uart.c: 527: {
 17118                           ;uart.c: 528: light_time_level = 500;
 17119  05C3  0023               	movlb	3	; select bank3
 17120  05C4  3001               	movlw	1
 17121  05C5  01A3               	clrf	(_light_time_level+3)^(0+384)
 17122  05C6  01A2               	clrf	(_light_time_level+2)^(0+384)
 17123  05C7  00A1               	movwf	(_light_time_level+1)^(0+384)
 17124  05C8  30F4               	movlw	244
 17125  05C9  00A0               	movwf	_light_time_level^(0+384)
 17126                           
 17127                           ;uart.c: 529: }
 17128  05CA  2DE2               	goto	l18494
 17129  05CB                     l18492:	
 17130                           
 17131                           ;uart.c: 530: else
 17132                           ;uart.c: 531: {
 17133                           ;uart.c: 532: light_time_level = (unsigned long int)(light_time*6*180);
 17134  05CB  083F               	movf	(_light_time+1)^(0+128),w
 17135  05CC  0020               	movlb	0	; select bank0
 17136  05CD  00A4               	movwf	___wmul@multiplier+1
 17137  05CE  0021               	movlb	1	; select bank1
 17138  05CF  083E               	movf	_light_time^(0+128),w
 17139  05D0  0020               	movlb	0	; select bank0
 17140  05D1  00A3               	movwf	___wmul@multiplier
 17141  05D2  3038               	movlw	56
 17142  05D3  00A5               	movwf	___wmul@multiplicand
 17143  05D4  3004               	movlw	4
 17144  05D5  00A6               	movwf	___wmul@multiplicand+1
 17145  05D6  3188  20BC  3182   	fcall	___wmul
 17146  05D9  0823               	movf	?___wmul,w
 17147  05DA  0023               	movlb	3	; select bank3
 17148  05DB  00A0               	movwf	_light_time_level^(0+384)
 17149  05DC  0020               	movlb	0	; select bank0
 17150  05DD  0824               	movf	?___wmul+1,w
 17151  05DE  0023               	movlb	3	; select bank3
 17152  05DF  00A1               	movwf	(_light_time_level^(0+384)+1)
 17153  05E0  01A2               	clrf	(_light_time_level^(0+384)+2)
 17154  05E1  01A3               	clrf	(_light_time_level^(0+384)+3)
 17155  05E2                     l18494:	
 17156                           
 17157                           ;uart.c: 544: nop_index=0x00;
 17158                           
 17159                           ;uart.c: 545: discharge_index=0x00;
 17160                           
 17161                           ;uart.c: 546: charge_index=0x00;
 17162                           
 17163                           ;uart.c: 548: led_out_ctrl=0x00;
 17164                           
 17165                           ;uart.c: 549: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 17166  05E2  27D5               	fcall	PL176	;call to abstracted procedure
 17167  05E3  31A7  2775  3182   	fcall	_eeprom_write
 17168                           
 17169                           ;uart.c: 551: pv_voltage_status=0x00;
 17170  05E6  0022               	movlb	2	; select bank2
 17171  05E7  01C3               	clrf	_pv_voltage_status^(0+256)
 17172                           
 17173                           ;uart.c: 553: day_time_count=0x00;
 17174                           
 17175                           ;uart.c: 555: night_time_count=0x00;
 17176  05E8  26DF  3182         	fcall	PL54	;call to abstracted procedure
 17177                           
 17178                           ;uart.c: 557: pv_time_count=0x00;
 17179                           
 17180                           ;uart.c: 561: uart1_tx_buf[0]=0x55;
 17181  05EA  27DE               	fcall	PL186	;call to abstracted procedure
 17182                           
 17183                           ;uart.c: 563: uart1_tx_buf[1]=0xB3;
 17184  05EB  30B3               	movlw	179
 17185  05EC                     L2:	
 17186  05EC  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 17187  05ED  30A1               	movlw	low (_uart1_tx_buf+1)
 17188                           
 17189                           ;uart.c: 565: uart1_tx_buf[2]=0x01;
 17190  05EE  01A2               	clrf	(_uart1_tx_buf^(0+896)+2)
 17191  05EF  0AA2               	incf	(_uart1_tx_buf^(0+896)+2),f
 17192                           
 17193                           ;uart.c: 567: crc_data=crc16(&uart1_tx_buf[1],2);
 17194  05F0  0020               	movlb	0	; select bank0
 17195  05F1  00A3               	movwf	crc16@puchMsg
 17196  05F2  3003               	movlw	high (_uart1_tx_buf+1)
 17197  05F3  00A4               	movwf	crc16@puchMsg+1
 17198  05F4  3002               	movlw	2
 17199  05F5  00A5               	movwf	crc16@usDataLen
 17200  05F6  3189  212C  3182   	fcall	_crc16
 17201                           
 17202                           ;uart.c: 569: uart1_tx_buf[3]=crc_data/256;
 17203  05F9  2702  3182         	fcall	PL86	;call to abstracted procedure
 17204                           
 17205                           ;uart.c: 571: uart1_tx_buf[4]=crc_data%256;
 17206                           
 17207                           ;uart.c: 573: uart1_tx_buf[5]=0xAA;
 17208  05FB  27E7  3182         	fcall	PL208	;call to abstracted procedure
 17209                           
 17210                           ;uart.c: 577: }
 17211  05FD  2E96               	goto	l18632
 17212  05FE                     l18524:	
 17213                           
 17214                           ;uart.c: 578: else
 17215                           ;uart.c: 579: {
 17216                           ;uart.c: 580: uart1_tx_buf[0]=0x55;
 17217  05FE  3055               	movlw	85
 17218  05FF  0027               	movlb	7	; select bank7
 17219  0600  00A0               	movwf	_uart1_tx_buf^(0+896)
 17220                           
 17221                           ;uart.c: 582: uart1_tx_buf[1]=0xB3;
 17222  0601  30B3               	movlw	179
 17223  0602  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 17224                           
 17225                           ;uart.c: 584: uart1_tx_buf[2]=0x02;
 17226  0603  3002               	movlw	2
 17227  0604  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 17228                           
 17229                           ;uart.c: 586: crc_data=crc16(&uart1_tx_buf[1],2);
 17230  0605  27EF               	fcall	PL216	;call to abstracted procedure
 17231  0606  3002               	movlw	2
 17232  0607  00A5               	movwf	crc16@usDataLen
 17233  0608  3189  212C  3182   	fcall	_crc16
 17234                           
 17235                           ;uart.c: 588: uart1_tx_buf[3]=crc_data/256;
 17236  060B  2702  3182         	fcall	PL86	;call to abstracted procedure
 17237                           
 17238                           ;uart.c: 590: uart1_tx_buf[4]=crc_data%256;
 17239                           
 17240                           ;uart.c: 592: uart1_tx_buf[5]=0xAA;
 17241  060D  27E7  3182         	fcall	PL208	;call to abstracted procedure
 17242  060F  0001               	reset	;# 
 17243  0610  2E96               	goto	l18632
 17244  0611                     l1868:	
 17245                           ;uart.c: 604: case 0x04:
 17246                           
 17247                           
 17248                           ;uart.c: 605: work_mode=0x01;
 17249  0611  0021               	movlb	1	; select bank1
 17250  0612  3055               	movlw	85
 17251  0613  01BD               	clrf	_work_mode^(0+128)
 17252  0614  0ABD               	incf	_work_mode^(0+128),f
 17253                           
 17254                           ;uart.c: 607: uart1_tx_buf[0]=0x55;
 17255  0615  0027               	movlb	7	; select bank7
 17256  0616  00A0               	movwf	_uart1_tx_buf^(0+896)
 17257                           
 17258                           ;uart.c: 609: uart1_tx_buf[1]=0xB4;
 17259  0617  30B4               	movlw	180
 17260  0618  2DEC               	goto	L2
 17261  0619                     l18546:	
 17262                           
 17263                           ;uart.c: 625: work_mode=0x02;
 17264  0619  3002               	movlw	2
 17265  061A  0021               	movlb	1	; select bank1
 17266  061B  00BD               	movwf	_work_mode^(0+128)
 17267                           
 17268                           ;uart.c: 627: uart1_tx_buf[0]=0x55;
 17269  061C  3055               	movlw	85
 17270  061D  0027               	movlb	7	; select bank7
 17271  061E  00A0               	movwf	_uart1_tx_buf^(0+896)
 17272                           
 17273                           ;uart.c: 629: uart1_tx_buf[1]=0xB5;
 17274  061F  30B5               	movlw	181
 17275  0620  2DEC               	goto	L2
 17276  0621                     l18558:	
 17277                           
 17278                           ;uart.c: 644: work_mode=0x00;
 17279  0621  0021               	movlb	1	; select bank1
 17280  0622  01BD               	clrf	_work_mode^(0+128)
 17281                           
 17282                           ;uart.c: 645: (LATCbits.LATC0 = 0x01);
 17283  0623  0022               	movlb	2	; select bank2
 17284  0624  140E               	bsf	14,0	;volatile
 17285                           
 17286                           ;uart.c: 647: open_sleep_time=0x00;
 17287  0625  01C0               	clrf	_open_sleep_time^(0+256)
 17288                           
 17289                           ;uart.c: 649: lr_cnt=0x00;
 17290  0626  0024               	movlb	4	; select bank4
 17291  0627  01D6               	clrf	_sleep_time_count^(0+512)
 17292  0628  01D7               	clrf	(_sleep_time_count+1)^(0+512)
 17293                           
 17294                           ;uart.c: 651: nop_index=0x00;
 17295  0629  0023               	movlb	3	; select bank3
 17296                           
 17297                           ;uart.c: 652: discharge_index=0x00;
 17298                           
 17299                           ;uart.c: 653: charge_index=0x00;
 17300                           
 17301                           ;uart.c: 655: led_out_ctrl=0x00;
 17302                           
 17303                           ;uart.c: 656: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 17304  062A  27D5               	fcall	PL176	;call to abstracted procedure
 17305  062B  31A7  2775  3182   	fcall	_eeprom_write
 17306                           
 17307                           ;uart.c: 658: device_status=0x01;
 17308  062E  0021               	movlb	1	; select bank1
 17309  062F  01B4               	clrf	_device_status^(0+128)
 17310  0630  0AB4               	incf	_device_status^(0+128),f
 17311                           
 17312                           ;uart.c: 660: eeprom_write(0x38,(unsigned char)(device_status));
 17313  0631  0834               	movf	_device_status^(0+128),w
 17314  0632  0020               	movlb	0	; select bank0
 17315  0633  00E4               	movwf	eeprom_write@value
 17316  0634  3038               	movlw	56
 17317  0635  31A7  2775  3182   	fcall	_eeprom_write
 17318                           
 17319                           ;uart.c: 662: Disable_Buck_Pwm();
 17320  0638  31A7  276F  3182   	fcall	_Disable_Buck_Pwm
 17321                           
 17322                           ;uart.c: 663: Set_Buck_Pwm_Duty(0);
 17323  063B  0020               	movlb	0	; select bank0
 17324  063C  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 17325  063D  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 17326  063E  318B  23BA  3182   	fcall	_Set_Buck_Pwm_Duty
 17327                           
 17328                           ;uart.c: 664: Disable_Bost_Pwm();
 17329  0641  318B  23B5  3182   	fcall	_Disable_Bost_Pwm
 17330                           
 17331                           ;uart.c: 665: (LATCbits.LATC3 = 0x00);
 17332                           
 17333                           ;uart.c: 666: Set_Bost_Pwm_Duty(0);
 17334  0644  318F  279B  3182   	fcall	PL164	;call to abstracted procedure
 17335  0647  318B  2367  3182   	fcall	_Set_Bost_Pwm_Duty
 17336                           
 17337                           ;uart.c: 668: (LATCbits.LATC3 = 0x01);
 17338  064A  0022               	movlb	2	; select bank2
 17339  064B  158E               	bsf	14,3	;volatile
 17340                           
 17341                           ;uart.c: 669: Enable_Bost_Pwm();
 17342  064C  31A7  2792  3182   	fcall	_Enable_Bost_Pwm
 17343                           
 17344                           ;uart.c: 670: Set_Bost_Pwm_Duty(200);
 17345  064F  30C8               	movlw	200
 17346  0650  0020               	movlb	0	; select bank0
 17347  0651  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
 17348  0652  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
 17349  0653  318B  2367  3182   	fcall	_Set_Bost_Pwm_Duty
 17350                           
 17351                           ;uart.c: 672: delay_ms(1000);
 17352  0656  30E8               	movlw	232
 17353  0657  0020               	movlb	0	; select bank0
 17354  0658  00A3               	movwf	delay_ms@count
 17355  0659  3003               	movlw	3
 17356  065A  00A4               	movwf	delay_ms@count+1
 17357  065B  318B  2392  3182   	fcall	_delay_ms
 17358                           
 17359                           ;uart.c: 674: Set_Bost_Pwm_Duty(0);
 17360  065E  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
 17361  065F  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
 17362  0660  318B  2367  3182   	fcall	_Set_Bost_Pwm_Duty
 17363                           
 17364                           ;uart.c: 676: Disable_Bost_Pwm();
 17365  0663  318B  23B5  3182   	fcall	_Disable_Bost_Pwm
 17366                           
 17367                           ;uart.c: 677: (LATCbits.LATC3 = 0x00);
 17368                           
 17369                           ;uart.c: 678: Set_Bost_Pwm_Duty(0);
 17370  0666  318F  279B  3182   	fcall	PL164	;call to abstracted procedure
 17371  0669  318B  2367  3182   	fcall	_Set_Bost_Pwm_Duty
 17372                           
 17373                           ;uart.c: 680: open_an0_time=0x01;
 17374  066C  0022               	movlb	2	; select bank2
 17375  066D  01B8               	clrf	_open_an0_time^(0+256)
 17376  066E  0AB8               	incf	_open_an0_time^(0+256),f
 17377                           
 17378                           ;uart.c: 682: open_an1_time=0x01;
 17379  066F  01BA               	clrf	_open_an1_time^(0+256)
 17380  0670  0ABA               	incf	_open_an1_time^(0+256),f
 17381                           
 17382                           ;uart.c: 684: open_an2_time=0x01;
 17383  0671  01BB               	clrf	_open_an2_time^(0+256)
 17384  0672  0ABB               	incf	_open_an2_time^(0+256),f
 17385                           
 17386                           ;uart.c: 686: open_an3_time=0x01;
 17387  0673  01BC               	clrf	_open_an3_time^(0+256)
 17388  0674  0ABC               	incf	_open_an3_time^(0+256),f
 17389                           
 17390                           ;uart.c: 688: open_an4_time=0x01;
 17391  0675  01BD               	clrf	_open_an4_time^(0+256)
 17392  0676  0ABD               	incf	_open_an4_time^(0+256),f
 17393                           
 17394                           ;uart.c: 690: open_an9_time=0x01;
 17395  0677  01BE               	clrf	_open_an9_time^(0+256)
 17396  0678  0ABE               	incf	_open_an9_time^(0+256),f
 17397                           
 17398                           ;uart.c: 692: open_an10_time=0x01;
 17399  0679  01B9               	clrf	_open_an10_time^(0+256)
 17400  067A  0AB9               	incf	_open_an10_time^(0+256),f
 17401                           
 17402                           ;uart.c: 694: pv_voltage_status=0x00;
 17403  067B  01C3               	clrf	_pv_voltage_status^(0+256)
 17404                           
 17405                           ;uart.c: 696: day_time_count=0x00;
 17406                           
 17407                           ;uart.c: 698: night_time_count=0x00;
 17408  067C  26DF  3182         	fcall	PL54	;call to abstracted procedure
 17409                           
 17410                           ;uart.c: 700: pv_time_count=0x00;
 17411                           
 17412                           ;uart.c: 703: uart1_tx_buf[0]=0x55;
 17413  067E  27DE  3182         	fcall	PL186	;call to abstracted procedure
 17414                           
 17415                           ;uart.c: 705: uart1_tx_buf[1]=0xB6;
 17416  0680  30B6               	movlw	182
 17417  0681  2DEC               	goto	L2
 17418  0682                     l18630:	
 17419  0682  0845               	movf	_rx_frame_kind^(0+256),w
 17420                           
 17421                           ; Switch size 1, requested type "space"
 17422                           ; Number of cases is 6, Range of values is 1 to 6
 17423                           ; switch strategies available:
 17424                           ; Name         Instructions Cycles
 17425                           ; simple_byte           19    10 (average)
 17426                           ; direct_byte           21     9 (fixed)
 17427                           ; jumptable            263     9 (fixed)
 17428                           ;	Chosen strategy is simple_byte
 17429  0683  3A01               	xorlw	1	; case 1
 17430  0684  1903               	skipnz
 17431  0685  2FFC               	goto	L98
 17432  0686  3A03               	xorlw	3	; case 2
 17433  0687  1903               	skipnz
 17434  0688  2A7D               	goto	l18376
 17435  0689  3A01               	xorlw	1	; case 3
 17436  068A  1903               	skipnz
 17437  068B  2B07               	goto	l18424
 17438  068C  3A07               	xorlw	7	; case 4
 17439  068D  1903               	skipnz
 17440  068E  2E11               	goto	l1868
 17441  068F  3A01               	xorlw	1	; case 5
 17442  0690  1903               	skipnz
 17443  0691  2E19               	goto	l18546
 17444  0692  3A03               	xorlw	3	; case 6
 17445  0693  1903               	skipnz
 17446  0694  2E21               	goto	l18558
 17447  0695  2E96               	goto	l18632
 17448  0696                     l18632:	
 17449                           
 17450                           ;uart.c: 722: rx_frame_kind=0x00;
 17451  0696  0022               	movlb	2	; select bank2
 17452  0697  3020               	movlw	low _uart1_rx_buf
 17453  0698  01C5               	clrf	_rx_frame_kind^(0+256)
 17454                           
 17455                           ;uart.c: 724: memset (uart1_rx_buf,0,sizeof(uart1_rx_buf));
 17456  0699  0020               	movlb	0	; select bank0
 17457  069A  00A3               	movwf	memset@p1
 17458  069B  3004               	movlw	high _uart1_rx_buf
 17459  069C  00A4               	movwf	memset@p1+1
 17460  069D  3050               	movlw	80
 17461  069E  01A5               	clrf	memset@c
 17462  069F  01A6               	clrf	memset@c+1
 17463  06A0  00A7               	movwf	memset@n
 17464  06A1  01A8               	clrf	memset@n+1
 17465  06A2  31A7  2FE9         	ljmp	l15090
 17466  06A4                     __end_of_handle_uart_rx_buf:	
 17467  06A4                     PL12:	
 17468  06A4  0021               	movlb	1	; select bank1
 17469  06A5  0865               	movf	(_load_cc_I+3)^(0+128),w
 17470  06A6  0020               	movlb	0	; select bank0
 17471  06A7  00CE               	movwf	___fldiv@f1+3
 17472  06A8  0021               	movlb	1	; select bank1
 17473  06A9  0864               	movf	(_load_cc_I+2)^(0+128),w
 17474  06AA  0020               	movlb	0	; select bank0
 17475  06AB  00CD               	movwf	___fldiv@f1+2
 17476  06AC  0021               	movlb	1	; select bank1
 17477  06AD  0863               	movf	(_load_cc_I+1)^(0+128),w
 17478  06AE  0020               	movlb	0	; select bank0
 17479  06AF  00CC               	movwf	___fldiv@f1+1
 17480  06B0  0021               	movlb	1	; select bank1
 17481  06B1  0862               	movf	_load_cc_I^(0+128),w
 17482  06B2  0020               	movlb	0	; select bank0
 17483  06B3  00CB               	movwf	___fldiv@f1
 17484  06B4  3043               	movlw	67
 17485  06B5  00CA               	movwf	___fldiv@f2+3
 17486  06B6  3080               	movlw	128
 17487  06B7  00C9               	movwf	___fldiv@f2+2
 17488  06B8  01C8               	clrf	___fldiv@f2+1
 17489  06B9  01C7               	clrf	___fldiv@f2
 17490  06BA  0008               	return
 17491  06BB                     __end_ofPL12:	
 17492  06BB                     PL26:	
 17493  06BB  0020               	movlb	0	; select bank0
 17494  06BC  00CB               	movwf	___fldiv@f1
 17495  06BD  3043               	movlw	67
 17496  06BE  00CA               	movwf	___fldiv@f2+3
 17497  06BF  3080               	movlw	128
 17498  06C0  00C9               	movwf	___fldiv@f2+2
 17499  06C1  01C8               	clrf	___fldiv@f2+1
 17500  06C2  01C7               	clrf	___fldiv@f2
 17501  06C3  0008               	return
 17502  06C4                     __end_ofPL26:	
 17503  06C4                     PL28:	
 17504  06C4  084A               	movf	?___fldiv+3,w
 17505  06C5  00DD               	movwf	___fltol@f1+3
 17506  06C6  0849               	movf	?___fldiv+2,w
 17507  06C7  00DC               	movwf	___fltol@f1+2
 17508  06C8  0848               	movf	?___fldiv+1,w
 17509  06C9  00DB               	movwf	___fltol@f1+1
 17510  06CA  0847               	movf	?___fldiv,w
 17511  06CB  00DA               	movwf	___fltol@f1
 17512  06CC  0008               	return
 17513  06CD                     __end_ofPL28:	
 17514  06CD                     PL30:	
 17515  06CD  084A               	movf	?___fldiv+3,w
 17516  06CE  00BB               	movwf	___flmul@f2+3
 17517  06CF  0849               	movf	?___fldiv+2,w
 17518  06D0  00BA               	movwf	___flmul@f2+2
 17519  06D1  0848               	movf	?___fldiv+1,w
 17520  06D2  00B9               	movwf	___flmul@f2+1
 17521  06D3  0847               	movf	?___fldiv,w
 17522  06D4  00B8               	movwf	___flmul@f2
 17523  06D5  0008               	return
 17524  06D6                     __end_ofPL30:	
 17525  06D6                     PL50:	
 17526  06D6  0833               	movf	?___lwtofl+3,w
 17527  06D7  00CE               	movwf	___fldiv@f1+3
 17528  06D8  0832               	movf	?___lwtofl+2,w
 17529  06D9  00CD               	movwf	___fldiv@f1+2
 17530  06DA  0831               	movf	?___lwtofl+1,w
 17531  06DB  00CC               	movwf	___fldiv@f1+1
 17532  06DC  0830               	movf	?___lwtofl,w
 17533  06DD  00CB               	movwf	___fldiv@f1
 17534  06DE  0008               	return
 17535  06DF                     __end_ofPL50:	
 17536  06DF                     PL54:	
 17537  06DF  0025               	movlb	5	; select bank5
 17538  06E0  01A4               	clrf	_day_time_count^(0+640)
 17539  06E1  01A5               	clrf	(_day_time_count+1)^(0+640)
 17540  06E2  01A6               	clrf	(_day_time_count+2)^(0+640)
 17541  06E3  01A7               	clrf	(_day_time_count+3)^(0+640)
 17542  06E4  0024               	movlb	4	; select bank4
 17543  06E5  01B4               	clrf	_night_time_count^(0+512)
 17544  06E6  01B5               	clrf	(_night_time_count+1)^(0+512)
 17545  06E7  01B6               	clrf	(_night_time_count+2)^(0+512)
 17546  06E8  01B7               	clrf	(_night_time_count+3)^(0+512)
 17547  06E9  0008               	return
 17548  06EA                     __end_ofPL54:	
 17549  06EA                     PL78:	
 17550  06EA  0021               	movlb	1	; select bank1
 17551  06EB  0861               	movf	(_light_pv+3)^(0+128),w
 17552  06EC  0020               	movlb	0	; select bank0
 17553  06ED  00CE               	movwf	___fldiv@f1+3
 17554  06EE  0021               	movlb	1	; select bank1
 17555  06EF  0860               	movf	(_light_pv+2)^(0+128),w
 17556  06F0  0020               	movlb	0	; select bank0
 17557  06F1  00CD               	movwf	___fldiv@f1+2
 17558  06F2  0021               	movlb	1	; select bank1
 17559  06F3  085F               	movf	(_light_pv+1)^(0+128),w
 17560  06F4  0020               	movlb	0	; select bank0
 17561  06F5  00CC               	movwf	___fldiv@f1+1
 17562  06F6  0021               	movlb	1	; select bank1
 17563  06F7  085E               	movf	_light_pv^(0+128),w
 17564  06F8  0008               	return
 17565  06F9                     __end_ofPL78:	
 17566  06F9                     PL84:	
 17567  06F9  0021               	movlb	1	; select bank1
 17568  06FA  0831               	movf	(_pv_voltage_value+1)^(0+128),w
 17569  06FB  0020               	movlb	0	; select bank0
 17570  06FC  00B1               	movwf	___lwtofl@c+1
 17571  06FD  0021               	movlb	1	; select bank1
 17572  06FE  0830               	movf	_pv_voltage_value^(0+128),w
 17573  06FF  0020               	movlb	0	; select bank0
 17574  0700  00B0               	movwf	___lwtofl@c
 17575  0701  0008               	return
 17576  0702                     __end_ofPL84:	
 17577  0702                     PL86:	
 17578  0702  0824               	movf	?_crc16+1,w
 17579  0703  0021               	movlb	1	; select bank1
 17580  0704  00A9               	movwf	(_crc_data+1)^(0+128)
 17581  0705  0020               	movlb	0	; select bank0
 17582  0706  0823               	movf	?_crc16,w
 17583  0707  0021               	movlb	1	; select bank1
 17584  0708  00A8               	movwf	_crc_data^(0+128)
 17585  0709  0829               	movf	(_crc_data+1)^(0+128),w
 17586  070A  0027               	movlb	7	; select bank7
 17587  070B  0008               	return
 17588  070C                     __end_ofPL86:	
 17589  070C                     PL108:	
 17590  070C  0022               	movlb	2	; select bank2
 17591  070D  0864               	movf	(_step_04_load_percent+3)^(0+256),w
 17592  070E  0020               	movlb	0	; select bank0
 17593  070F  00DD               	movwf	___fltol@f1+3
 17594  0710  0022               	movlb	2	; select bank2
 17595  0711  0863               	movf	(_step_04_load_percent+2)^(0+256),w
 17596  0712  0020               	movlb	0	; select bank0
 17597  0713  00DC               	movwf	___fltol@f1+2
 17598  0714  0022               	movlb	2	; select bank2
 17599  0715  0862               	movf	(_step_04_load_percent+1)^(0+256),w
 17600  0716  0020               	movlb	0	; select bank0
 17601  0717  00DB               	movwf	___fltol@f1+1
 17602  0718  0022               	movlb	2	; select bank2
 17603  0719  0861               	movf	_step_04_load_percent^(0+256),w
 17604  071A  0020               	movlb	0	; select bank0
 17605  071B  00DA               	movwf	___fltol@f1
 17606  071C  0008               	return
 17607  071D                     __end_ofPL108:	
 17608  071D                     PL110:	
 17609  071D  0022               	movlb	2	; select bank2
 17610  071E  0868               	movf	(_step_05_load_percent+3)^(0+256),w
 17611  071F  0020               	movlb	0	; select bank0
 17612  0720  00DD               	movwf	___fltol@f1+3
 17613  0721  0022               	movlb	2	; select bank2
 17614  0722  0867               	movf	(_step_05_load_percent+2)^(0+256),w
 17615  0723  0020               	movlb	0	; select bank0
 17616  0724  00DC               	movwf	___fltol@f1+2
 17617  0725  0022               	movlb	2	; select bank2
 17618  0726  0866               	movf	(_step_05_load_percent+1)^(0+256),w
 17619  0727  0020               	movlb	0	; select bank0
 17620  0728  00DB               	movwf	___fltol@f1+1
 17621  0729  0022               	movlb	2	; select bank2
 17622  072A  0865               	movf	_step_05_load_percent^(0+256),w
 17623  072B  0020               	movlb	0	; select bank0
 17624  072C  00DA               	movwf	___fltol@f1
 17625  072D  0008               	return
 17626  072E                     __end_ofPL110:	
 17627  072E                     PL114:	
 17628  072E  0022               	movlb	2	; select bank2
 17629  072F  0858               	movf	(_step_01_load_percent+3)^(0+256),w
 17630  0730  0020               	movlb	0	; select bank0
 17631  0731  00DD               	movwf	___fltol@f1+3
 17632  0732  0022               	movlb	2	; select bank2
 17633  0733  0857               	movf	(_step_01_load_percent+2)^(0+256),w
 17634  0734  0020               	movlb	0	; select bank0
 17635  0735  00DC               	movwf	___fltol@f1+2
 17636  0736  0022               	movlb	2	; select bank2
 17637  0737  0856               	movf	(_step_01_load_percent+1)^(0+256),w
 17638  0738  0020               	movlb	0	; select bank0
 17639  0739  00DB               	movwf	___fltol@f1+1
 17640  073A  0022               	movlb	2	; select bank2
 17641  073B  0855               	movf	_step_01_load_percent^(0+256),w
 17642  073C  0020               	movlb	0	; select bank0
 17643  073D  00DA               	movwf	___fltol@f1
 17644  073E  0008               	return
 17645  073F                     __end_ofPL114:	
 17646  073F                     PL116:	
 17647  073F  0022               	movlb	2	; select bank2
 17648  0740  0860               	movf	(_step_03_load_percent+3)^(0+256),w
 17649  0741  0020               	movlb	0	; select bank0
 17650  0742  00DD               	movwf	___fltol@f1+3
 17651  0743  0022               	movlb	2	; select bank2
 17652  0744  085F               	movf	(_step_03_load_percent+2)^(0+256),w
 17653  0745  0020               	movlb	0	; select bank0
 17654  0746  00DC               	movwf	___fltol@f1+2
 17655  0747  0022               	movlb	2	; select bank2
 17656  0748  085E               	movf	(_step_03_load_percent+1)^(0+256),w
 17657  0749  0020               	movlb	0	; select bank0
 17658  074A  00DB               	movwf	___fltol@f1+1
 17659  074B  0022               	movlb	2	; select bank2
 17660  074C  085D               	movf	_step_03_load_percent^(0+256),w
 17661  074D  0020               	movlb	0	; select bank0
 17662  074E  00DA               	movwf	___fltol@f1
 17663  074F  0008               	return
 17664  0750                     __end_ofPL116:	
 17665  0750                     PL118:	
 17666  0750  0022               	movlb	2	; select bank2
 17667  0751  085C               	movf	(_step_02_load_percent+3)^(0+256),w
 17668  0752  0020               	movlb	0	; select bank0
 17669  0753  00DD               	movwf	___fltol@f1+3
 17670  0754  0022               	movlb	2	; select bank2
 17671  0755  085B               	movf	(_step_02_load_percent+2)^(0+256),w
 17672  0756  0020               	movlb	0	; select bank0
 17673  0757  00DC               	movwf	___fltol@f1+2
 17674  0758  0022               	movlb	2	; select bank2
 17675  0759  085A               	movf	(_step_02_load_percent+1)^(0+256),w
 17676  075A  0020               	movlb	0	; select bank0
 17677  075B  00DB               	movwf	___fltol@f1+1
 17678  075C  0022               	movlb	2	; select bank2
 17679  075D  0859               	movf	_step_02_load_percent^(0+256),w
 17680  075E  0020               	movlb	0	; select bank0
 17681  075F  00DA               	movwf	___fltol@f1
 17682  0760  0008               	return
 17683  0761                     __end_ofPL118:	
 17684  0761                     PL120:	
 17685  0761  0021               	movlb	1	; select bank1
 17686  0762  0865               	movf	(_load_cc_I+3)^(0+128),w
 17687  0763  0020               	movlb	0	; select bank0
 17688  0764  00DD               	movwf	___fltol@f1+3
 17689  0765  0021               	movlb	1	; select bank1
 17690  0766  0864               	movf	(_load_cc_I+2)^(0+128),w
 17691  0767  0020               	movlb	0	; select bank0
 17692  0768  00DC               	movwf	___fltol@f1+2
 17693  0769  0021               	movlb	1	; select bank1
 17694  076A  0863               	movf	(_load_cc_I+1)^(0+128),w
 17695  076B  0020               	movlb	0	; select bank0
 17696  076C  00DB               	movwf	___fltol@f1+1
 17697  076D  0021               	movlb	1	; select bank1
 17698  076E  0862               	movf	_load_cc_I^(0+128),w
 17699  076F  0020               	movlb	0	; select bank0
 17700  0770  00DA               	movwf	___fltol@f1
 17701  0771  0008               	return
 17702  0772                     __end_ofPL120:	
 17703  0772                     PL122:	
 17704  0772  0021               	movlb	1	; select bank1
 17705  0773  0861               	movf	(_light_pv+3)^(0+128),w
 17706  0774  0020               	movlb	0	; select bank0
 17707  0775  00DD               	movwf	___fltol@f1+3
 17708  0776  0021               	movlb	1	; select bank1
 17709  0777  0860               	movf	(_light_pv+2)^(0+128),w
 17710  0778  0020               	movlb	0	; select bank0
 17711  0779  00DC               	movwf	___fltol@f1+2
 17712  077A  0021               	movlb	1	; select bank1
 17713  077B  085F               	movf	(_light_pv+1)^(0+128),w
 17714  077C  0020               	movlb	0	; select bank0
 17715  077D  00DB               	movwf	___fltol@f1+1
 17716  077E  0021               	movlb	1	; select bank1
 17717  077F  085E               	movf	_light_pv^(0+128),w
 17718  0780  0020               	movlb	0	; select bank0
 17719  0781  00DA               	movwf	___fltol@f1
 17720  0782  0008               	return
 17721  0783                     __end_ofPL122:	
 17722  0783                     PL134:	
 17723  0783  086C               	movf	_today_index,w
 17724  0784  3E03               	addlw	3
 17725  0785  3907               	andlw	7
 17726  0786  0709               	addwf	9,w
 17727  0787  0709               	addwf	9,w
 17728  0788  0008               	return
 17729  0789                     __end_ofPL134:	
 17730  0789                     PL136:	
 17731  0789  086C               	movf	_today_index,w
 17732  078A  3E02               	addlw	2
 17733  078B  3907               	andlw	7
 17734  078C  0709               	addwf	9,w
 17735  078D  0709               	addwf	9,w
 17736  078E  0008               	return
 17737  078F                     __end_ofPL136:	
 17738  078F                     PL140:	
 17739  078F  086C               	movf	_today_index,w
 17740  0790  3E01               	addlw	1
 17741  0791  3907               	andlw	7
 17742  0792  0709               	addwf	9,w
 17743  0793  0709               	addwf	9,w
 17744  0794  0008               	return
 17745  0795                     __end_ofPL140:	
 17746  0795                     PL142:	
 17747  0795  086C               	movf	_today_index,w
 17748  0796  3E04               	addlw	4
 17749  0797  3907               	andlw	7
 17750  0798  0709               	addwf	9,w
 17751  0799  0709               	addwf	9,w
 17752  079A  0008               	return
 17753  079B                     __end_ofPL142:	
 17754  079B                     PL144:	
 17755  079B  086C               	movf	_today_index,w
 17756  079C  3E05               	addlw	5
 17757  079D  3907               	andlw	7
 17758  079E  0709               	addwf	9,w
 17759  079F  0709               	addwf	9,w
 17760  07A0  0008               	return
 17761  07A1                     __end_ofPL144:	
 17762  07A1                     PL146:	
 17763  07A1  086C               	movf	_today_index,w
 17764  07A2  3E07               	addlw	7
 17765  07A3  3907               	andlw	7
 17766  07A4  0709               	addwf	9,w
 17767  07A5  0709               	addwf	9,w
 17768  07A6  0008               	return
 17769  07A7                     __end_ofPL146:	
 17770  07A7                     PL148:	
 17771  07A7  086C               	movf	_today_index,w
 17772  07A8  3E06               	addlw	6
 17773  07A9  3907               	andlw	7
 17774  07AA  0709               	addwf	9,w
 17775  07AB  0709               	addwf	9,w
 17776  07AC  0008               	return
 17777  07AD                     __end_ofPL148:	
 17778  07AD                     PL152:	
 17779  07AD  00DD               	movwf	___flge@ff1+3
 17780  07AE  30C8               	movlw	200
 17781  07AF  00DC               	movwf	___flge@ff1+2
 17782  07B0  01DB               	clrf	___flge@ff1+1
 17783  07B1  01DA               	clrf	___flge@ff1
 17784  07B2  0022               	movlb	2	; select bank2
 17785  07B3  0008               	return
 17786  07B4                     __end_ofPL152:	
 17787  07B4                     PL154:	
 17788  07B4  0020               	movlb	0	; select bank0
 17789  07B5  00B7               	movwf	___flmul@f1+3
 17790  07B6  3074               	movlw	116
 17791  07B7  00B6               	movwf	___flmul@f1+2
 17792  07B8  3041               	movlw	65
 17793  07B9  01B5               	clrf	___flmul@f1+1
 17794  07BA  01B4               	clrf	___flmul@f1
 17795  07BB  00CA               	movwf	___fldiv@f2+3
 17796  07BC  3020               	movlw	32
 17797  07BD  00C9               	movwf	___fldiv@f2+2
 17798  07BE  01C8               	clrf	___fldiv@f2+1
 17799  07BF  01C7               	clrf	___fldiv@f2
 17800  07C0  0008               	return
 17801  07C1                     __end_ofPL154:	
 17802  07C1                     PL166:	
 17803  07C1  0823               	movf	?_crc16,w
 17804  07C2  00E6               	movwf	handle_uart_rx_buf@crc_in
 17805  07C3  0867               	movf	handle_uart_rx_buf@crc_in+1,w
 17806  07C4  0028               	movlb	8	; select bank8
 17807  07C5  0622               	xorwf	(_uart1_rx_buf^(0+1024)+2),w
 17808  07C6  1D03               	skipz
 17809  07C7  0008               	return
 17810  07C8  0020               	movlb	0	; select bank0
 17811  07C9  0866               	movf	handle_uart_rx_buf@crc_in,w
 17812  07CA  0028               	movlb	8	; select bank8
 17813  07CB  0623               	xorwf	(_uart1_rx_buf^(0+1024)+3),w
 17814  07CC  0008               	return
 17815  07CD                     __end_ofPL166:	
 17816  07CD                     PL168:	
 17817  07CD  0825               	movf	(_charge_current_value+1)^(0+256),w
 17818  07CE  0020               	movlb	0	; select bank0
 17819  07CF  00B1               	movwf	___lwtofl@c+1
 17820  07D0  0022               	movlb	2	; select bank2
 17821  07D1  0824               	movf	_charge_current_value^(0+256),w
 17822  07D2  0020               	movlb	0	; select bank0
 17823  07D3  00B0               	movwf	___lwtofl@c
 17824  07D4  0008               	return
 17825  07D5                     __end_ofPL168:	
 17826  07D5                     PL176:	
 17827  07D5  01C1               	clrf	_nop_index^(0+384)
 17828  07D6  0021               	movlb	1	; select bank1
 17829  07D7  01B5               	clrf	_discharge_index^(0+128)
 17830  07D8  01B3               	clrf	_charge_index^(0+128)
 17831  07D9  01B7               	clrf	_led_out_ctrl^(0+128)
 17832  07DA  0837               	movf	_led_out_ctrl^(0+128),w
 17833  07DB  0020               	movlb	0	; select bank0
 17834  07DC  00E4               	movwf	eeprom_write@value
 17835  07DD  3439               	retlw	57
 17836  07DE                     __end_ofPL176:	
 17837  07DE                     PL186:	
 17838  07DE  0025               	movlb	5	; select bank5
 17839  07DF  3055               	movlw	85
 17840  07E0  01A8               	clrf	_pv_time_count^(0+640)
 17841  07E1  01A9               	clrf	(_pv_time_count+1)^(0+640)
 17842  07E2  01AA               	clrf	(_pv_time_count+2)^(0+640)
 17843  07E3  01AB               	clrf	(_pv_time_count+3)^(0+640)
 17844  07E4  0027               	movlb	7	; select bank7
 17845  07E5  00A0               	movwf	_uart1_tx_buf^(0+896)
 17846  07E6  0008               	return
 17847  07E7                     __end_ofPL186:	
 17848  07E7                     PL208:	
 17849  07E7  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 17850  07E8  0021               	movlb	1	; select bank1
 17851  07E9  0828               	movf	_crc_data^(0+128),w
 17852  07EA  0027               	movlb	7	; select bank7
 17853  07EB  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 17854  07EC  30AA               	movlw	170
 17855  07ED  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 17856  07EE  0008               	return
 17857  07EF                     __end_ofPL208:	
 17858  07EF                     PL216:	
 17859  07EF  30A1               	movlw	low (_uart1_tx_buf+1)
 17860  07F0  0020               	movlb	0	; select bank0
 17861  07F1  00A3               	movwf	crc16@puchMsg
 17862  07F2  3003               	movlw	high (_uart1_tx_buf+1)
 17863  07F3  00A4               	movwf	crc16@puchMsg+1
 17864  07F4  0008               	return
 17865  07F5                     __end_ofPL216:	
 17866  07F5                     PL224:	
 17867  07F5  0020               	movlb	0	; select bank0
 17868  07F6  00A3               	movwf	crc16@puchMsg
 17869  07F7  3004               	movlw	high (_uart1_rx_buf+1)
 17870  07F8  00A4               	movwf	crc16@puchMsg+1
 17871  07F9  01A5               	clrf	crc16@usDataLen
 17872  07FA  0AA5               	incf	crc16@usDataLen,f
 17873  07FB  0008               	return
 17874  07FC                     L98:	
 17875  07FC                     __end_ofPL224:	
 17876  07FC  31A9  2916         	ljmp	l18256
 17877                           
 17878                           	psect	text10_split_2
 17879  3377                     PL4:	
 17880  3377  00B7               	movwf	___flmul@f1+3
 17881  3378  3020               	movlw	32
 17882  3379  00B6               	movwf	___flmul@f1+2
 17883  337A  3042               	movlw	66
 17884  337B  01B5               	clrf	___flmul@f1+1
 17885  337C  01B4               	clrf	___flmul@f1
 17886  337D  00CA               	movwf	___fldiv@f2+3
 17887  337E  30C8               	movlw	200
 17888  337F  00C9               	movwf	___fldiv@f2+2
 17889  3380  01C8               	clrf	___fldiv@f2+1
 17890  3381  01C7               	clrf	___fldiv@f2
 17891  3382  0021               	movlb	1	; select bank1
 17892  3383  0865               	movf	(_load_cc_I+3)^(0+128),w
 17893  3384  0020               	movlb	0	; select bank0
 17894  3385  00CE               	movwf	___fldiv@f1+3
 17895  3386  0021               	movlb	1	; select bank1
 17896  3387  0864               	movf	(_load_cc_I+2)^(0+128),w
 17897  3388  0020               	movlb	0	; select bank0
 17898  3389  00CD               	movwf	___fldiv@f1+2
 17899  338A  0021               	movlb	1	; select bank1
 17900  338B  0863               	movf	(_load_cc_I+1)^(0+128),w
 17901  338C  0020               	movlb	0	; select bank0
 17902  338D  00CC               	movwf	___fldiv@f1+1
 17903  338E  0021               	movlb	1	; select bank1
 17904  338F  0862               	movf	_load_cc_I^(0+128),w
 17905  3390  0020               	movlb	0	; select bank0
 17906  3391  00CB               	movwf	___fldiv@f1
 17907  3392  0008               	return
 17908  3393                     __end_ofPL4:	
 17909  3393                     PL16:	
 17910  3393  0833               	movf	?___lwtofl+3,w
 17911  3394  00DD               	movwf	___flge@ff1+3
 17912  3395  0832               	movf	?___lwtofl+2,w
 17913  3396  00DC               	movwf	___flge@ff1+2
 17914  3397  0831               	movf	?___lwtofl+1,w
 17915  3398  00DB               	movwf	___flge@ff1+1
 17916  3399  0830               	movf	?___lwtofl,w
 17917  339A  00DA               	movwf	___flge@ff1
 17918  339B  0008               	return
 17919  339C                     __end_ofPL16:	
 17920  339C                     PL18:	
 17921  339C  0837               	movf	?___flmul+3,w
 17922  339D  0023               	movlb	3	; select bank3
 17923  339E  00CA               	movwf	(_PID_CC_discharge+3)^(0+384)
 17924  339F  0020               	movlb	0	; select bank0
 17925  33A0  0836               	movf	?___flmul+2,w
 17926  33A1  0023               	movlb	3	; select bank3
 17927  33A2  00C9               	movwf	(_PID_CC_discharge+2)^(0+384)
 17928  33A3  0020               	movlb	0	; select bank0
 17929  33A4  0835               	movf	?___flmul+1,w
 17930  33A5  0023               	movlb	3	; select bank3
 17931  33A6  00C8               	movwf	(_PID_CC_discharge+1)^(0+384)
 17932  33A7  0020               	movlb	0	; select bank0
 17933  33A8  0834               	movf	?___flmul,w
 17934  33A9  0023               	movlb	3	; select bank3
 17935  33AA  00C7               	movwf	_PID_CC_discharge^(0+384)
 17936  33AB  0008               	return
 17937  33AC                     __end_ofPL18:	
 17938  33AC                     PL20:	
 17939  33AC  0833               	movf	?___lwtofl+3,w
 17940  33AD  00E1               	movwf	___flge@ff2+3
 17941  33AE  0832               	movf	?___lwtofl+2,w
 17942  33AF  00E0               	movwf	___flge@ff2+2
 17943  33B0  0831               	movf	?___lwtofl+1,w
 17944  33B1  00DF               	movwf	___flge@ff2+1
 17945  33B2  0830               	movf	?___lwtofl,w
 17946  33B3  00DE               	movwf	___flge@ff2
 17947  33B4  0008               	return
 17948  33B5                     __end_ofPL20:	
 17949  33B5                     PL32:	
 17950  33B5  0021               	movlb	1	; select bank1
 17951  33B6  00DC               	movwf	??_handle_ad_loop^(0+128)
 17952  33B7  01DD               	clrf	(??_handle_ad_loop^(0+128)+1)
 17953  33B8  085D               	movf	(??_handle_ad_loop+1)^(0+128),w
 17954  33B9  027D               	subwf	_ho_cnt+1,w
 17955  33BA  1D03               	skipz
 17956  33BB  0008               	return
 17957  33BC  085C               	movf	??_handle_ad_loop^(0+128),w
 17958  33BD  027C               	subwf	_ho_cnt,w
 17959  33BE  0008               	return
 17960  33BF                     __end_ofPL32:	
 17961  33BF                     PL48:	
 17962  33BF  00A4               	movwf	_bost_pwm_value^(0+128)
 17963  33C0  01A5               	clrf	(_bost_pwm_value+1)^(0+128)
 17964  33C1  0825               	movf	(_bost_pwm_value+1)^(0+128),w
 17965  33C2  0020               	movlb	0	; select bank0
 17966  33C3  00A4               	movwf	Set_Bost_Pwm_Duty@dduty+1
 17967  33C4  0021               	movlb	1	; select bank1
 17968  33C5  0824               	movf	_bost_pwm_value^(0+128),w
 17969  33C6  0020               	movlb	0	; select bank0
 17970  33C7  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
 17971  33C8  0008               	return
 17972  33C9                     __end_ofPL48:	
 17973  33C9                     PL52:	
 17974  33C9  0833               	movf	?___lwtofl+3,w
 17975  33CA  00CA               	movwf	___fldiv@f2+3
 17976  33CB  0832               	movf	?___lwtofl+2,w
 17977  33CC  00C9               	movwf	___fldiv@f2+2
 17978  33CD  0831               	movf	?___lwtofl+1,w
 17979  33CE  00C8               	movwf	___fldiv@f2+1
 17980  33CF  0830               	movf	?___lwtofl,w
 17981  33D0  00C7               	movwf	___fldiv@f2
 17982  33D1  3043               	movlw	67
 17983  33D2  00B7               	movwf	___flmul@f1+3
 17984  33D3  3020               	movlw	32
 17985  33D4  00B6               	movwf	___flmul@f1+2
 17986  33D5  01B5               	clrf	___flmul@f1+1
 17987  33D6  01B4               	clrf	___flmul@f1
 17988  33D7  0025               	movlb	5	; select bank5
 17989  33D8  084B               	movf	(_Load_Pmax+3)^(0+640),w
 17990  33D9  0020               	movlb	0	; select bank0
 17991  33DA  00BB               	movwf	___flmul@f2+3
 17992  33DB  0025               	movlb	5	; select bank5
 17993  33DC  084A               	movf	(_Load_Pmax+2)^(0+640),w
 17994  33DD  0020               	movlb	0	; select bank0
 17995  33DE  00BA               	movwf	___flmul@f2+2
 17996  33DF  0025               	movlb	5	; select bank5
 17997  33E0  0849               	movf	(_Load_Pmax+1)^(0+640),w
 17998  33E1  0020               	movlb	0	; select bank0
 17999  33E2  00B9               	movwf	___flmul@f2+1
 18000  33E3  0025               	movlb	5	; select bank5
 18001  33E4  0848               	movf	_Load_Pmax^(0+640),w
 18002  33E5  0020               	movlb	0	; select bank0
 18003  33E6  00B8               	movwf	___flmul@f2
 18004  33E7  0008               	return
 18005  33E8                     __end_ofPL52:	
 18006  33E8                     PL56:	
 18007  33E8  0020               	movlb	0	; select bank0
 18008  33E9  00DA               	movwf	___flge@ff1
 18009  33EA  086B               	movf	_battery_voltage_value+1,w
 18010  33EB  00B1               	movwf	___lwtofl@c+1
 18011  33EC  086A               	movf	_battery_voltage_value,w
 18012  33ED  00B0               	movwf	___lwtofl@c
 18013  33EE  0008               	return
 18014  33EF                     __end_ofPL56:	
 18015  33EF                     PL58:	
 18016  33EF  0023               	movlb	3	; select bank3
 18017  33F0  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 18018  33F1  0020               	movlb	0	; select bank0
 18019  33F2  00E1               	movwf	___flge@ff2+3
 18020  33F3  0023               	movlb	3	; select bank3
 18021  33F4  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 18022  33F5  0020               	movlb	0	; select bank0
 18023  33F6  00E0               	movwf	___flge@ff2+2
 18024  33F7  0023               	movlb	3	; select bank3
 18025  33F8  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 18026  33F9  0020               	movlb	0	; select bank0
 18027  33FA  00DF               	movwf	___flge@ff2+1
 18028  33FB  0023               	movlb	3	; select bank3
 18029  33FC  0847               	movf	_PID_CC_discharge^(0+384),w
 18030  33FD  0020               	movlb	0	; select bank0
 18031  33FE  00DE               	movwf	___flge@ff2
 18032  33FF  0008               	return
 18033  3400                     __end_ofPL58:	
 18034  3400                     PL62:	
 18035  3400  0825               	movf	(_bost_pwm_value+1)^(0+128),w
 18036  3401  0020               	movlb	0	; select bank0
 18037  3402  00A4               	movwf	Set_Bost_Pwm_Duty@dduty+1
 18038  3403  0021               	movlb	1	; select bank1
 18039  3404  0824               	movf	_bost_pwm_value^(0+128),w
 18040  3405  0020               	movlb	0	; select bank0
 18041  3406  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
 18042  3407  0008               	return
 18043  3408                     __end_ofPL62:	
 18044  3408                     PL70:	
 18045  3408  0023               	movlb	3	; select bank3
 18046  3409  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 18047  340A  0020               	movlb	0	; select bank0
 18048  340B  00BB               	movwf	___flmul@f2+3
 18049  340C  0023               	movlb	3	; select bank3
 18050  340D  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 18051  340E  0020               	movlb	0	; select bank0
 18052  340F  00BA               	movwf	___flmul@f2+2
 18053  3410  0023               	movlb	3	; select bank3
 18054  3411  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 18055  3412  0020               	movlb	0	; select bank0
 18056  3413  00B9               	movwf	___flmul@f2+1
 18057  3414  0023               	movlb	3	; select bank3
 18058  3415  0847               	movf	_PID_CC_discharge^(0+384),w
 18059  3416  0008               	return
 18060  3417                     __end_ofPL70:	
 18061  3417                     PL72:	
 18062  3417  0830               	movf	?___awtofl+3,w
 18063  3418  00CE               	movwf	___fladd@f2+3
 18064  3419  082F               	movf	?___awtofl+2,w
 18065  341A  00CD               	movwf	___fladd@f2+2
 18066  341B  082E               	movf	?___awtofl+1,w
 18067  341C  00CC               	movwf	___fladd@f2+1
 18068  341D  082D               	movf	?___awtofl,w
 18069  341E  00CB               	movwf	___fladd@f2
 18070  341F  0022               	movlb	2	; select bank2
 18071  3420  0854               	movf	(_dianchi_guoya_baohu+3)^(0+256),w
 18072  3421  0020               	movlb	0	; select bank0
 18073  3422  00CA               	movwf	___fladd@f1+3
 18074  3423  0022               	movlb	2	; select bank2
 18075  3424  0853               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
 18076  3425  0020               	movlb	0	; select bank0
 18077  3426  00C9               	movwf	___fladd@f1+2
 18078  3427  0022               	movlb	2	; select bank2
 18079  3428  0852               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
 18080  3429  0020               	movlb	0	; select bank0
 18081  342A  00C8               	movwf	___fladd@f1+1
 18082  342B  0022               	movlb	2	; select bank2
 18083  342C  0851               	movf	_dianchi_guoya_baohu^(0+256),w
 18084  342D  0020               	movlb	0	; select bank0
 18085  342E  00C7               	movwf	___fladd@f1
 18086  342F  0008               	return
 18087  3430                     __end_ofPL72:	
 18088  3430                     PL74:	
 18089  3430  085F               	movf	(_discharge_i_limit+3)^(0+640),w
 18090  3431  0020               	movlb	0	; select bank0
 18091  3432  00DD               	movwf	___flge@ff1+3
 18092  3433  0025               	movlb	5	; select bank5
 18093  3434  085E               	movf	(_discharge_i_limit+2)^(0+640),w
 18094  3435  0020               	movlb	0	; select bank0
 18095  3436  00DC               	movwf	___flge@ff1+2
 18096  3437  0025               	movlb	5	; select bank5
 18097  3438  085D               	movf	(_discharge_i_limit+1)^(0+640),w
 18098  3439  0020               	movlb	0	; select bank0
 18099  343A  00DB               	movwf	___flge@ff1+1
 18100  343B  0025               	movlb	5	; select bank5
 18101  343C  085C               	movf	_discharge_i_limit^(0+640),w
 18102  343D  0020               	movlb	0	; select bank0
 18103  343E  00DA               	movwf	___flge@ff1
 18104  343F  0021               	movlb	1	; select bank1
 18105  3440  082B               	movf	(_discharge_current_value+1)^(0+128),w
 18106  3441  0020               	movlb	0	; select bank0
 18107  3442  00B1               	movwf	___lwtofl@c+1
 18108  3443  0021               	movlb	1	; select bank1
 18109  3444  082A               	movf	_discharge_current_value^(0+128),w
 18110  3445  0020               	movlb	0	; select bank0
 18111  3446  00B0               	movwf	___lwtofl@c
 18112  3447  0008               	return
 18113  3448                     __end_ofPL74:	
 18114  3448                     PL76:	
 18115  3448  0867               	movf	(_light_on_pv_level+3)^(0+640),w
 18116  3449  0020               	movlb	0	; select bank0
 18117  344A  00DD               	movwf	___flge@ff1+3
 18118  344B  0025               	movlb	5	; select bank5
 18119  344C  0866               	movf	(_light_on_pv_level+2)^(0+640),w
 18120  344D  0020               	movlb	0	; select bank0
 18121  344E  00DC               	movwf	___flge@ff1+2
 18122  344F  0025               	movlb	5	; select bank5
 18123  3450  0865               	movf	(_light_on_pv_level+1)^(0+640),w
 18124  3451  0020               	movlb	0	; select bank0
 18125  3452  00DB               	movwf	___flge@ff1+1
 18126  3453  0025               	movlb	5	; select bank5
 18127  3454  0864               	movf	_light_on_pv_level^(0+640),w
 18128  3455  0020               	movlb	0	; select bank0
 18129  3456  00DA               	movwf	___flge@ff1
 18130  3457  0021               	movlb	1	; select bank1
 18131  3458  0831               	movf	(_pv_voltage_value+1)^(0+128),w
 18132  3459  0020               	movlb	0	; select bank0
 18133  345A  00B1               	movwf	___lwtofl@c+1
 18134  345B  0021               	movlb	1	; select bank1
 18135  345C  0830               	movf	_pv_voltage_value^(0+128),w
 18136  345D  0020               	movlb	0	; select bank0
 18137  345E  00B0               	movwf	___lwtofl@c
 18138  345F  0008               	return
 18139  3460                     __end_ofPL76:	
 18140  3460                     PL82:	
 18141  3460  0837               	movf	?___flmul+3,w
 18142  3461  00CE               	movwf	___fldiv@f1+3
 18143  3462  0836               	movf	?___flmul+2,w
 18144  3463  00CD               	movwf	___fldiv@f1+2
 18145  3464  0835               	movf	?___flmul+1,w
 18146  3465  00CC               	movwf	___fldiv@f1+1
 18147  3466  0834               	movf	?___flmul,w
 18148  3467  00CB               	movwf	___fldiv@f1
 18149  3468  0008               	return
 18150  3469                     __end_ofPL82:	
 18151  3469                     PL88:	
 18152  3469  01DA               	clrf	___flge@ff1
 18153  346A  01DB               	clrf	___flge@ff1+1
 18154  346B  01DC               	clrf	___flge@ff1+2
 18155  346C  01DD               	clrf	___flge@ff1+3
 18156  346D  0008               	return
 18157  346E                     __end_ofPL88:	
 18158  346E                     PL90:	
 18159  346E  0025               	movlb	5	; select bank5
 18160  346F  0857               	movf	(_dianchi_qianya_huifu+3)^(0+640),w
 18161  3470  0020               	movlb	0	; select bank0
 18162  3471  00DD               	movwf	___flge@ff1+3
 18163  3472  0025               	movlb	5	; select bank5
 18164  3473  0856               	movf	(_dianchi_qianya_huifu+2)^(0+640),w
 18165  3474  0020               	movlb	0	; select bank0
 18166  3475  00DC               	movwf	___flge@ff1+2
 18167  3476  0025               	movlb	5	; select bank5
 18168  3477  0855               	movf	(_dianchi_qianya_huifu+1)^(0+640),w
 18169  3478  0020               	movlb	0	; select bank0
 18170  3479  00DB               	movwf	___flge@ff1+1
 18171  347A  0025               	movlb	5	; select bank5
 18172  347B  0854               	movf	_dianchi_qianya_huifu^(0+640),w
 18173  347C  0008               	return
 18174  347D                     __end_ofPL90:	
 18175  347D                     PL92:	
 18176  347D  0020               	movlb	0	; select bank0
 18177  347E  086B               	movf	_battery_voltage_value+1,w
 18178  347F  00B1               	movwf	___lwtofl@c+1
 18179  3480  086A               	movf	_battery_voltage_value,w
 18180  3481  00B0               	movwf	___lwtofl@c
 18181  3482  0008               	return
 18182  3483                     __end_ofPL92:	
 18183  3483                     PL94:	
 18184  3483  086B               	movf	(_bt_volt_80+3)^(0+512),w
 18185  3484  0020               	movlb	0	; select bank0
 18186  3485  00DD               	movwf	___flge@ff1+3
 18187  3486  0024               	movlb	4	; select bank4
 18188  3487  086A               	movf	(_bt_volt_80+2)^(0+512),w
 18189  3488  0020               	movlb	0	; select bank0
 18190  3489  00DC               	movwf	___flge@ff1+2
 18191  348A  0024               	movlb	4	; select bank4
 18192  348B  0869               	movf	(_bt_volt_80+1)^(0+512),w
 18193  348C  0020               	movlb	0	; select bank0
 18194  348D  00DB               	movwf	___flge@ff1+1
 18195  348E  0024               	movlb	4	; select bank4
 18196  348F  0868               	movf	_bt_volt_80^(0+512),w
 18197  3490  0008               	return
 18198  3491                     __end_ofPL94:	
 18199  3491                     PL96:	
 18200  3491  0863               	movf	(_bt_volt_40+3)^(0+512),w
 18201  3492  0020               	movlb	0	; select bank0
 18202  3493  00DD               	movwf	___flge@ff1+3
 18203  3494  0024               	movlb	4	; select bank4
 18204  3495  0862               	movf	(_bt_volt_40+2)^(0+512),w
 18205  3496  0020               	movlb	0	; select bank0
 18206  3497  00DC               	movwf	___flge@ff1+2
 18207  3498  0024               	movlb	4	; select bank4
 18208  3499  0861               	movf	(_bt_volt_40+1)^(0+512),w
 18209  349A  0020               	movlb	0	; select bank0
 18210  349B  00DB               	movwf	___flge@ff1+1
 18211  349C  0024               	movlb	4	; select bank4
 18212  349D  0860               	movf	_bt_volt_40^(0+512),w
 18213  349E  0008               	return
 18214  349F                     __end_ofPL96:	
 18215  349F                     PL98:	
 18216  349F  0867               	movf	(_bt_volt_60+3)^(0+512),w
 18217  34A0  0020               	movlb	0	; select bank0
 18218  34A1  00DD               	movwf	___flge@ff1+3
 18219  34A2  0024               	movlb	4	; select bank4
 18220  34A3  0866               	movf	(_bt_volt_60+2)^(0+512),w
 18221  34A4  0020               	movlb	0	; select bank0
 18222  34A5  00DC               	movwf	___flge@ff1+2
 18223  34A6  0024               	movlb	4	; select bank4
 18224  34A7  0865               	movf	(_bt_volt_60+1)^(0+512),w
 18225  34A8  0020               	movlb	0	; select bank0
 18226  34A9  00DB               	movwf	___flge@ff1+1
 18227  34AA  0024               	movlb	4	; select bank4
 18228  34AB  0864               	movf	_bt_volt_60^(0+512),w
 18229  34AC  0008               	return
 18230  34AD                     __end_ofPL98:	
 18231  34AD                     PL100:	
 18232  34AD  085F               	movf	(_bt_volt_20+3)^(0+512),w
 18233  34AE  0020               	movlb	0	; select bank0
 18234  34AF  00DD               	movwf	___flge@ff1+3
 18235  34B0  0024               	movlb	4	; select bank4
 18236  34B1  085E               	movf	(_bt_volt_20+2)^(0+512),w
 18237  34B2  0020               	movlb	0	; select bank0
 18238  34B3  00DC               	movwf	___flge@ff1+2
 18239  34B4  0024               	movlb	4	; select bank4
 18240  34B5  085D               	movf	(_bt_volt_20+1)^(0+512),w
 18241  34B6  0020               	movlb	0	; select bank0
 18242  34B7  00DB               	movwf	___flge@ff1+1
 18243  34B8  0024               	movlb	4	; select bank4
 18244  34B9  085C               	movf	_bt_volt_20^(0+512),w
 18245  34BA  0008               	return
 18246  34BB                     __end_ofPL100:	
 18247  34BB                     PL104:	
 18248  34BB  082D               	movf	(_load_voltage_value+1)^(0+128),w
 18249  34BC  0020               	movlb	0	; select bank0
 18250  34BD  00B1               	movwf	___lwtofl@c+1
 18251  34BE  0021               	movlb	1	; select bank1
 18252  34BF  082C               	movf	_load_voltage_value^(0+128),w
 18253  34C0  0020               	movlb	0	; select bank0
 18254  34C1  00B0               	movwf	___lwtofl@c
 18255  34C2  0008               	return
 18256  34C3                     __end_ofPL104:	
 18257  34C3                     PL106:	
 18258  34C3  0020               	movlb	0	; select bank0
 18259  34C4  00CA               	movwf	___fldiv@f2+3
 18260  34C5  30C8               	movlw	200
 18261  34C6  00C9               	movwf	___fldiv@f2+2
 18262  34C7  01C8               	clrf	___fldiv@f2+1
 18263  34C8  01C7               	clrf	___fldiv@f2
 18264  34C9  0022               	movlb	2	; select bank2
 18265  34CA  0008               	return
 18266  34CB                     __end_ofPL106:	
 18267  34CB                     PL112:	
 18268  34CB  0025               	movlb	5	; select bank5
 18269  34CC  084F               	movf	(_charge_i_limit+3)^(0+640),w
 18270  34CD  0020               	movlb	0	; select bank0
 18271  34CE  00E1               	movwf	___flge@ff2+3
 18272  34CF  0025               	movlb	5	; select bank5
 18273  34D0  084E               	movf	(_charge_i_limit+2)^(0+640),w
 18274  34D1  0020               	movlb	0	; select bank0
 18275  34D2  00E0               	movwf	___flge@ff2+2
 18276  34D3  0025               	movlb	5	; select bank5
 18277  34D4  084D               	movf	(_charge_i_limit+1)^(0+640),w
 18278  34D5  0020               	movlb	0	; select bank0
 18279  34D6  00DF               	movwf	___flge@ff2+1
 18280  34D7  0025               	movlb	5	; select bank5
 18281  34D8  084C               	movf	_charge_i_limit^(0+640),w
 18282  34D9  0020               	movlb	0	; select bank0
 18283  34DA  00DE               	movwf	___flge@ff2
 18284  34DB  0008               	return
 18285  34DC                     __end_ofPL112:	
 18286  34DC                     PL124:	
 18287  34DC  0023               	movlb	3	; select bank3
 18288  34DD  086E               	movf	(_shuchu_shortout_voltage+3)^(0+384),w
 18289  34DE  0020               	movlb	0	; select bank0
 18290  34DF  00E1               	movwf	___flge@ff2+3
 18291  34E0  0023               	movlb	3	; select bank3
 18292  34E1  086D               	movf	(_shuchu_shortout_voltage+2)^(0+384),w
 18293  34E2  0020               	movlb	0	; select bank0
 18294  34E3  00E0               	movwf	___flge@ff2+2
 18295  34E4  0023               	movlb	3	; select bank3
 18296  34E5  086C               	movf	(_shuchu_shortout_voltage+1)^(0+384),w
 18297  34E6  0020               	movlb	0	; select bank0
 18298  34E7  00DF               	movwf	___flge@ff2+1
 18299  34E8  0023               	movlb	3	; select bank3
 18300  34E9  086B               	movf	_shuchu_shortout_voltage^(0+384),w
 18301  34EA  0020               	movlb	0	; select bank0
 18302  34EB  00DE               	movwf	___flge@ff2
 18303  34EC  0008               	return
 18304  34ED                     __end_ofPL124:	
 18305  34ED                     PL126:	
 18306  34ED  0025               	movlb	5	; select bank5
 18307  34EE  0853               	movf	(_dianchi_qianya_baohu+3)^(0+640),w
 18308  34EF  0020               	movlb	0	; select bank0
 18309  34F0  00E1               	movwf	___flge@ff2+3
 18310  34F1  0025               	movlb	5	; select bank5
 18311  34F2  0852               	movf	(_dianchi_qianya_baohu+2)^(0+640),w
 18312  34F3  0020               	movlb	0	; select bank0
 18313  34F4  00E0               	movwf	___flge@ff2+2
 18314  34F5  0025               	movlb	5	; select bank5
 18315  34F6  0851               	movf	(_dianchi_qianya_baohu+1)^(0+640),w
 18316  34F7  0020               	movlb	0	; select bank0
 18317  34F8  00DF               	movwf	___flge@ff2+1
 18318  34F9  0025               	movlb	5	; select bank5
 18319  34FA  0850               	movf	_dianchi_qianya_baohu^(0+640),w
 18320  34FB  0020               	movlb	0	; select bank0
 18321  34FC  00DE               	movwf	___flge@ff2
 18322  34FD  0008               	return
 18323  34FE                     __end_ofPL126:	
 18324  34FE                     PL128:	
 18325  34FE  00B4               	movwf	___flmul@f1
 18326  34FF  0025               	movlb	5	; select bank5
 18327  3500  086F               	movf	(handle_ad_loop@data_cc_var+3)^(0+640),w
 18328  3501  0020               	movlb	0	; select bank0
 18329  3502  00BB               	movwf	___flmul@f2+3
 18330  3503  0025               	movlb	5	; select bank5
 18331  3504  086E               	movf	(handle_ad_loop@data_cc_var+2)^(0+640),w
 18332  3505  0020               	movlb	0	; select bank0
 18333  3506  00BA               	movwf	___flmul@f2+2
 18334  3507  0025               	movlb	5	; select bank5
 18335  3508  086D               	movf	(handle_ad_loop@data_cc_var+1)^(0+640),w
 18336  3509  0020               	movlb	0	; select bank0
 18337  350A  00B9               	movwf	___flmul@f2+1
 18338  350B  0025               	movlb	5	; select bank5
 18339  350C  086C               	movf	handle_ad_loop@data_cc_var^(0+640),w
 18340  350D  0008               	return
 18341  350E                     __end_ofPL128:	
 18342  350E                     PL130:	
 18343  350E  084A               	movf	?___fldiv+3,w
 18344  350F  0023               	movlb	3	; select bank3
 18345  3510  00CA               	movwf	(_PID_CC_discharge+3)^(0+384)
 18346  3511  0020               	movlb	0	; select bank0
 18347  3512  0849               	movf	?___fldiv+2,w
 18348  3513  0023               	movlb	3	; select bank3
 18349  3514  00C9               	movwf	(_PID_CC_discharge+2)^(0+384)
 18350  3515  0020               	movlb	0	; select bank0
 18351  3516  0848               	movf	?___fldiv+1,w
 18352  3517  0023               	movlb	3	; select bank3
 18353  3518  00C8               	movwf	(_PID_CC_discharge+1)^(0+384)
 18354  3519  0020               	movlb	0	; select bank0
 18355  351A  0847               	movf	?___fldiv,w
 18356  351B  0023               	movlb	3	; select bank3
 18357  351C  00C7               	movwf	_PID_CC_discharge^(0+384)
 18358  351D  0008               	return
 18359  351E                     __end_ofPL130:	
 18360  351E                     PL158:	
 18361  351E  01C4               	clrf	_index_02_count^(0+512)
 18362  351F  01C5               	clrf	(_index_02_count+1)^(0+512)
 18363  3520  01C6               	clrf	_index_03_count^(0+512)
 18364  3521  01C7               	clrf	(_index_03_count+1)^(0+512)
 18365  3522  01C8               	clrf	_index_04_count^(0+512)
 18366  3523  01C9               	clrf	(_index_04_count+1)^(0+512)
 18367  3524  01CA               	clrf	_index_05_count^(0+512)
 18368  3525  01CB               	clrf	(_index_05_count+1)^(0+512)
 18369  3526  0008               	return
 18370  3527                     __end_ofPL158:	
 18371  3527                     PL172:	
 18372  3527  00A5               	movwf	___wmul@multiplicand
 18373  3528  01A6               	clrf	___wmul@multiplicand+1
 18374  3529  0021               	movlb	1	; select bank1
 18375  352A  082D               	movf	(_load_voltage_value+1)^(0+128),w
 18376  352B  0020               	movlb	0	; select bank0
 18377  352C  00A4               	movwf	___wmul@multiplier+1
 18378  352D  0021               	movlb	1	; select bank1
 18379  352E  082C               	movf	_load_voltage_value^(0+128),w
 18380  352F  0020               	movlb	0	; select bank0
 18381  3530  00A3               	movwf	___wmul@multiplier
 18382  3531  0008               	return
 18383  3532                     __end_ofPL172:	
 18384  3532                     PL180:	
 18385  3532  01C8               	clrf	_index_04_count^(0+512)
 18386  3533  01C9               	clrf	(_index_04_count+1)^(0+512)
 18387  3534  01CA               	clrf	_index_05_count^(0+512)
 18388  3535  01CB               	clrf	(_index_05_count+1)^(0+512)
 18389  3536  01CC               	clrf	_index_06_count^(0+512)
 18390  3537  01CD               	clrf	(_index_06_count+1)^(0+512)
 18391  3538  0008               	return
 18392  3539                     __end_ofPL180:	
 18393  3539                     PL192:	
 18394  3539  084A               	movf	?___fladd+3,w
 18395  353A  00E1               	movwf	___flge@ff2+3
 18396  353B  0849               	movf	?___fladd+2,w
 18397  353C  00E0               	movwf	___flge@ff2+2
 18398  353D  0848               	movf	?___fladd+1,w
 18399  353E  00DF               	movwf	___flge@ff2+1
 18400  353F  0847               	movf	?___fladd,w
 18401  3540  00DE               	movwf	___flge@ff2
 18402  3541  0008               	return
 18403  3542                     __end_ofPL192:	
 18404  3542                     PL198:	
 18405  3542  0824               	movf	?___wmul+1,w
 18406  3543  00AC               	movwf	___lwdiv@dividend+1
 18407  3544  0823               	movf	?___wmul,w
 18408  3545  00AB               	movwf	___lwdiv@dividend
 18409  3546  30E8               	movlw	232
 18410  3547  00A9               	movwf	___lwdiv@divisor
 18411  3548  3003               	movlw	3
 18412  3549  00AA               	movwf	___lwdiv@divisor+1
 18413  354A  0008               	return
 18414  354B                     __end_ofPL198:	
 18415  354B                     PL200:	
 18416  354B  0837               	movf	?___flmul+3,w
 18417  354C  00E1               	movwf	___flge@ff2+3
 18418  354D  0836               	movf	?___flmul+2,w
 18419  354E  00E0               	movwf	___flge@ff2+2
 18420  354F  0835               	movf	?___flmul+1,w
 18421  3550  00DF               	movwf	___flge@ff2+1
 18422  3551  0834               	movf	?___flmul,w
 18423  3552  00DE               	movwf	___flge@ff2
 18424  3553  0008               	return
 18425  3554                     __end_ofPL200:	
 18426  3554                     PL202:	
 18427  3554  3005               	movlw	5
 18428  3555  00A5               	movwf	___wmul@multiplicand
 18429  3556  01A6               	clrf	___wmul@multiplicand+1
 18430  3557  0021               	movlb	1	; select bank1
 18431  3558  086B               	movf	_volt_id^(0+128),w
 18432  3559  0020               	movlb	0	; select bank0
 18433  355A  00A3               	movwf	___wmul@multiplier
 18434  355B  01A4               	clrf	___wmul@multiplier+1
 18435  355C  0008               	return
 18436  355D                     __end_ofPL202:	
 18437  355D                     PL206:	
 18438  355D  3002               	movlw	2
 18439  355E  01B4               	clrf	_night_time_count^(0+512)
 18440  355F  01B5               	clrf	(_night_time_count+1)^(0+512)
 18441  3560  01B6               	clrf	(_night_time_count+2)^(0+512)
 18442  3561  01B7               	clrf	(_night_time_count+3)^(0+512)
 18443  3562  0022               	movlb	2	; select bank2
 18444  3563  00C3               	movwf	_pv_voltage_status^(0+256)
 18445  3564  0008               	return
 18446  3565                     __end_ofPL206:	
 18447  3565                     PL210:	
 18448  3565  0020               	movlb	0	; select bank0
 18449  3566  00B7               	movwf	___flmul@f1+3
 18450  3567  30F5               	movlw	245
 18451  3568  00B6               	movwf	___flmul@f1+2
 18452  3569  30C2               	movlw	194
 18453  356A  00B5               	movwf	___flmul@f1+1
 18454  356B  348F               	retlw	143
 18455  356C                     __end_ofPL210:	
 18456  356C                     PL218:	
 18457  356C  0021               	movlb	1	; select bank1
 18458  356D  0866               	movf	_step_01_time_limit^(0+128),w
 18459  356E  0768               	addwf	_step_02_time_limit^(0+128),w
 18460  356F  0022               	movlb	2	; select bank2
 18461  3570  0769               	addwf	_step_03_time_limit^(0+256),w
 18462  3571  0008               	return
 18463  3572                     __end_ofPL218:	
 18464  3572                     PL230:	
 18465  3572  01A8               	clrf	_pv_time_count^(0+640)
 18466  3573  01A9               	clrf	(_pv_time_count+1)^(0+640)
 18467  3574  01AA               	clrf	(_pv_time_count+2)^(0+640)
 18468  3575  01AB               	clrf	(_pv_time_count+3)^(0+640)
 18469  3576  0022               	movlb	2	; select bank2
 18470  3577  01C3               	clrf	_pv_voltage_status^(0+256)
 18471  3578  0008               	return
 18472  3579                     __end_ofPL230:	
 18473  3579                     PL232:	
 18474  3579  0AB2               	incf	_load_short_time_count^(0+384),f
 18475  357A  1903               	skipnz
 18476  357B  0AB3               	incf	(_load_short_time_count+1)^(0+384),f
 18477  357C  3003               	movlw	3
 18478  357D  0233               	subwf	(_load_short_time_count+1)^(0+384),w
 18479  357E  34E9               	retlw	233
 18480  357F                     __end_ofPL232:	
 18481  357F                     PL234:	
 18482  357F  0020               	movlb	0	; select bank0
 18483  3580  00B7               	movwf	___flmul@f1+3
 18484  3581  30B3               	movlw	179
 18485  3582  00B6               	movwf	___flmul@f1+2
 18486  3583  3033               	movlw	51
 18487  3584  00B5               	movwf	___flmul@f1+1
 18488  3585  0008               	return
 18489  3586                     __end_ofPL234:	
 18490  3586                     PL238:	
 18491  3586  0020               	movlb	0	; select bank0
 18492  3587  00B7               	movwf	___flmul@f1+3
 18493  3588  304C               	movlw	76
 18494  3589  00B6               	movwf	___flmul@f1+2
 18495  358A  34CC               	retlw	204
 18496  358B                     __end_ofPL238:	
 18497  358B                     PL240:	
 18498  358B  0020               	movlb	0	; select bank0
 18499  358C  00B7               	movwf	___flmul@f1+3
 18500  358D  01B6               	clrf	___flmul@f1+2
 18501  358E  01B5               	clrf	___flmul@f1+1
 18502  358F  01B4               	clrf	___flmul@f1
 18503  3590  0008               	return
 18504  3591                     __end_ofPL240:	
 18505  3591                     PL248:	
 18506  3591  0020               	movlb	0	; select bank0
 18507  3592  01A3               	clrf	delay_ms@count
 18508  3593  0AA3               	incf	delay_ms@count,f
 18509  3594  01A4               	clrf	delay_ms@count+1
 18510  3595  0008               	return
 18511  3596                     __end_ofPL248:	
 18512  3596                     PL256:	
 18513  3596  01C7               	clrf	_PID_CC_discharge^(0+384)
 18514  3597  01C8               	clrf	(_PID_CC_discharge+1)^(0+384)
 18515  3598  01C9               	clrf	(_PID_CC_discharge+2)^(0+384)
 18516  3599  01CA               	clrf	(_PID_CC_discharge+3)^(0+384)
 18517  359A  0008               	return
 18518  359B                     __end_ofPL256:	
 18519  359B                     PL260:	
 18520  359B  0824               	movf	?___wmul+1,w
 18521  359C  00AE               	movwf	___awtofl@c+1
 18522  359D  0823               	movf	?___wmul,w
 18523  359E  00AD               	movwf	___awtofl@c
 18524  359F  0008               	return
 18525  35A0                     __end_ofPL260:	
 18526  35A0                     PL264:	
 18527  35A0  082A               	movf	?___lwdiv+1,w
 18528  35A1  00B1               	movwf	___lwtofl@c+1
 18529  35A2  0829               	movf	?___lwdiv,w
 18530  35A3  00B0               	movwf	___lwtofl@c
 18531  35A4  0008               	return
 18532  35A5                     __end_ofPL264:	
 18533                           
 18534                           	psect	text10_split_3
 18535  1110                     l17432:	
 18536                           
 18537                           ;task.c: 500: handle_an3_process_flag=0x00;
 18538  1110  0022               	movlb	2	; select bank2
 18539  1111  01AF               	clrf	_handle_an3_process_flag^(0+256)
 18540  1112                     l17434:	
 18541                           
 18542                           ;task.c: 502: }
 18543                           ;task.c: 509: if(handle_an4_process_flag==0x01)
 18544  1112  0B30               	decfsz	_handle_an4_process_flag^(0+256),w
 18545  1113  2A24               	goto	l17516
 18546                           
 18547                           ;task.c: 510: {
 18548                           ;task.c: 511: load_voltage_value=0x00;
 18549  1114  0021               	movlb	1	; select bank1
 18550  1115  01AC               	clrf	_load_voltage_value^(0+128)
 18551  1116  01AD               	clrf	(_load_voltage_value+1)^(0+128)
 18552                           
 18553                           ;task.c: 513: if(system_status == 0x02)
 18554  1117  083A               	movf	_system_status^(0+128),w
 18555  1118  3A02               	xorlw	2
 18556  1119  1D03               	skipz
 18557  111A  2A22               	goto	l1373
 18558                           
 18559                           ;task.c: 514: {
 18560                           ;task.c: 515: load_voltage_value=start_ad_convert(0b00100);
 18561  111B  3004               	movlw	4
 18562  111C  31B5  25A5  3191   	fcall	_start_ad_convert
 18563  111F  0831               	movf	?_start_ad_convert+1,w
 18564  1120  0021               	movlb	1	; select bank1
 18565  1121  00AD               	movwf	(_load_voltage_value+1)^(0+128)
 18566  1122  0020               	movlb	0	; select bank0
 18567  1123  0830               	movf	?_start_ad_convert,w
 18568  1124  0021               	movlb	1	; select bank1
 18569  1125  00AC               	movwf	_load_voltage_value^(0+128)
 18570                           
 18571                           ;task.c: 518: if((load_voltage_value<shuchu_shortout_voltage)&&(discharge_index==0x02)&&
      +                          (PID_CC_discharge.SetPoint>0))
 18572  1126  31B4  24BB  3191   	fcall	PL104	;call to abstracted procedure
 18573  1129  319B  2346  3191   	fcall	___lwtofl
 18574  112C  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 18575  112F  31B4  24DC  3191   	fcall	PL124	;call to abstracted procedure
 18576  1132  319E  2658  3191   	fcall	___flge
 18577  1135  1803               	btfsc	3,0
 18578  1136  2966               	goto	l17464
 18579  1137  0021               	movlb	1	; select bank1
 18580  1138  0835               	movf	_discharge_index^(0+128),w
 18581  1139  3A02               	xorlw	2
 18582  113A  1D03               	skipz
 18583  113B  2966               	goto	l17464
 18584  113C  0020               	movlb	0	; select bank0
 18585  113D  31B4  2469  3191   	fcall	PL88	;call to abstracted procedure
 18586  1140  31B3  23EF  3191   	fcall	PL58	;call to abstracted procedure
 18587  1143  319E  2658  3191   	fcall	___flge
 18588  1146  1803               	btfsc	3,0
 18589  1147  2966               	goto	l17464
 18590                           
 18591                           ;task.c: 519: {
 18592                           ;task.c: 520: load_short_time_count++;
 18593  1148  0023               	movlb	3	; select bank3
 18594                           
 18595                           ;task.c: 522: if(load_short_time_count>1000)
 18596  1149  31B5  2579  3191   	fcall	PL232	;call to abstracted procedure
 18597  114C  1903               	skipnz
 18598  114D  0232               	subwf	_load_short_time_count^(0+384),w
 18599  114E  1C03               	skipc
 18600  114F  29D6               	goto	l17492
 18601  1150  3002               	movlw	2
 18602                           
 18603                           ;task.c: 523: {
 18604                           ;task.c: 524: load_short_time_count=0x00;
 18605  1151  01B2               	clrf	_load_short_time_count^(0+384)
 18606  1152  01B3               	clrf	(_load_short_time_count+1)^(0+384)
 18607                           
 18608                           ;task.c: 526: bost_pwm_value=2;
 18609  1153  0021               	movlb	1	; select bank1
 18610                           
 18611                           ;task.c: 530: discharge_led_status=0x00;
 18612  1154  31B3  23BF  3191   	fcall	PL48	;call to abstracted procedure
 18613  1157  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 18614                           
 18615                           ;task.c: 532: delay_ms(1);
 18616  115A  31B5  2591  3191   	fcall	PL248	;call to abstracted procedure
 18617  115D  318B  2392  3191   	fcall	_delay_ms
 18618                           
 18619                           ;task.c: 534: Disable_Bost_Pwm();
 18620  1160  318B  23B5  3191   	fcall	_Disable_Bost_Pwm
 18621                           
 18622                           ;task.c: 536: (LATCbits.LATC3 = 0x00);
 18623  1163  0022               	movlb	2	; select bank2
 18624  1164  118E               	bcf	14,3	;volatile
 18625  1165                     l1376:	
 18626                           ;task.c: 538: while(1);
 18627                           
 18628  1165  2965               	goto	l1376
 18629  1166                     l17464:	
 18630                           
 18631                           ;task.c: 542: else if((load_voltage_value>=shuchu_shortout_voltage)&&(load_voltage_value
      +                          <(shuchu_shortout_voltage*2))&&(discharge_index==0x02)&&(PID_CC_discharge.SetPoint>0))
 18632  1166  0021               	movlb	1	; select bank1
 18633  1167  31B4  24BB  3191   	fcall	PL104	;call to abstracted procedure
 18634  116A  319B  2346  3191   	fcall	___lwtofl
 18635  116D  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 18636  1170  31B4  24DC  3191   	fcall	PL124	;call to abstracted procedure
 18637  1173  319E  2658  3191   	fcall	___flge
 18638  1176  1C03               	btfss	3,0
 18639  1177  29D3               	goto	l17490
 18640  1178  0021               	movlb	1	; select bank1
 18641  1179  31B4  24BB  3191   	fcall	PL104	;call to abstracted procedure
 18642  117C  319B  2346  3191   	fcall	___lwtofl
 18643  117F  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 18644  1182  0023               	movlb	3	; select bank3
 18645  1183  086E               	movf	(_shuchu_shortout_voltage+3)^(0+384),w
 18646  1184  0020               	movlb	0	; select bank0
 18647  1185  00BB               	movwf	___flmul@f2+3
 18648  1186  0023               	movlb	3	; select bank3
 18649  1187  086D               	movf	(_shuchu_shortout_voltage+2)^(0+384),w
 18650  1188  0020               	movlb	0	; select bank0
 18651  1189  00BA               	movwf	___flmul@f2+2
 18652  118A  0023               	movlb	3	; select bank3
 18653  118B  086C               	movf	(_shuchu_shortout_voltage+1)^(0+384),w
 18654  118C  0020               	movlb	0	; select bank0
 18655  118D  00B9               	movwf	___flmul@f2+1
 18656  118E  0023               	movlb	3	; select bank3
 18657  118F  086B               	movf	_shuchu_shortout_voltage^(0+384),w
 18658  1190  0020               	movlb	0	; select bank0
 18659  1191  00B8               	movwf	___flmul@f2
 18660  1192  3040               	movlw	64
 18661  1193  00B7               	movwf	___flmul@f1+3
 18662  1194  01B6               	clrf	___flmul@f1+2
 18663  1195  01B5               	clrf	___flmul@f1+1
 18664  1196  01B4               	clrf	___flmul@f1
 18665  1197  318E  2607  3191   	fcall	___flmul
 18666  119A  31B5  254B  3191   	fcall	PL200	;call to abstracted procedure
 18667  119D  319E  2658  3191   	fcall	___flge
 18668  11A0  1803               	btfsc	3,0
 18669  11A1  29D3               	goto	l17490
 18670  11A2  0021               	movlb	1	; select bank1
 18671  11A3  0835               	movf	_discharge_index^(0+128),w
 18672  11A4  3A02               	xorlw	2
 18673  11A5  1D03               	skipz
 18674  11A6  29D3               	goto	l17490
 18675  11A7  0020               	movlb	0	; select bank0
 18676  11A8  31B4  2469  3191   	fcall	PL88	;call to abstracted procedure
 18677  11AB  31B3  23EF  3191   	fcall	PL58	;call to abstracted procedure
 18678  11AE  319E  2658  3191   	fcall	___flge
 18679  11B1  1803               	btfsc	3,0
 18680  11B2  29D3               	goto	l17490
 18681                           
 18682                           ;task.c: 543: {
 18683                           ;task.c: 544: load_short_time_count++;
 18684  11B3  0023               	movlb	3	; select bank3
 18685                           
 18686                           ;task.c: 546: if(load_short_time_count>1000)
 18687  11B4  31B5  2579  3191   	fcall	PL232	;call to abstracted procedure
 18688  11B7  1903               	skipnz
 18689  11B8  0232               	subwf	_load_short_time_count^(0+384),w
 18690  11B9  1C03               	skipc
 18691  11BA  29D6               	goto	l17492
 18692  11BB  3003               	movlw	3
 18693                           
 18694                           ;task.c: 547: {
 18695                           ;task.c: 548: load_short_time_count=0x00;
 18696  11BC  01B2               	clrf	_load_short_time_count^(0+384)
 18697  11BD  01B3               	clrf	(_load_short_time_count+1)^(0+384)
 18698                           
 18699                           ;task.c: 550: discharge_index=0x03;
 18700  11BE  0021               	movlb	1	; select bank1
 18701  11BF  00B5               	movwf	_discharge_index^(0+128)
 18702                           
 18703                           ;task.c: 552: bost_pwm_value=2;
 18704  11C0  3002               	movlw	2
 18705                           
 18706                           ;task.c: 556: discharge_led_status=0x00;
 18707  11C1  31B3  23BF  3191   	fcall	PL48	;call to abstracted procedure
 18708  11C4  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 18709                           
 18710                           ;task.c: 558: delay_ms(1);
 18711  11C7  31B5  2591  3191   	fcall	PL248	;call to abstracted procedure
 18712  11CA  318B  2392  3191   	fcall	_delay_ms
 18713                           
 18714                           ;task.c: 560: Disable_Bost_Pwm();
 18715  11CD  318B  23B5  3191   	fcall	_Disable_Bost_Pwm
 18716                           
 18717                           ;task.c: 562: (LATCbits.LATC3 = 0x00);
 18718  11D0  0022               	movlb	2	; select bank2
 18719  11D1  118E               	bcf	14,3	;volatile
 18720  11D2                     l1382:	
 18721                           ;task.c: 564: while(1);
 18722                           
 18723  11D2  29D2               	goto	l1382
 18724  11D3                     l17490:	
 18725                           
 18726                           ;task.c: 568: else
 18727                           ;task.c: 569: {
 18728                           ;task.c: 570: load_short_time_count=0x00;
 18729  11D3  0023               	movlb	3	; select bank3
 18730  11D4  01B2               	clrf	_load_short_time_count^(0+384)
 18731  11D5  01B3               	clrf	(_load_short_time_count+1)^(0+384)
 18732  11D6                     l17492:	
 18733                           
 18734                           ;task.c: 571: }
 18735                           ;task.c: 574: if((load_voltage_value>shuchu_open_voltage)&&(discharge_index==0x02))
 18736  11D6  0025               	movlb	5	; select bank5
 18737  11D7  086B               	movf	(_shuchu_open_voltage+3)^(0+640),w
 18738  11D8  0020               	movlb	0	; select bank0
 18739  11D9  00DD               	movwf	___flge@ff1+3
 18740  11DA  0025               	movlb	5	; select bank5
 18741  11DB  086A               	movf	(_shuchu_open_voltage+2)^(0+640),w
 18742  11DC  0020               	movlb	0	; select bank0
 18743  11DD  00DC               	movwf	___flge@ff1+2
 18744  11DE  0025               	movlb	5	; select bank5
 18745  11DF  0869               	movf	(_shuchu_open_voltage+1)^(0+640),w
 18746  11E0  0020               	movlb	0	; select bank0
 18747  11E1  00DB               	movwf	___flge@ff1+1
 18748  11E2  0025               	movlb	5	; select bank5
 18749  11E3  0868               	movf	_shuchu_open_voltage^(0+640),w
 18750  11E4  0020               	movlb	0	; select bank0
 18751  11E5  00DA               	movwf	___flge@ff1
 18752  11E6  0021               	movlb	1	; select bank1
 18753  11E7  31B4  24BB  3191   	fcall	PL104	;call to abstracted procedure
 18754  11EA  319B  2346  3191   	fcall	___lwtofl
 18755  11ED  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 18756  11F0  319E  2658  3191   	fcall	___flge
 18757  11F3  1803               	btfsc	3,0
 18758  11F4  2A1F               	goto	l17514
 18759  11F5  0021               	movlb	1	; select bank1
 18760  11F6  0835               	movf	_discharge_index^(0+128),w
 18761  11F7  3A02               	xorlw	2
 18762  11F8  1D03               	skipz
 18763  11F9  2A1F               	goto	l17514
 18764                           
 18765                           ;task.c: 575: {
 18766                           ;task.c: 576: load_open_time_count++;
 18767  11FA  0024               	movlb	4	; select bank4
 18768  11FB  0AD0               	incf	_load_open_time_count^(0+512),f
 18769  11FC  1903               	skipnz
 18770  11FD  0AD1               	incf	(_load_open_time_count+1)^(0+512),f
 18771                           
 18772                           ;task.c: 578: if(load_open_time_count>1000)
 18773  11FE  3003               	movlw	3
 18774  11FF  0251               	subwf	(_load_open_time_count+1)^(0+512),w
 18775  1200  30E9               	movlw	233
 18776  1201  1903               	skipnz
 18777  1202  0250               	subwf	_load_open_time_count^(0+512),w
 18778  1203  1C03               	skipc
 18779  1204  2A22               	goto	l1373
 18780                           
 18781                           ;task.c: 579: {
 18782                           ;task.c: 580: discharge_index=0x03;
 18783  1205  3003               	movlw	3
 18784  1206  0021               	movlb	1	; select bank1
 18785  1207  00B5               	movwf	_discharge_index^(0+128)
 18786                           
 18787                           ;task.c: 582: load_open_time_count=0x00;
 18788  1208  0024               	movlb	4	; select bank4
 18789  1209  3005               	movlw	5
 18790  120A  01D0               	clrf	_load_open_time_count^(0+512)
 18791  120B  01D1               	clrf	(_load_open_time_count+1)^(0+512)
 18792                           
 18793                           ;task.c: 584: bost_pwm_value=5;
 18794  120C  0021               	movlb	1	; select bank1
 18795                           
 18796                           ;task.c: 588: discharge_led_status=0x00;
 18797  120D  31B3  23BF  3191   	fcall	PL48	;call to abstracted procedure
 18798  1210  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 18799                           
 18800                           ;task.c: 590: delay_ms(1);
 18801  1213  31B5  2591  3191   	fcall	PL248	;call to abstracted procedure
 18802  1216  318B  2392  3191   	fcall	_delay_ms
 18803                           
 18804                           ;task.c: 592: Disable_Bost_Pwm();
 18805  1219  318B  23B5  3191   	fcall	_Disable_Bost_Pwm
 18806                           
 18807                           ;task.c: 594: (LATCbits.LATC3 = 0x00);
 18808  121C  0022               	movlb	2	; select bank2
 18809  121D  118E               	bcf	14,3	;volatile
 18810  121E                     l1388:	
 18811                           ;task.c: 596: while(1);
 18812                           
 18813  121E  2A1E               	goto	l1388
 18814  121F                     l17514:	
 18815                           
 18816                           ;task.c: 600: else
 18817                           ;task.c: 601: {
 18818                           ;task.c: 602: load_open_time_count=0x00;
 18819  121F  0024               	movlb	4	; select bank4
 18820  1220  01D0               	clrf	_load_open_time_count^(0+512)
 18821  1221  01D1               	clrf	(_load_open_time_count+1)^(0+512)
 18822  1222                     l1373:	
 18823                           
 18824                           ;task.c: 603: }
 18825                           ;task.c: 606: }
 18826                           ;task.c: 608: handle_an4_process_flag=0x00;
 18827  1222  0022               	movlb	2	; select bank2
 18828  1223  01B0               	clrf	_handle_an4_process_flag^(0+256)
 18829  1224                     l17516:	
 18830                           
 18831                           ;task.c: 610: }
 18832                           ;task.c: 614: if(handle_an10_process_flag==0x01)
 18833  1224  0B2C               	decfsz	_handle_an10_process_flag^(0+256),w
 18834  1225  0008               	return
 18835                           
 18836                           ;task.c: 615: {
 18837                           ;task.c: 616: discharge_current_value=0x00;
 18838  1226  0021               	movlb	1	; select bank1
 18839  1227  01AA               	clrf	_discharge_current_value^(0+128)
 18840  1228  01AB               	clrf	(_discharge_current_value+1)^(0+128)
 18841                           
 18842                           ;task.c: 618: if(system_status == 0x02)
 18843  1229  083A               	movf	_system_status^(0+128),w
 18844  122A  3A02               	xorlw	2
 18845  122B  1D03               	skipz
 18846  122C  2FFD               	goto	l1393
 18847                           
 18848                           ;task.c: 619: {
 18849                           ;task.c: 620: discharge_current_value=start_ad_convert(0b01010);
 18850  122D  300A               	movlw	10
 18851  122E  31B5  25A5  3191   	fcall	_start_ad_convert
 18852  1231  0831               	movf	?_start_ad_convert+1,w
 18853  1232  0021               	movlb	1	; select bank1
 18854  1233  00AB               	movwf	(_discharge_current_value+1)^(0+128)
 18855  1234  0020               	movlb	0	; select bank0
 18856  1235  0830               	movf	?_start_ad_convert,w
 18857  1236  0021               	movlb	1	; select bank1
 18858  1237  00AA               	movwf	_discharge_current_value^(0+128)
 18859                           
 18860                           ;task.c: 622: if((discharge_current_value>discharge_i_baohu)&&(discharge_index==0x02))
 18861  1238  0025               	movlb	5	; select bank5
 18862  1239  085B               	movf	(_discharge_i_baohu+3)^(0+640),w
 18863  123A  0020               	movlb	0	; select bank0
 18864  123B  00DD               	movwf	___flge@ff1+3
 18865  123C  0025               	movlb	5	; select bank5
 18866  123D  085A               	movf	(_discharge_i_baohu+2)^(0+640),w
 18867  123E  0020               	movlb	0	; select bank0
 18868  123F  00DC               	movwf	___flge@ff1+2
 18869  1240  0025               	movlb	5	; select bank5
 18870  1241  0859               	movf	(_discharge_i_baohu+1)^(0+640),w
 18871  1242  0020               	movlb	0	; select bank0
 18872  1243  00DB               	movwf	___flge@ff1+1
 18873  1244  0025               	movlb	5	; select bank5
 18874  1245  0858               	movf	_discharge_i_baohu^(0+640),w
 18875  1246  0020               	movlb	0	; select bank0
 18876  1247  00DA               	movwf	___flge@ff1
 18877  1248  0021               	movlb	1	; select bank1
 18878  1249  082B               	movf	(_discharge_current_value+1)^(0+128),w
 18879  124A  0020               	movlb	0	; select bank0
 18880  124B  00B1               	movwf	___lwtofl@c+1
 18881  124C  0021               	movlb	1	; select bank1
 18882  124D  082A               	movf	_discharge_current_value^(0+128),w
 18883  124E  0020               	movlb	0	; select bank0
 18884  124F  00B0               	movwf	___lwtofl@c
 18885  1250  319B  2346  3191   	fcall	___lwtofl
 18886  1253  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 18887  1256  319E  2658  3191   	fcall	___flge
 18888  1259  1803               	btfsc	3,0
 18889  125A  2A84               	goto	l17544
 18890  125B  0021               	movlb	1	; select bank1
 18891  125C  0835               	movf	_discharge_index^(0+128),w
 18892  125D  3A02               	xorlw	2
 18893  125E  1D03               	skipz
 18894  125F  2A84               	goto	l17544
 18895                           
 18896                           ;task.c: 623: {
 18897                           ;task.c: 624: over_load_time_count++;
 18898  1260  0024               	movlb	4	; select bank4
 18899  1261  0AD4               	incf	_over_load_time_count^(0+512),f
 18900  1262  1903               	skipnz
 18901  1263  0AD5               	incf	(_over_load_time_count+1)^(0+512),f
 18902                           
 18903                           ;task.c: 626: if(over_load_time_count>20)
 18904  1264  3000               	movlw	0
 18905  1265  0255               	subwf	(_over_load_time_count+1)^(0+512),w
 18906  1266  3015               	movlw	21
 18907  1267  1903               	skipnz
 18908  1268  0254               	subwf	_over_load_time_count^(0+512),w
 18909  1269  1C03               	skipc
 18910  126A  2A87               	goto	l17546
 18911                           
 18912                           ;task.c: 627: {
 18913                           ;task.c: 628: discharge_index=0x03;
 18914  126B  3003               	movlw	3
 18915  126C  0021               	movlb	1	; select bank1
 18916  126D  00B5               	movwf	_discharge_index^(0+128)
 18917                           
 18918                           ;task.c: 630: bost_pwm_value=2;
 18919  126E  3002               	movlw	2
 18920                           
 18921                           ;task.c: 632: Set_Bost_Pwm_Duty(bost_pwm_value);
 18922  126F  31B3  23BF  3191   	fcall	PL48	;call to abstracted procedure
 18923  1272  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 18924                           
 18925                           ;task.c: 634: delay_ms(1);
 18926  1275  31B5  2591  3191   	fcall	PL248	;call to abstracted procedure
 18927  1278  318B  2392  3191   	fcall	_delay_ms
 18928                           
 18929                           ;task.c: 636: Disable_Bost_Pwm();
 18930  127B  318B  23B5  3191   	fcall	_Disable_Bost_Pwm
 18931                           
 18932                           ;task.c: 638: (LATCbits.LATC3 = 0x00);
 18933  127E  0022               	movlb	2	; select bank2
 18934  127F  118E               	bcf	14,3	;volatile
 18935                           
 18936                           ;task.c: 642: discharge_led_status=0x00;
 18937  1280  0024               	movlb	4	; select bank4
 18938  1281  01D4               	clrf	_over_load_time_count^(0+512)
 18939  1282  01D5               	clrf	(_over_load_time_count+1)^(0+512)
 18940  1283                     l1396:	
 18941                           ;task.c: 644: while(1);
 18942                           
 18943  1283  2A83               	goto	l1396
 18944  1284                     l17544:	
 18945                           
 18946                           ;task.c: 648: else
 18947                           ;task.c: 649: {
 18948                           ;task.c: 650: over_load_time_count=0x00;
 18949  1284  0024               	movlb	4	; select bank4
 18950  1285  01D4               	clrf	_over_load_time_count^(0+512)
 18951  1286  01D5               	clrf	(_over_load_time_count+1)^(0+512)
 18952  1287                     l17546:	
 18953                           
 18954                           ;task.c: 651: }
 18955                           ;task.c: 653: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge_index==0x01))
 18956  1287  31B4  246E  3191   	fcall	PL90	;call to abstracted procedure
 18957  128A  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 18958  128D  319B  2346  3191   	fcall	___lwtofl
 18959  1290  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 18960  1293  319E  2658  3191   	fcall	___flge
 18961  1296  1803               	btfsc	3,0
 18962  1297  2AA5               	goto	l17558
 18963  1298  0021               	movlb	1	; select bank1
 18964  1299  0B35               	decfsz	_discharge_index^(0+128),w
 18965  129A  2AA5               	goto	l17558
 18966                           
 18967                           ;task.c: 657: discharge_led_status=0x01;
 18968  129B  3002               	movlw	2
 18969  129C  00B5               	movwf	_discharge_index^(0+128)
 18970                           
 18971                           ;task.c: 659: open_discharge_time=0x01;
 18972  129D  0022               	movlb	2	; select bank2
 18973  129E  01BF               	clrf	_open_discharge_time^(0+256)
 18974  129F  0ABF               	incf	_open_discharge_time^(0+256),f
 18975                           
 18976                           ;task.c: 661: (LATCbits.LATC3 = 0x01);
 18977  12A0  158E               	bsf	14,3	;volatile
 18978                           
 18979                           ;task.c: 663: Enable_Bost_Pwm();
 18980  12A1  31A7  2792  3191   	fcall	_Enable_Bost_Pwm
 18981                           
 18982                           ;task.c: 665: }
 18983  12A4  2ABB               	goto	l17564
 18984  12A5                     l17558:	
 18985                           
 18986                           ;task.c: 666: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge_index==0
      +                          x01))
 18987  12A5  31B4  246E  3191   	fcall	PL90	;call to abstracted procedure
 18988  12A8  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 18989  12AB  319B  2346  3191   	fcall	___lwtofl
 18990  12AE  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 18991  12B1  319E  2658  3191   	fcall	___flge
 18992  12B4  1C03               	btfss	3,0
 18993  12B5  2ABB               	goto	l17564
 18994                           
 18995                           ;task.c: 667: {
 18996                           ;task.c: 668: discharge_led_status=0x00;
 18997  12B6  0021               	movlb	1	; select bank1
 18998  12B7  0B35               	decfsz	_discharge_index^(0+128),w
 18999  12B8  2ABB               	goto	l17564
 19000                           
 19001                           ;task.c: 670: open_discharge_time=0x00;
 19002  12B9  0022               	movlb	2	; select bank2
 19003  12BA  01BF               	clrf	_open_discharge_time^(0+256)
 19004  12BB                     l17564:	
 19005                           
 19006                           ;task.c: 671: }
 19007                           ;task.c: 674: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge_index==0x02))
 19008  12BB  31B4  247D  3191   	fcall	PL92	;call to abstracted procedure
 19009  12BE  319B  2346  3191   	fcall	___lwtofl
 19010  12C1  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 19011  12C4  31B4  24ED  3191   	fcall	PL126	;call to abstracted procedure
 19012  12C7  319E  2658  3191   	fcall	___flge
 19013  12CA  1C03               	btfss	3,0
 19014  12CB  2FCE               	goto	l17982
 19015  12CC  0021               	movlb	1	; select bank1
 19016  12CD  0835               	movf	_discharge_index^(0+128),w
 19017  12CE  3A02               	xorlw	2
 19018  12CF  1D03               	skipz
 19019  12D0  2FCE               	goto	l17982
 19020                           
 19021                           ;task.c: 675: {
 19022                           ;task.c: 677: if((discharge_current_value<=discharge_i_limit)&&(discharge_index==0x02))
 19023  12D1  0025               	movlb	5	; select bank5
 19024  12D2  31B4  2430  3191   	fcall	PL74	;call to abstracted procedure
 19025  12D5  319B  2346  3191   	fcall	___lwtofl
 19026  12D8  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19027  12DB  319E  2658  3191   	fcall	___flge
 19028  12DE  1C03               	btfss	3,0
 19029  12DF  2FA6               	goto	l17970
 19030  12E0  0021               	movlb	1	; select bank1
 19031  12E1  0835               	movf	_discharge_index^(0+128),w
 19032  12E2  3A02               	xorlw	2
 19033  12E3  1D03               	skipz
 19034  12E4  2FA6               	goto	l17970
 19035                           
 19036                           ;task.c: 678: {
 19037                           ;task.c: 681: t1=step_01_time_limit;
 19038  12E5  0866               	movf	_step_01_time_limit^(0+128),w
 19039  12E6  0022               	movlb	2	; select bank2
 19040  12E7  00C8               	movwf	_t1^(0+256)
 19041                           
 19042                           ;task.c: 682: t2=step_01_time_limit+step_02_time_limit;
 19043  12E8  0021               	movlb	1	; select bank1
 19044  12E9  0866               	movf	_step_01_time_limit^(0+128),w
 19045  12EA  0768               	addwf	_step_02_time_limit^(0+128),w
 19046  12EB  0022               	movlb	2	; select bank2
 19047  12EC  00C9               	movwf	_t2^(0+256)
 19048                           
 19049                           ;task.c: 683: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
 19050  12ED  31B5  256C  3191   	fcall	PL218	;call to abstracted procedure
 19051  12F0  00CA               	movwf	_t3^(0+256)
 19052                           
 19053                           ;task.c: 684: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit;
 19054  12F1  31B5  256C  3191   	fcall	PL218	;call to abstracted procedure
 19055  12F4  076B               	addwf	_step_04_time_limit^(0+256),w
 19056  12F5  00CB               	movwf	_t4^(0+256)
 19057                           
 19058                           ;task.c: 685: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit+step_05_time_limit;
 19059  12F6  31B5  256C  3191   	fcall	PL218	;call to abstracted procedure
 19060  12F9  076B               	addwf	_step_04_time_limit^(0+256),w
 19061  12FA  076D               	addwf	_step_05_time_limit^(0+256),w
 19062  12FB  0023               	movlb	3	; select bank3
 19063  12FC  00C5               	movwf	_t5^(0+384)
 19064                           
 19065                           ;task.c: 687: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
 19066  12FD  0022               	movlb	2	; select bank2
 19067  12FE  0848               	movf	_t1^(0+256),w
 19068  12FF  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19069  1302  1803               	skipnc
 19070  1303  2B0B               	goto	l17586
 19071  1304  3002               	movlw	2
 19072  1305  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 19073  1306  1803               	skipnc
 19074  1307  2B0B               	goto	l17586
 19075                           
 19076                           ;task.c: 688: {
 19077                           ;task.c: 689: Adjust_Pout_Flag=0x01;
 19078  1308  01B2               	clrf	_Adjust_Pout_Flag^(0+128)
 19079  1309  0AB2               	incf	_Adjust_Pout_Flag^(0+128),f
 19080                           
 19081                           ;task.c: 690: }
 19082  130A  2B5D               	goto	l17620
 19083  130B                     l17586:	
 19084                           
 19085                           ;task.c: 691: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
 19086  130B  0022               	movlb	2	; select bank2
 19087  130C  0848               	movf	_t1^(0+256),w
 19088  130D  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19089  1310  1C03               	skipc
 19090  1311  2B1F               	goto	l17594
 19091  1312  0022               	movlb	2	; select bank2
 19092  1313  0849               	movf	_t2^(0+256),w
 19093  1314  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19094  1317  1803               	skipnc
 19095  1318  2B1F               	goto	l17594
 19096  1319  3003               	movlw	3
 19097  131A  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 19098  131B  1803               	skipnc
 19099  131C  2B1F               	goto	l17594
 19100                           
 19101                           ;task.c: 692: {
 19102                           ;task.c: 693: Adjust_Pout_Flag=0x02;
 19103  131D  3002               	movlw	2
 19104  131E  2B5A               	goto	L7
 19105  131F                     l17594:	
 19106                           ;task.c: 694: }
 19107                           
 19108                           
 19109                           ;task.c: 695: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
 19110  131F  0022               	movlb	2	; select bank2
 19111  1320  0849               	movf	_t2^(0+256),w
 19112  1321  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19113  1324  1C03               	skipc
 19114  1325  2B33               	goto	l17602
 19115  1326  0022               	movlb	2	; select bank2
 19116  1327  084A               	movf	_t3^(0+256),w
 19117  1328  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19118  132B  1803               	skipnc
 19119  132C  2B33               	goto	l17602
 19120  132D  3004               	movlw	4
 19121  132E  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 19122  132F  1803               	skipnc
 19123  1330  2B33               	goto	l17602
 19124                           
 19125                           ;task.c: 696: {
 19126                           ;task.c: 697: Adjust_Pout_Flag=0x03;
 19127  1331  3003               	movlw	3
 19128  1332  2B5A               	goto	L7
 19129  1333                     l17602:	
 19130                           ;task.c: 698: }
 19131                           
 19132                           
 19133                           ;task.c: 699: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
 19134  1333  0022               	movlb	2	; select bank2
 19135  1334  084A               	movf	_t3^(0+256),w
 19136  1335  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19137  1338  1C03               	skipc
 19138  1339  2B47               	goto	l17610
 19139  133A  0022               	movlb	2	; select bank2
 19140  133B  084B               	movf	_t4^(0+256),w
 19141  133C  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19142  133F  1803               	skipnc
 19143  1340  2B47               	goto	l17610
 19144  1341  3005               	movlw	5
 19145  1342  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 19146  1343  1803               	skipnc
 19147  1344  2B47               	goto	l17610
 19148                           
 19149                           ;task.c: 700: {
 19150                           ;task.c: 701: Adjust_Pout_Flag=0x04;
 19151  1345  3004               	movlw	4
 19152  1346  2B5A               	goto	L7
 19153  1347                     l17610:	
 19154                           ;task.c: 702: }
 19155                           
 19156                           
 19157                           ;task.c: 703: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
 19158  1347  0022               	movlb	2	; select bank2
 19159  1348  084B               	movf	_t4^(0+256),w
 19160  1349  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19161  134C  1C03               	skipc
 19162  134D  2B5C               	goto	l17618
 19163  134E  0023               	movlb	3	; select bank3
 19164  134F  0845               	movf	_t5^(0+384),w
 19165  1350  31B3  23B5  3191   	fcall	PL32	;call to abstracted procedure
 19166  1353  1803               	skipnc
 19167  1354  2B5C               	goto	l17618
 19168  1355  3006               	movlw	6
 19169  1356  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 19170  1357  1803               	skipnc
 19171  1358  2B5C               	goto	l17618
 19172                           
 19173                           ;task.c: 704: {
 19174                           ;task.c: 705: Adjust_Pout_Flag=0x05;
 19175  1359  3005               	movlw	5
 19176  135A                     L7:	
 19177  135A  00B2               	movwf	_Adjust_Pout_Flag^(0+128)
 19178                           
 19179                           ;task.c: 706: }
 19180  135B  2B5D               	goto	l17620
 19181  135C                     l17618:	
 19182                           
 19183                           ;task.c: 707: else
 19184                           ;task.c: 708: {
 19185                           ;task.c: 709: Adjust_Pout_Flag=0x00;
 19186  135C  01B2               	clrf	_Adjust_Pout_Flag^(0+128)
 19187  135D                     l17620:	
 19188                           
 19189                           ;task.c: 710: }
 19190                           ;task.c: 712: if(battery_voltage_value>bt_volt_80 && voltage_adjust_index<=0x01)
 19191  135D  0024               	movlb	4	; select bank4
 19192  135E  31B4  2483  3191   	fcall	PL94	;call to abstracted procedure
 19193  1361  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19194  1364  319B  2346  3191   	fcall	___lwtofl
 19195  1367  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19196  136A  319E  2658  3191   	fcall	___flge
 19197  136D  1803               	btfsc	3,0
 19198  136E  2B8B               	goto	l17642
 19199  136F  3002               	movlw	2
 19200  1370  0021               	movlb	1	; select bank1
 19201  1371  026C               	subwf	_voltage_adjust_index^(0+128),w
 19202  1372  1803               	skipnc
 19203  1373  2B8B               	goto	l17642
 19204                           
 19205                           ;task.c: 713: {
 19206                           ;task.c: 714: index_01_count++;
 19207  1374  0024               	movlb	4	; select bank4
 19208  1375  0AC2               	incf	_index_01_count^(0+512),f
 19209  1376  1903               	skipnz
 19210  1377  0AC3               	incf	(_index_01_count+1)^(0+512),f
 19211  1378  3000               	movlw	0
 19212                           
 19213                           ;task.c: 715: index_02_count=0x00;
 19214                           
 19215                           ;task.c: 716: index_03_count=0x00;
 19216                           
 19217                           ;task.c: 717: index_04_count=0x00;
 19218                           
 19219                           ;task.c: 718: index_05_count=0x00;
 19220  1379  31B5  251E  3191   	fcall	PL158	;call to abstracted procedure
 19221                           
 19222                           ;task.c: 719: index_06_count=0x00;
 19223  137C  01CC               	clrf	_index_06_count^(0+512)
 19224  137D  01CD               	clrf	(_index_06_count+1)^(0+512)
 19225                           
 19226                           ;task.c: 720: if(index_01_count>100)
 19227  137E  0243               	subwf	(_index_01_count+1)^(0+512),w
 19228  137F  3065               	movlw	101
 19229  1380  1903               	skipnz
 19230  1381  0242               	subwf	_index_01_count^(0+512),w
 19231  1382  1C03               	skipc
 19232  1383  2CE3               	goto	l17762
 19233                           
 19234                           ;task.c: 721: {
 19235                           ;task.c: 722: voltage_adjust_index=0x01;
 19236  1384  0021               	movlb	1	; select bank1
 19237  1385  01EC               	clrf	_voltage_adjust_index^(0+128)
 19238  1386  0AEC               	incf	_voltage_adjust_index^(0+128),f
 19239                           
 19240                           ;task.c: 723: index_01_count=0x00;
 19241  1387  0024               	movlb	4	; select bank4
 19242  1388  01C2               	clrf	_index_01_count^(0+512)
 19243  1389  01C3               	clrf	(_index_01_count+1)^(0+512)
 19244  138A  2CE3               	goto	l17762
 19245  138B                     l17642:	
 19246                           
 19247                           ;task.c: 727: else if(battery_voltage_value>bt_volt_60 && battery_voltage_value<=bt_volt
      +                          _80 && voltage_adjust_index<=0x02)
 19248  138B  0024               	movlb	4	; select bank4
 19249  138C  31B4  249F  3191   	fcall	PL98	;call to abstracted procedure
 19250  138F  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19251  1392  319B  2346  3191   	fcall	___lwtofl
 19252  1395  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19253  1398  319E  2658  3191   	fcall	___flge
 19254  139B  1803               	btfsc	3,0
 19255  139C  2BCD               	goto	l17666
 19256  139D  0024               	movlb	4	; select bank4
 19257  139E  31B4  2483  3191   	fcall	PL94	;call to abstracted procedure
 19258  13A1  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19259  13A4  319B  2346  3191   	fcall	___lwtofl
 19260  13A7  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19261  13AA  319E  2658  3191   	fcall	___flge
 19262  13AD  1C03               	btfss	3,0
 19263  13AE  2BCD               	goto	l17666
 19264  13AF  3003               	movlw	3
 19265  13B0  0021               	movlb	1	; select bank1
 19266  13B1  026C               	subwf	_voltage_adjust_index^(0+128),w
 19267  13B2  1803               	skipnc
 19268  13B3  2BCD               	goto	l17666
 19269                           
 19270                           ;task.c: 728: {
 19271                           ;task.c: 729: index_02_count++;
 19272  13B4  0024               	movlb	4	; select bank4
 19273  13B5  0AC4               	incf	_index_02_count^(0+512),f
 19274  13B6  1903               	skipnz
 19275  13B7  0AC5               	incf	(_index_02_count+1)^(0+512),f
 19276  13B8  3000               	movlw	0
 19277                           
 19278                           ;task.c: 730: index_01_count=0x00;
 19279  13B9  01C2               	clrf	_index_01_count^(0+512)
 19280  13BA  01C3               	clrf	(_index_01_count+1)^(0+512)
 19281                           
 19282                           ;task.c: 731: index_03_count=0x00;
 19283  13BB  01C6               	clrf	_index_03_count^(0+512)
 19284  13BC  01C7               	clrf	(_index_03_count+1)^(0+512)
 19285                           
 19286                           ;task.c: 732: index_04_count=0x00;
 19287                           
 19288                           ;task.c: 733: index_05_count=0x00;
 19289                           
 19290                           ;task.c: 734: index_06_count=0x00;
 19291  13BD  31B5  2532  3191   	fcall	PL180	;call to abstracted procedure
 19292                           
 19293                           ;task.c: 735: if(index_02_count>100)
 19294  13C0  0245               	subwf	(_index_02_count+1)^(0+512),w
 19295  13C1  3065               	movlw	101
 19296  13C2  1903               	skipnz
 19297  13C3  0244               	subwf	_index_02_count^(0+512),w
 19298  13C4  1C03               	skipc
 19299  13C5  2CE3               	goto	l17762
 19300                           
 19301                           ;task.c: 736: {
 19302                           ;task.c: 737: voltage_adjust_index=0x02;
 19303  13C6  3002               	movlw	2
 19304  13C7  0021               	movlb	1	; select bank1
 19305  13C8  00EC               	movwf	_voltage_adjust_index^(0+128)
 19306                           
 19307                           ;task.c: 738: index_02_count=0x00;
 19308  13C9  0024               	movlb	4	; select bank4
 19309  13CA  01C4               	clrf	_index_02_count^(0+512)
 19310  13CB  01C5               	clrf	(_index_02_count+1)^(0+512)
 19311  13CC  2CE3               	goto	l17762
 19312  13CD                     l17666:	
 19313                           
 19314                           ;task.c: 741: else if(battery_voltage_value>bt_volt_40 && battery_voltage_value<=bt_volt
      +                          _60 && voltage_adjust_index<=0x03)
 19315  13CD  0024               	movlb	4	; select bank4
 19316  13CE  31B4  2491  3191   	fcall	PL96	;call to abstracted procedure
 19317  13D1  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19318  13D4  319B  2346  3191   	fcall	___lwtofl
 19319  13D7  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19320  13DA  319E  2658  3191   	fcall	___flge
 19321  13DD  1803               	btfsc	3,0
 19322  13DE  2C0F               	goto	l17690
 19323  13DF  0024               	movlb	4	; select bank4
 19324  13E0  31B4  249F  3191   	fcall	PL98	;call to abstracted procedure
 19325  13E3  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19326  13E6  319B  2346  3191   	fcall	___lwtofl
 19327  13E9  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19328  13EC  319E  2658  3191   	fcall	___flge
 19329  13EF  1C03               	btfss	3,0
 19330  13F0  2C0F               	goto	l17690
 19331  13F1  3004               	movlw	4
 19332  13F2  0021               	movlb	1	; select bank1
 19333  13F3  026C               	subwf	_voltage_adjust_index^(0+128),w
 19334  13F4  1803               	skipnc
 19335  13F5  2C0F               	goto	l17690
 19336                           
 19337                           ;task.c: 742: {
 19338                           ;task.c: 743: index_03_count++;
 19339  13F6  0024               	movlb	4	; select bank4
 19340  13F7  0AC6               	incf	_index_03_count^(0+512),f
 19341  13F8  1903               	skipnz
 19342  13F9  0AC7               	incf	(_index_03_count+1)^(0+512),f
 19343  13FA  3000               	movlw	0
 19344                           
 19345                           ;task.c: 744: index_02_count=0x00;
 19346  13FB  01C4               	clrf	_index_02_count^(0+512)
 19347  13FC  01C5               	clrf	(_index_02_count+1)^(0+512)
 19348                           
 19349                           ;task.c: 745: index_01_count=0x00;
 19350  13FD  01C2               	clrf	_index_01_count^(0+512)
 19351  13FE  01C3               	clrf	(_index_01_count+1)^(0+512)
 19352                           
 19353                           ;task.c: 746: index_04_count=0x00;
 19354                           
 19355                           ;task.c: 747: index_05_count=0x00;
 19356                           
 19357                           ;task.c: 748: index_06_count=0x00;
 19358  13FF  31B5  2532  3191   	fcall	PL180	;call to abstracted procedure
 19359                           
 19360                           ;task.c: 749: if(index_03_count>100)
 19361  1402  0247               	subwf	(_index_03_count+1)^(0+512),w
 19362  1403  3065               	movlw	101
 19363  1404  1903               	skipnz
 19364  1405  0246               	subwf	_index_03_count^(0+512),w
 19365  1406  1C03               	skipc
 19366  1407  2CE3               	goto	l17762
 19367                           
 19368                           ;task.c: 750: {
 19369                           ;task.c: 751: voltage_adjust_index=0x03;
 19370  1408  3003               	movlw	3
 19371  1409  0021               	movlb	1	; select bank1
 19372  140A  00EC               	movwf	_voltage_adjust_index^(0+128)
 19373                           
 19374                           ;task.c: 752: index_03_count=0x00;
 19375  140B  0024               	movlb	4	; select bank4
 19376  140C  01C6               	clrf	_index_03_count^(0+512)
 19377  140D  01C7               	clrf	(_index_03_count+1)^(0+512)
 19378  140E  2CE3               	goto	l17762
 19379  140F                     l17690:	
 19380                           
 19381                           ;task.c: 755: else if(battery_voltage_value>bt_volt_20 && battery_voltage_value<=bt_volt
      +                          _40 && voltage_adjust_index<=0x04)
 19382  140F  0024               	movlb	4	; select bank4
 19383  1410  31B4  24AD  3191   	fcall	PL100	;call to abstracted procedure
 19384  1413  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19385  1416  319B  2346  3191   	fcall	___lwtofl
 19386  1419  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19387  141C  319E  2658  3191   	fcall	___flge
 19388  141F  1803               	btfsc	3,0
 19389  1420  2C54               	goto	l17714
 19390  1421  0024               	movlb	4	; select bank4
 19391  1422  31B4  2491  3191   	fcall	PL96	;call to abstracted procedure
 19392  1425  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19393  1428  319B  2346  3191   	fcall	___lwtofl
 19394  142B  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19395  142E  319E  2658  3191   	fcall	___flge
 19396  1431  1C03               	btfss	3,0
 19397  1432  2C54               	goto	l17714
 19398  1433  3005               	movlw	5
 19399  1434  0021               	movlb	1	; select bank1
 19400  1435  026C               	subwf	_voltage_adjust_index^(0+128),w
 19401  1436  1803               	skipnc
 19402  1437  2C54               	goto	l17714
 19403                           
 19404                           ;task.c: 756: {
 19405                           ;task.c: 757: index_04_count++;
 19406  1438  0024               	movlb	4	; select bank4
 19407  1439  0AC8               	incf	_index_04_count^(0+512),f
 19408  143A  1903               	skipnz
 19409  143B  0AC9               	incf	(_index_04_count+1)^(0+512),f
 19410  143C  3000               	movlw	0
 19411                           
 19412                           ;task.c: 758: index_02_count=0x00;
 19413  143D  01C4               	clrf	_index_02_count^(0+512)
 19414  143E  01C5               	clrf	(_index_02_count+1)^(0+512)
 19415                           
 19416                           ;task.c: 759: index_03_count=0x00;
 19417  143F  01C6               	clrf	_index_03_count^(0+512)
 19418  1440  01C7               	clrf	(_index_03_count+1)^(0+512)
 19419                           
 19420                           ;task.c: 760: index_01_count=0x00;
 19421  1441  01C2               	clrf	_index_01_count^(0+512)
 19422  1442  01C3               	clrf	(_index_01_count+1)^(0+512)
 19423                           
 19424                           ;task.c: 761: index_05_count=0x00;
 19425  1443  01CA               	clrf	_index_05_count^(0+512)
 19426  1444  01CB               	clrf	(_index_05_count+1)^(0+512)
 19427                           
 19428                           ;task.c: 762: index_06_count=0x00;
 19429  1445  01CC               	clrf	_index_06_count^(0+512)
 19430  1446  01CD               	clrf	(_index_06_count+1)^(0+512)
 19431                           
 19432                           ;task.c: 763: if(index_04_count>100)
 19433  1447  0249               	subwf	(_index_04_count+1)^(0+512),w
 19434  1448  3065               	movlw	101
 19435  1449  1903               	skipnz
 19436  144A  0248               	subwf	_index_04_count^(0+512),w
 19437  144B  1C03               	skipc
 19438  144C  2CE3               	goto	l17762
 19439                           
 19440                           ;task.c: 764: {
 19441                           ;task.c: 765: voltage_adjust_index=0x04;
 19442  144D  3004               	movlw	4
 19443  144E  0021               	movlb	1	; select bank1
 19444  144F  00EC               	movwf	_voltage_adjust_index^(0+128)
 19445                           
 19446                           ;task.c: 766: index_04_count=0x00;
 19447  1450  0024               	movlb	4	; select bank4
 19448  1451  01C8               	clrf	_index_04_count^(0+512)
 19449  1452  01C9               	clrf	(_index_04_count+1)^(0+512)
 19450  1453  2CE3               	goto	l17762
 19451  1454                     l17714:	
 19452                           
 19453                           ;task.c: 769: else if(battery_voltage_value>bt_volt_00 && battery_voltage_value<=bt_volt
      +                          _20 && voltage_adjust_index<=0x05)
 19454  1454  0024               	movlb	4	; select bank4
 19455  1455  085B               	movf	(_bt_volt_00+3)^(0+512),w
 19456  1456  0020               	movlb	0	; select bank0
 19457  1457  00DD               	movwf	___flge@ff1+3
 19458  1458  0024               	movlb	4	; select bank4
 19459  1459  085A               	movf	(_bt_volt_00+2)^(0+512),w
 19460  145A  0020               	movlb	0	; select bank0
 19461  145B  00DC               	movwf	___flge@ff1+2
 19462  145C  0024               	movlb	4	; select bank4
 19463  145D  0859               	movf	(_bt_volt_00+1)^(0+512),w
 19464  145E  0020               	movlb	0	; select bank0
 19465  145F  00DB               	movwf	___flge@ff1+1
 19466  1460  0024               	movlb	4	; select bank4
 19467  1461  0858               	movf	_bt_volt_00^(0+512),w
 19468  1462  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19469  1465  319B  2346  3191   	fcall	___lwtofl
 19470  1468  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19471  146B  319E  2658  3191   	fcall	___flge
 19472  146E  1803               	btfsc	3,0
 19473  146F  2CA3               	goto	l17738
 19474  1470  0024               	movlb	4	; select bank4
 19475  1471  31B4  24AD  3191   	fcall	PL100	;call to abstracted procedure
 19476  1474  31B3  23E8  3191   	fcall	PL56	;call to abstracted procedure
 19477  1477  319B  2346  3191   	fcall	___lwtofl
 19478  147A  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 19479  147D  319E  2658  3191   	fcall	___flge
 19480  1480  1C03               	btfss	3,0
 19481  1481  2CA3               	goto	l17738
 19482  1482  3006               	movlw	6
 19483  1483  0021               	movlb	1	; select bank1
 19484  1484  026C               	subwf	_voltage_adjust_index^(0+128),w
 19485  1485  1803               	skipnc
 19486  1486  2CA3               	goto	l17738
 19487                           
 19488                           ;task.c: 770: {
 19489                           ;task.c: 771: index_05_count++;
 19490  1487  0024               	movlb	4	; select bank4
 19491  1488  0ACA               	incf	_index_05_count^(0+512),f
 19492  1489  1903               	skipnz
 19493  148A  0ACB               	incf	(_index_05_count+1)^(0+512),f
 19494  148B  3000               	movlw	0
 19495                           
 19496                           ;task.c: 772: index_02_count=0x00;
 19497  148C  01C4               	clrf	_index_02_count^(0+512)
 19498  148D  01C5               	clrf	(_index_02_count+1)^(0+512)
 19499                           
 19500                           ;task.c: 773: index_03_count=0x00;
 19501  148E  01C6               	clrf	_index_03_count^(0+512)
 19502  148F  01C7               	clrf	(_index_03_count+1)^(0+512)
 19503                           
 19504                           ;task.c: 774: index_04_count=0x00;
 19505  1490  01C8               	clrf	_index_04_count^(0+512)
 19506  1491  01C9               	clrf	(_index_04_count+1)^(0+512)
 19507                           
 19508                           ;task.c: 775: index_01_count=0x00;
 19509  1492  01C2               	clrf	_index_01_count^(0+512)
 19510  1493  01C3               	clrf	(_index_01_count+1)^(0+512)
 19511                           
 19512                           ;task.c: 776: index_06_count=0x00;
 19513  1494  01CC               	clrf	_index_06_count^(0+512)
 19514  1495  01CD               	clrf	(_index_06_count+1)^(0+512)
 19515                           
 19516                           ;task.c: 777: if(index_05_count>100)
 19517  1496  024B               	subwf	(_index_05_count+1)^(0+512),w
 19518  1497  3065               	movlw	101
 19519  1498  1903               	skipnz
 19520  1499  024A               	subwf	_index_05_count^(0+512),w
 19521  149A  1C03               	skipc
 19522  149B  2CE3               	goto	l17762
 19523                           
 19524                           ;task.c: 778: {
 19525                           ;task.c: 779: voltage_adjust_index=0x05;
 19526  149C  3005               	movlw	5
 19527  149D  0021               	movlb	1	; select bank1
 19528  149E  00EC               	movwf	_voltage_adjust_index^(0+128)
 19529                           
 19530                           ;task.c: 780: index_05_count=0x00;
 19531  149F  0024               	movlb	4	; select bank4
 19532  14A0  01CA               	clrf	_index_05_count^(0+512)
 19533  14A1  01CB               	clrf	(_index_05_count+1)^(0+512)
 19534  14A2  2CE3               	goto	l17762
 19535  14A3                     l17738:	
 19536                           
 19537                           ;task.c: 783: else if(battery_voltage_value<bt_volt_00 && voltage_adjust_index<=0x06)
 19538  14A3  31B4  247D  3191   	fcall	PL92	;call to abstracted procedure
 19539  14A6  319B  2346  3191   	fcall	___lwtofl
 19540  14A9  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 19541  14AC  0024               	movlb	4	; select bank4
 19542  14AD  085B               	movf	(_bt_volt_00+3)^(0+512),w
 19543  14AE  0020               	movlb	0	; select bank0
 19544  14AF  00E1               	movwf	___flge@ff2+3
 19545  14B0  0024               	movlb	4	; select bank4
 19546  14B1  085A               	movf	(_bt_volt_00+2)^(0+512),w
 19547  14B2  0020               	movlb	0	; select bank0
 19548  14B3  00E0               	movwf	___flge@ff2+2
 19549  14B4  0024               	movlb	4	; select bank4
 19550  14B5  0859               	movf	(_bt_volt_00+1)^(0+512),w
 19551  14B6  0020               	movlb	0	; select bank0
 19552  14B7  00DF               	movwf	___flge@ff2+1
 19553  14B8  0024               	movlb	4	; select bank4
 19554  14B9  0858               	movf	_bt_volt_00^(0+512),w
 19555  14BA  0020               	movlb	0	; select bank0
 19556  14BB  00DE               	movwf	___flge@ff2
 19557  14BC  319E  2658  3191   	fcall	___flge
 19558  14BF  1803               	btfsc	3,0
 19559  14C0  2CDB               	goto	l17760
 19560  14C1  3007               	movlw	7
 19561  14C2  0021               	movlb	1	; select bank1
 19562  14C3  026C               	subwf	_voltage_adjust_index^(0+128),w
 19563  14C4  1803               	skipnc
 19564  14C5  2CDB               	goto	l17760
 19565                           
 19566                           ;task.c: 784: {
 19567                           ;task.c: 785: index_06_count++;
 19568  14C6  0024               	movlb	4	; select bank4
 19569  14C7  0ACC               	incf	_index_06_count^(0+512),f
 19570  14C8  1903               	skipnz
 19571  14C9  0ACD               	incf	(_index_06_count+1)^(0+512),f
 19572  14CA  3000               	movlw	0
 19573                           
 19574                           ;task.c: 786: index_02_count=0x00;
 19575                           
 19576                           ;task.c: 787: index_03_count=0x00;
 19577                           
 19578                           ;task.c: 788: index_04_count=0x00;
 19579                           
 19580                           ;task.c: 789: index_05_count=0x00;
 19581  14CB  31B5  251E  3191   	fcall	PL158	;call to abstracted procedure
 19582                           
 19583                           ;task.c: 790: index_01_count=0x00;
 19584  14CE  01C2               	clrf	_index_01_count^(0+512)
 19585  14CF  01C3               	clrf	(_index_01_count+1)^(0+512)
 19586                           
 19587                           ;task.c: 791: if(index_06_count>100)
 19588  14D0  024D               	subwf	(_index_06_count+1)^(0+512),w
 19589  14D1  3065               	movlw	101
 19590  14D2  1903               	skipnz
 19591  14D3  024C               	subwf	_index_06_count^(0+512),w
 19592  14D4  1C03               	skipc
 19593  14D5  2CE3               	goto	l17762
 19594                           
 19595                           ;task.c: 792: {
 19596                           ;task.c: 793: voltage_adjust_index=0x06;
 19597  14D6  3006               	movlw	6
 19598  14D7  0021               	movlb	1	; select bank1
 19599  14D8  00EC               	movwf	_voltage_adjust_index^(0+128)
 19600                           
 19601                           ;task.c: 794: index_06_count=0x00;
 19602  14D9  0024               	movlb	4	; select bank4
 19603  14DA  2CE1               	goto	L8
 19604  14DB                     l17760:	
 19605                           
 19606                           ;task.c: 797: else
 19607                           ;task.c: 798: {
 19608                           ;task.c: 799: index_01_count=0x00;
 19609  14DB  0024               	movlb	4	; select bank4
 19610  14DC  01C2               	clrf	_index_01_count^(0+512)
 19611  14DD  01C3               	clrf	(_index_01_count+1)^(0+512)
 19612                           
 19613                           ;task.c: 800: index_02_count=0x00;
 19614                           
 19615                           ;task.c: 801: index_03_count=0x00;
 19616                           
 19617                           ;task.c: 802: index_04_count=0x00;
 19618                           
 19619                           ;task.c: 803: index_05_count=0x00;
 19620  14DE  31B5  251E  3191   	fcall	PL158	;call to abstracted procedure
 19621  14E1                     L8:	
 19622                           
 19623                           ;task.c: 804: index_06_count=0x00;
 19624  14E1  01CC               	clrf	_index_06_count^(0+512)
 19625  14E2  01CD               	clrf	(_index_06_count+1)^(0+512)
 19626  14E3                     l17762:	
 19627                           
 19628                           ;task.c: 805: }
 19629                           ;task.c: 807: if( ((load_cc_I/100)*160) > (Load_Pmax*160/(load_voltage_value*61/1000)) )
 19630  14E3  303D               	movlw	61
 19631  14E4  0020               	movlb	0	; select bank0
 19632  14E5  31B5  2527  3191   	fcall	PL172	;call to abstracted procedure
 19633  14E8  3188  20BC  3191   	fcall	___wmul
 19634  14EB  31B5  2542  3191   	fcall	PL198	;call to abstracted procedure
 19635  14EE  31B7  271D  3191   	fcall	___lwdiv
 19636  14F1  31B5  25A0  3191   	fcall	PL264	;call to abstracted procedure
 19637  14F4  319B  2346  3191   	fcall	___lwtofl
 19638  14F7  31B3  23C9  3191   	fcall	PL52	;call to abstracted procedure
 19639  14FA  318E  2607  3191   	fcall	___flmul
 19640  14FD  31B4  2460  3191   	fcall	PL82	;call to abstracted procedure
 19641  1500  31A6  26E5  3191   	fcall	___fldiv
 19642  1503  084A               	movf	?___fldiv+3,w
 19643  1504  00DD               	movwf	___flge@ff1+3
 19644  1505  0849               	movf	?___fldiv+2,w
 19645  1506  00DC               	movwf	___flge@ff1+2
 19646  1507  0848               	movf	?___fldiv+1,w
 19647  1508  00DB               	movwf	___flge@ff1+1
 19648  1509  0847               	movf	?___fldiv,w
 19649  150A  00DA               	movwf	___flge@ff1
 19650  150B  3043               	movlw	67
 19651  150C  31B3  2377  3191   	fcall	PL4	;call to abstracted procedure
 19652  150F  31A6  26E5  3191   	fcall	___fldiv
 19653  1512  3186  26CD  3191   	fcall	PL30	;call to abstracted procedure
 19654  1515  318E  2607  3191   	fcall	___flmul
 19655  1518  31B5  254B  3191   	fcall	PL200	;call to abstracted procedure
 19656  151B  319E  2658  3191   	fcall	___flge
 19657  151E  1803               	btfsc	3,0
 19658  151F  2D45               	goto	l17794
 19659                           
 19660                           ;task.c: 808: {
 19661                           ;task.c: 809: PID_CC_discharge.SetPoint=(Load_Pmax*160)/(load_voltage_value*61/1000);
 19662  1520  303D               	movlw	61
 19663  1521  31B5  2527  3191   	fcall	PL172	;call to abstracted procedure
 19664  1524  3188  20BC  3191   	fcall	___wmul
 19665  1527  31B5  2542  3191   	fcall	PL198	;call to abstracted procedure
 19666  152A  31B7  271D  3191   	fcall	___lwdiv
 19667  152D  31B5  25A0  3191   	fcall	PL264	;call to abstracted procedure
 19668  1530  319B  2346  3191   	fcall	___lwtofl
 19669  1533  31B3  23C9  3191   	fcall	PL52	;call to abstracted procedure
 19670  1536  318E  2607  3191   	fcall	___flmul
 19671  1539  31B4  2460  3191   	fcall	PL82	;call to abstracted procedure
 19672  153C  31A6  26E5  3191   	fcall	___fldiv
 19673  153F  31B5  250E  3191   	fcall	PL130	;call to abstracted procedure
 19674                           
 19675                           ;task.c: 811: limit_power_pid_flag=0x01;
 19676  1542  01BB               	clrf	_limit_power_pid_flag^(0+384)
 19677  1543  0ABB               	incf	_limit_power_pid_flag^(0+384),f
 19678  1544  2D55               	goto	L54
 19679  1545                     l17794:	
 19680                           ;task.c: 836: {
 19681                           ;task.c: 837: PID_CC_discharge.SetPoint =0;
 19682                           
 19683                           ;task.c: 835: else if(Adjust_Pout_Flag==0x00)
 19684                           
 19685                           ;task.c: 834: }
 19686                           
 19687                           ;task.c: 832: {
 19688                           ;task.c: 833: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 19689                           
 19690                           ;task.c: 831: else if(Adjust_Pout_Flag==0x05)
 19691                           
 19692                           ;task.c: 830: }
 19693                           
 19694                           ;task.c: 828: {
 19695                           ;task.c: 829: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 19696                           
 19697                           ;task.c: 827: else if(Adjust_Pout_Flag==0x04)
 19698                           
 19699                           ;task.c: 826: }
 19700                           
 19701                           ;task.c: 824: {
 19702                           ;task.c: 825: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 19703                           
 19704                           ;task.c: 823: else if(Adjust_Pout_Flag==0x03)
 19705                           
 19706                           ;task.c: 822: }
 19707                           
 19708                           ;task.c: 820: {
 19709                           ;task.c: 821: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 19710                           
 19711                           ;task.c: 819: else if(Adjust_Pout_Flag==0x02)
 19712                           
 19713                           ;task.c: 818: }
 19714                           
 19715                           ;task.c: 816: {
 19716                           ;task.c: 817: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 19717                           
 19718                           ;task.c: 815: if(Adjust_Pout_Flag==0x01)
 19719                           
 19720                           ;task.c: 813: data_cc_var = PID_CC_discharge.SetPoint;
 19721                           
 19722                           
 19723                           ;task.c: 841: else
 19724                           ;task.c: 842: {
 19725                           ;task.c: 843: PID_CC_discharge.SetPoint=(load_cc_I/100)*160;
 19726  1545  3043               	movlw	67
 19727  1546  31B3  2377  3191   	fcall	PL4	;call to abstracted procedure
 19728  1549  31A6  26E5  3191   	fcall	___fldiv
 19729  154C  3186  26CD  3191   	fcall	PL30	;call to abstracted procedure
 19730  154F  318E  2607  3191   	fcall	___flmul
 19731  1552  31B3  239C  3191   	fcall	PL18	;call to abstracted procedure
 19732  1555                     L54:	
 19733                           
 19734                           ;task.c: 845: data_cc_var = PID_CC_discharge.SetPoint;
 19735  1555  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 19736  1556  0025               	movlb	5	; select bank5
 19737  1557  00EF               	movwf	(handle_ad_loop@data_cc_var+3)^(0+640)
 19738  1558  0023               	movlb	3	; select bank3
 19739  1559  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 19740  155A  0025               	movlb	5	; select bank5
 19741  155B  00EE               	movwf	(handle_ad_loop@data_cc_var+2)^(0+640)
 19742  155C  0023               	movlb	3	; select bank3
 19743  155D  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 19744  155E  0025               	movlb	5	; select bank5
 19745  155F  00ED               	movwf	(handle_ad_loop@data_cc_var+1)^(0+640)
 19746  1560  0023               	movlb	3	; select bank3
 19747  1561  0847               	movf	_PID_CC_discharge^(0+384),w
 19748  1562  0025               	movlb	5	; select bank5
 19749  1563  00EC               	movwf	handle_ad_loop@data_cc_var^(0+640)
 19750                           
 19751                           ;task.c: 847: if(Adjust_Pout_Flag==0x01)
 19752  1564  0021               	movlb	1	; select bank1
 19753  1565  0B32               	decfsz	_Adjust_Pout_Flag^(0+128),w
 19754  1566  2D79               	goto	l17802
 19755                           
 19756                           ;task.c: 848: {
 19757                           ;task.c: 849: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 19758  1567  3042               	movlw	66
 19759  1568  31B4  24C3  3191   	fcall	PL106	;call to abstracted procedure
 19760  156B  0858               	movf	(_step_01_load_percent+3)^(0+256),w
 19761  156C  0020               	movlb	0	; select bank0
 19762  156D  00B7               	movwf	___flmul@f1+3
 19763  156E  0022               	movlb	2	; select bank2
 19764  156F  0857               	movf	(_step_01_load_percent+2)^(0+256),w
 19765  1570  0020               	movlb	0	; select bank0
 19766  1571  00B6               	movwf	___flmul@f1+2
 19767  1572  0022               	movlb	2	; select bank2
 19768  1573  0856               	movf	(_step_01_load_percent+1)^(0+256),w
 19769  1574  0020               	movlb	0	; select bank0
 19770  1575  00B5               	movwf	___flmul@f1+1
 19771  1576  0022               	movlb	2	; select bank2
 19772  1577  0855               	movf	_step_01_load_percent^(0+256),w
 19773  1578  2DD0               	goto	L38
 19774  1579                     l17802:	
 19775                           ;task.c: 850: }
 19776                           
 19777                           
 19778                           ;task.c: 851: else if(Adjust_Pout_Flag==0x02)
 19779  1579  0832               	movf	_Adjust_Pout_Flag^(0+128),w
 19780  157A  3A02               	xorlw	2
 19781  157B  1D03               	skipz
 19782  157C  2D8F               	goto	l17806
 19783                           
 19784                           ;task.c: 852: {
 19785                           ;task.c: 853: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 19786  157D  3042               	movlw	66
 19787  157E  31B4  24C3  3191   	fcall	PL106	;call to abstracted procedure
 19788  1581  085C               	movf	(_step_02_load_percent+3)^(0+256),w
 19789  1582  0020               	movlb	0	; select bank0
 19790  1583  00B7               	movwf	___flmul@f1+3
 19791  1584  0022               	movlb	2	; select bank2
 19792  1585  085B               	movf	(_step_02_load_percent+2)^(0+256),w
 19793  1586  0020               	movlb	0	; select bank0
 19794  1587  00B6               	movwf	___flmul@f1+2
 19795  1588  0022               	movlb	2	; select bank2
 19796  1589  085A               	movf	(_step_02_load_percent+1)^(0+256),w
 19797  158A  0020               	movlb	0	; select bank0
 19798  158B  00B5               	movwf	___flmul@f1+1
 19799  158C  0022               	movlb	2	; select bank2
 19800  158D  0859               	movf	_step_02_load_percent^(0+256),w
 19801  158E  2DD0               	goto	L38
 19802  158F                     l17806:	
 19803                           ;task.c: 854: }
 19804                           
 19805                           
 19806                           ;task.c: 855: else if(Adjust_Pout_Flag==0x03)
 19807  158F  0832               	movf	_Adjust_Pout_Flag^(0+128),w
 19808  1590  3A03               	xorlw	3
 19809  1591  1D03               	skipz
 19810  1592  2DA5               	goto	l17810
 19811                           
 19812                           ;task.c: 856: {
 19813                           ;task.c: 857: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 19814  1593  3042               	movlw	66
 19815  1594  31B4  24C3  3191   	fcall	PL106	;call to abstracted procedure
 19816  1597  0860               	movf	(_step_03_load_percent+3)^(0+256),w
 19817  1598  0020               	movlb	0	; select bank0
 19818  1599  00B7               	movwf	___flmul@f1+3
 19819  159A  0022               	movlb	2	; select bank2
 19820  159B  085F               	movf	(_step_03_load_percent+2)^(0+256),w
 19821  159C  0020               	movlb	0	; select bank0
 19822  159D  00B6               	movwf	___flmul@f1+2
 19823  159E  0022               	movlb	2	; select bank2
 19824  159F  085E               	movf	(_step_03_load_percent+1)^(0+256),w
 19825  15A0  0020               	movlb	0	; select bank0
 19826  15A1  00B5               	movwf	___flmul@f1+1
 19827  15A2  0022               	movlb	2	; select bank2
 19828  15A3  085D               	movf	_step_03_load_percent^(0+256),w
 19829  15A4  2DD0               	goto	L38
 19830  15A5                     l17810:	
 19831                           ;task.c: 858: }
 19832                           
 19833                           
 19834                           ;task.c: 859: else if(Adjust_Pout_Flag==0x04)
 19835  15A5  0832               	movf	_Adjust_Pout_Flag^(0+128),w
 19836  15A6  3A04               	xorlw	4
 19837  15A7  1D03               	skipz
 19838  15A8  2DBB               	goto	l17814
 19839                           
 19840                           ;task.c: 860: {
 19841                           ;task.c: 861: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 19842  15A9  3042               	movlw	66
 19843  15AA  31B4  24C3  3191   	fcall	PL106	;call to abstracted procedure
 19844  15AD  0864               	movf	(_step_04_load_percent+3)^(0+256),w
 19845  15AE  0020               	movlb	0	; select bank0
 19846  15AF  00B7               	movwf	___flmul@f1+3
 19847  15B0  0022               	movlb	2	; select bank2
 19848  15B1  0863               	movf	(_step_04_load_percent+2)^(0+256),w
 19849  15B2  0020               	movlb	0	; select bank0
 19850  15B3  00B6               	movwf	___flmul@f1+2
 19851  15B4  0022               	movlb	2	; select bank2
 19852  15B5  0862               	movf	(_step_04_load_percent+1)^(0+256),w
 19853  15B6  0020               	movlb	0	; select bank0
 19854  15B7  00B5               	movwf	___flmul@f1+1
 19855  15B8  0022               	movlb	2	; select bank2
 19856  15B9  0861               	movf	_step_04_load_percent^(0+256),w
 19857  15BA  2DD0               	goto	L38
 19858  15BB                     l17814:	
 19859                           ;task.c: 862: }
 19860                           
 19861                           
 19862                           ;task.c: 863: else if(Adjust_Pout_Flag==0x05)
 19863  15BB  0832               	movf	_Adjust_Pout_Flag^(0+128),w
 19864  15BC  3A05               	xorlw	5
 19865  15BD  1D03               	skipz
 19866  15BE  2DE3               	goto	l17818
 19867                           
 19868                           ;task.c: 864: {
 19869                           ;task.c: 865: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 19870  15BF  3042               	movlw	66
 19871  15C0  31B4  24C3  3191   	fcall	PL106	;call to abstracted procedure
 19872  15C3  0868               	movf	(_step_05_load_percent+3)^(0+256),w
 19873  15C4  0020               	movlb	0	; select bank0
 19874  15C5  00B7               	movwf	___flmul@f1+3
 19875  15C6  0022               	movlb	2	; select bank2
 19876  15C7  0867               	movf	(_step_05_load_percent+2)^(0+256),w
 19877  15C8  0020               	movlb	0	; select bank0
 19878  15C9  00B6               	movwf	___flmul@f1+2
 19879  15CA  0022               	movlb	2	; select bank2
 19880  15CB  0866               	movf	(_step_05_load_percent+1)^(0+256),w
 19881  15CC  0020               	movlb	0	; select bank0
 19882  15CD  00B5               	movwf	___flmul@f1+1
 19883  15CE  0022               	movlb	2	; select bank2
 19884  15CF  0865               	movf	_step_05_load_percent^(0+256),w
 19885  15D0                     L38:	
 19886  15D0  0020               	movlb	0	; select bank0
 19887  15D1  31B4  24FE  3191   	fcall	PL128	;call to abstracted procedure
 19888  15D4  0020               	movlb	0	; select bank0
 19889  15D5  00B8               	movwf	___flmul@f2
 19890  15D6  318E  2607  3191   	fcall	___flmul
 19891  15D9  31B4  2460  3191   	fcall	PL82	;call to abstracted procedure
 19892  15DC  31A6  26E5  3191   	fcall	___fldiv
 19893  15DF  31B5  250E  3191   	fcall	PL130	;call to abstracted procedure
 19894                           
 19895                           ;task.c: 866: }
 19896  15E2  2DEA               	goto	l17822
 19897  15E3                     l17818:	
 19898                           
 19899                           ;task.c: 867: else if(Adjust_Pout_Flag==0x00)
 19900  15E3  08B2               	movf	_Adjust_Pout_Flag^(0+128),f
 19901  15E4  1D03               	skipz
 19902  15E5  2DEA               	goto	l17822
 19903                           
 19904                           ;task.c: 868: {
 19905                           ;task.c: 869: PID_CC_discharge.SetPoint =0;
 19906  15E6  0023               	movlb	3	; select bank3
 19907  15E7  31B5  2596  3191   	fcall	PL256	;call to abstracted procedure
 19908  15EA                     l17822:	
 19909                           
 19910                           ;task.c: 870: }
 19911                           ;task.c: 872: }
 19912                           ;task.c: 874: if(voltage_adjust_index==0x01)
 19913  15EA  0021               	movlb	1	; select bank1
 19914  15EB  0B6C               	decfsz	_voltage_adjust_index^(0+128),w
 19915  15EC  2DF5               	goto	l17826
 19916                           
 19917                           ;task.c: 875: {
 19918                           ;task.c: 876: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*1.0;
 19919  15ED  303F               	movlw	63
 19920  15EE  0020               	movlb	0	; select bank0
 19921  15EF  00B7               	movwf	___flmul@f1+3
 19922  15F0  3080               	movlw	128
 19923  15F1  00B6               	movwf	___flmul@f1+2
 19924  15F2  01B5               	clrf	___flmul@f1+1
 19925  15F3  01B4               	clrf	___flmul@f1
 19926  15F4  2E29               	goto	L40
 19927  15F5                     l17826:	
 19928                           ;task.c: 877: }
 19929                           
 19930                           
 19931                           ;task.c: 878: else if(voltage_adjust_index==0x02)
 19932  15F5  086C               	movf	_voltage_adjust_index^(0+128),w
 19933  15F6  3A02               	xorlw	2
 19934  15F7  1D03               	skipz
 19935  15F8  2E02               	goto	l17830
 19936                           
 19937                           ;task.c: 879: {
 19938                           ;task.c: 880: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.60;
 19939  15F9  303F               	movlw	63
 19940  15FA  0020               	movlb	0	; select bank0
 19941  15FB  00B7               	movwf	___flmul@f1+3
 19942  15FC  3019               	movlw	25
 19943  15FD  00B6               	movwf	___flmul@f1+2
 19944  15FE  3099               	movlw	153
 19945  15FF  00B5               	movwf	___flmul@f1+1
 19946  1600  309A               	movlw	154
 19947  1601  2E28               	goto	L33
 19948  1602                     l17830:	
 19949                           ;task.c: 881: }
 19950                           
 19951                           
 19952                           ;task.c: 882: else if(voltage_adjust_index==0x03)
 19953  1602  086C               	movf	_voltage_adjust_index^(0+128),w
 19954  1603  3A03               	xorlw	3
 19955  1604  1D03               	skipz
 19956  1605  2E0B               	goto	l17834
 19957                           
 19958                           ;task.c: 883: {
 19959                           ;task.c: 884: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.35;
 19960  1606  303E               	movlw	62
 19961  1607  31B5  257F  3191   	fcall	PL234	;call to abstracted procedure
 19962  160A  2E28               	goto	L33
 19963  160B                     l17834:	
 19964                           ;task.c: 885: }
 19965                           
 19966                           
 19967                           ;task.c: 886: else if(voltage_adjust_index==0x04)
 19968  160B  086C               	movf	_voltage_adjust_index^(0+128),w
 19969  160C  3A04               	xorlw	4
 19970  160D  1D03               	skipz
 19971  160E  2E14               	goto	l17838
 19972                           
 19973                           ;task.c: 887: {
 19974                           ;task.c: 888: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.20;
 19975  160F  303E               	movlw	62
 19976  1610  31B5  2586  3191   	fcall	PL238	;call to abstracted procedure
 19977  1613  2E1D               	goto	L41
 19978  1614                     l17838:	
 19979                           ;task.c: 889: }
 19980                           
 19981                           
 19982                           ;task.c: 890: else if(voltage_adjust_index==0x05)
 19983  1614  086C               	movf	_voltage_adjust_index^(0+128),w
 19984  1615  3A05               	xorlw	5
 19985  1616  1D03               	skipz
 19986  1617  2E20               	goto	l17842
 19987                           
 19988                           ;task.c: 891: {
 19989                           ;task.c: 892: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.10;
 19990  1618  303D               	movlw	61
 19991  1619  0020               	movlb	0	; select bank0
 19992  161A  00B7               	movwf	___flmul@f1+3
 19993  161B  30CC               	movlw	204
 19994  161C  00B6               	movwf	___flmul@f1+2
 19995  161D                     L41:	
 19996  161D  00B5               	movwf	___flmul@f1+1
 19997  161E  30CD               	movlw	205
 19998  161F  2E28               	goto	L33
 19999  1620                     l17842:	
 20000                           ;task.c: 893: }
 20001                           
 20002                           
 20003                           ;task.c: 894: else if(voltage_adjust_index==0x06)
 20004  1620  086C               	movf	_voltage_adjust_index^(0+128),w
 20005  1621  3A06               	xorlw	6
 20006  1622  1D03               	skipz
 20007  1623  2E34               	goto	l17846
 20008                           
 20009                           ;task.c: 895: {
 20010                           ;task.c: 896: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.03;
 20011  1624  303C               	movlw	60
 20012  1625  31B5  2565  3191   	fcall	PL210	;call to abstracted procedure
 20013  1628                     L33:	
 20014  1628  00B4               	movwf	___flmul@f1
 20015  1629                     L40:	
 20016  1629  31B4  2408  3191   	fcall	PL70	;call to abstracted procedure
 20017  162C  0020               	movlb	0	; select bank0
 20018  162D  00B8               	movwf	___flmul@f2
 20019  162E  318E  2607  3191   	fcall	___flmul
 20020  1631  31B3  239C  3191   	fcall	PL18	;call to abstracted procedure
 20021  1634                     l17846:	
 20022                           
 20023                           ;task.c: 897: }
 20024                           ;task.c: 899: if(mcu_temp_index==0x01)
 20025  1634  0021               	movlb	1	; select bank1
 20026  1635  0B39               	decfsz	_mcu_temp_index^(0+128),w
 20027  1636  2E3C               	goto	l17850
 20028                           
 20029                           ;task.c: 900: {
 20030                           ;task.c: 901: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20031  1637  303F               	movlw	63
 20032  1638  31B5  258B  3191   	fcall	PL240	;call to abstracted procedure
 20033  163B  2E47               	goto	L28
 20034  163C                     l17850:	
 20035                           ;task.c: 902: }
 20036                           
 20037                           
 20038                           ;task.c: 903: else if(mcu_temp_index==0x02)
 20039  163C  0839               	movf	_mcu_temp_index^(0+128),w
 20040  163D  3A02               	xorlw	2
 20041  163E  1D03               	skipz
 20042  163F  2E53               	goto	l17854
 20043                           
 20044                           ;task.c: 904: {
 20045                           ;task.c: 905: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.2;
 20046  1640  303E               	movlw	62
 20047  1641  31B5  2586  3191   	fcall	PL238	;call to abstracted procedure
 20048  1644  00B5               	movwf	___flmul@f1+1
 20049  1645  30CD               	movlw	205
 20050  1646  00B4               	movwf	___flmul@f1
 20051  1647                     L28:	
 20052  1647  31B4  2408  3191   	fcall	PL70	;call to abstracted procedure
 20053  164A  0020               	movlb	0	; select bank0
 20054  164B  00B8               	movwf	___flmul@f2
 20055  164C  318E  2607  3191   	fcall	___flmul
 20056  164F  31B3  239C  3191   	fcall	PL18	;call to abstracted procedure
 20057                           
 20058                           ;task.c: 906: }
 20059  1652  2E5B               	goto	l17858
 20060  1653                     l17854:	
 20061                           
 20062                           ;task.c: 907: else if(mcu_temp_index==0x03)
 20063  1653  0839               	movf	_mcu_temp_index^(0+128),w
 20064  1654  3A03               	xorlw	3
 20065  1655  1D03               	skipz
 20066  1656  2E5B               	goto	l17858
 20067                           
 20068                           ;task.c: 908: {
 20069                           ;task.c: 909: PID_CC_discharge.SetPoint =0;
 20070  1657  0023               	movlb	3	; select bank3
 20071  1658  31B5  2596  3191   	fcall	PL256	;call to abstracted procedure
 20072  165B                     l17858:	
 20073                           
 20074                           ;task.c: 910: }
 20075                           ;task.c: 913: if(light_mode==0x00 && work_mode==0x00)
 20076  165B  0021               	movlb	1	; select bank1
 20077  165C  08B8               	movf	_light_mode^(0+128),f
 20078  165D  1903               	btfsc	3,2
 20079  165E  08BD               	movf	_work_mode^(0+128),f
 20080  165F  1903               	btfsc	3,2
 20081  1660  2E77               	goto	L52
 20082                           
 20083                           ;task.c: 954: else if(light_mode==0x01 && work_mode==0x00)
 20084                           
 20085                           ;task.c: 946: else
 20086                           ;task.c: 947: {
 20087                           ;task.c: 948: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5*0.7;
 20088                           
 20089                           ;task.c: 945: }
 20090                           
 20091                           ;task.c: 943: {
 20092                           ;task.c: 944: PID_CC_discharge.SetPoint = data_cc_var*0.01*0.7;
 20093                           
 20094                           ;task.c: 940: else
 20095                           ;task.c: 941: {
 20096                           ;task.c: 942: if(voltage_adjust_index==0x05)
 20097                           
 20098                           ;task.c: 935: else
 20099                           ;task.c: 936: {
 20100                           ;task.c: 937: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20101                           
 20102                           ;task.c: 934: }
 20103                           
 20104                           ;task.c: 932: {
 20105                           ;task.c: 933: PID_CC_discharge.SetPoint = data_cc_var*0.01;
 20106                           
 20107                           ;task.c: 930: {
 20108                           ;task.c: 931: if(voltage_adjust_index==0x05)
 20109                           
 20110                           ;task.c: 927: else
 20111                           ;task.c: 928: {
 20112                           ;task.c: 929: if(have_person1_flag==0x01)
 20113                           
 20114                           ;task.c: 921: else
 20115                           ;task.c: 922: {
 20116                           ;task.c: 923: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20117                           
 20118                           ;task.c: 920: }
 20119                           
 20120                           ;task.c: 918: {
 20121                           ;task.c: 919: PID_CC_discharge.SetPoint = data_cc_var*0.01;
 20122                           
 20123                           ;task.c: 916: {
 20124                           ;task.c: 917: if(voltage_adjust_index==0x05)
 20125                           
 20126                           ;task.c: 914: {
 20127                           ;task.c: 915: if(ho_cnt==0 && mi_cnt<30)
 20128  1661  0B38               	decfsz	_light_mode^(0+128),w
 20129  1662  2E6A               	goto	l17896
 20130  1663  08BD               	movf	_work_mode^(0+128),f
 20131  1664  1D03               	skipz
 20132  1665  2E6A               	goto	l17896
 20133  1666                     L39:	
 20134                           
 20135                           ;task.c: 955: {
 20136                           ;task.c: 956: if(have_person1_flag==0x01)
 20137  1666  0B36               	decfsz	_have_person1_flag^(0+128),w
 20138  1667  2EB9               	goto	l17936
 20139                           
 20140                           ;task.c: 957: {
 20141                           ;task.c: 958: __nop();
 20142  1668  0000               	nop
 20143                           
 20144                           ;task.c: 959: }
 20145  1669  2EC8               	goto	l17938
 20146  166A                     l17896:	
 20147                           ;task.c: 960: else
 20148                           ;task.c: 961: {
 20149                           ;task.c: 962: PID_CC_discharge.SetPoint = data_cc_var*0.03;
 20150                           
 20151                           
 20152                           ;task.c: 965: else if(light_mode==0x02 && work_mode==0x00)
 20153  166A  0838               	movf	_light_mode^(0+128),w
 20154  166B  3A02               	xorlw	2
 20155  166C  1D03               	skipz
 20156  166D  2EC8               	goto	l17938
 20157  166E  08BD               	movf	_work_mode^(0+128),f
 20158  166F  1D03               	skipz
 20159  1670  2EC8               	goto	l17938
 20160                           
 20161                           ;task.c: 966: {
 20162                           ;task.c: 967: if(Adjust_Pout_Flag==0x01 && voltage_adjust_index<0x04)
 20163  1671  0B32               	decfsz	_Adjust_Pout_Flag^(0+128),w
 20164  1672  2EB0               	goto	l17928
 20165  1673  3004               	movlw	4
 20166  1674  026C               	subwf	_voltage_adjust_index^(0+128),w
 20167  1675  1803               	skipnc
 20168  1676  2EB0               	goto	l17928
 20169  1677                     L52:	
 20170                           
 20171                           ;task.c: 968: {
 20172                           ;task.c: 969: if(ho_cnt==0 && mi_cnt<30)
 20173  1677  087D               	movf	_ho_cnt+1,w
 20174  1678  047C               	iorwf	_ho_cnt,w
 20175  1679  1D03               	skipz
 20176  167A  2E85               	goto	l17914
 20177  167B  3000               	movlw	0
 20178  167C  0022               	movlb	2	; select bank2
 20179  167D  0227               	subwf	(_mi_cnt+1)^(0+256),w
 20180  167E  301E               	movlw	30
 20181  167F  1903               	skipnz
 20182  1680  0226               	subwf	_mi_cnt^(0+256),w
 20183  1681  1803               	skipnc
 20184  1682  2E85               	goto	l17914
 20185                           
 20186                           ;task.c: 970: {
 20187                           ;task.c: 971: if(voltage_adjust_index==0x05)
 20188  1683  0021               	movlb	1	; select bank1
 20189  1684  2E88               	goto	L48
 20190  1685                     l17914:	
 20191                           ;task.c: 975: else
 20192                           ;task.c: 976: {
 20193                           ;task.c: 977: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20194                           
 20195                           ;task.c: 974: }
 20196                           
 20197                           ;task.c: 972: {
 20198                           ;task.c: 973: PID_CC_discharge.SetPoint = data_cc_var*0.01;
 20199                           
 20200                           
 20201                           ;task.c: 981: else
 20202                           ;task.c: 982: {
 20203                           ;task.c: 983: if(have_person1_flag==0x01)
 20204  1685  0021               	movlb	1	; select bank1
 20205  1686  0B36               	decfsz	_have_person1_flag^(0+128),w
 20206  1687  2E9A               	goto	l17922
 20207  1688                     L48:	
 20208                           
 20209                           ;task.c: 984: {
 20210                           ;task.c: 985: if(voltage_adjust_index==0x05)
 20211  1688  086C               	movf	_voltage_adjust_index^(0+128),w
 20212  1689  3A05               	xorlw	5
 20213  168A  1D03               	skipz
 20214  168B  2E95               	goto	l17920
 20215                           
 20216                           ;task.c: 986: {
 20217                           ;task.c: 987: PID_CC_discharge.SetPoint = data_cc_var*0.01;
 20218  168C  303C               	movlw	60
 20219  168D  0020               	movlb	0	; select bank0
 20220  168E  00B7               	movwf	___flmul@f1+3
 20221  168F  3023               	movlw	35
 20222  1690  00B6               	movwf	___flmul@f1+2
 20223  1691  30D7               	movlw	215
 20224  1692  00B5               	movwf	___flmul@f1+1
 20225  1693  300A               	movlw	10
 20226  1694  2EBD               	goto	L24
 20227  1695                     l17920:	
 20228                           ;task.c: 988: }
 20229                           
 20230                           
 20231                           ;task.c: 989: else
 20232                           ;task.c: 990: {
 20233                           ;task.c: 991: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20234  1695  303F               	movlw	63
 20235  1696  31B5  258B  3191   	fcall	PL240	;call to abstracted procedure
 20236  1699  2EAC               	goto	L32
 20237  169A                     l17922:	
 20238                           
 20239                           ;task.c: 994: else
 20240                           ;task.c: 995: {
 20241                           ;task.c: 996: if(voltage_adjust_index==0x05)
 20242  169A  086C               	movf	_voltage_adjust_index^(0+128),w
 20243  169B  3A05               	xorlw	5
 20244  169C  1D03               	skipz
 20245  169D  2EA7               	goto	l17926
 20246                           
 20247                           ;task.c: 997: {
 20248                           ;task.c: 998: PID_CC_discharge.SetPoint = data_cc_var*0.01*0.7;
 20249  169E  303B               	movlw	59
 20250  169F  0020               	movlb	0	; select bank0
 20251  16A0  00B7               	movwf	___flmul@f1+3
 20252  16A1  30E5               	movlw	229
 20253  16A2  00B6               	movwf	___flmul@f1+2
 20254  16A3  3060               	movlw	96
 20255  16A4  00B5               	movwf	___flmul@f1+1
 20256  16A5  3042               	movlw	66
 20257  16A6  2EBD               	goto	L24
 20258  16A7                     l17926:	
 20259                           ;task.c: 999: }
 20260                           
 20261                           
 20262                           ;task.c: 1000: else
 20263                           ;task.c: 1001: {
 20264                           ;task.c: 1002: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5*0.7;
 20265  16A7  303E               	movlw	62
 20266  16A8  31B5  257F  3191   	fcall	PL234	;call to abstracted procedure
 20267  16AB  00B4               	movwf	___flmul@f1
 20268  16AC                     L32:	
 20269  16AC  31B4  2408  3191   	fcall	PL70	;call to abstracted procedure
 20270  16AF  2EC0               	goto	L25
 20271  16B0                     l17928:	
 20272                           
 20273                           ;task.c: 1007: else if(Adjust_Pout_Flag>=0x02 || voltage_adjust_index>=0x04)
 20274  16B0  3002               	movlw	2
 20275  16B1  0232               	subwf	_Adjust_Pout_Flag^(0+128),w
 20276  16B2  1803               	skipnc
 20277  16B3  2E66               	goto	L39
 20278  16B4  3004               	movlw	4
 20279  16B5  026C               	subwf	_voltage_adjust_index^(0+128),w
 20280  16B6  1C03               	skipc
 20281  16B7  2EC8               	goto	l17938
 20282  16B8  2E66               	goto	L39
 20283  16B9                     l17936:	
 20284                           ;task.c: 1008: {
 20285                           ;task.c: 1009: if(have_person1_flag==0x01)
 20286                           
 20287                           
 20288                           ;task.c: 1013: else
 20289                           ;task.c: 1014: {
 20290                           ;task.c: 1015: PID_CC_discharge.SetPoint = data_cc_var*0.03;
 20291  16B9  303C               	movlw	60
 20292  16BA  31B5  2565  3191   	fcall	PL210	;call to abstracted procedure
 20293  16BD                     L24:	
 20294  16BD  31B4  24FE  3191   	fcall	PL128	;call to abstracted procedure
 20295  16C0                     L25:	
 20296  16C0  0020               	movlb	0	; select bank0
 20297  16C1  00B8               	movwf	___flmul@f2
 20298  16C2  318E  2607  3191   	fcall	___flmul
 20299  16C5  31B3  239C  3191   	fcall	PL18	;call to abstracted procedure
 20300  16C8                     l17938:	
 20301                           
 20302                           ;task.c: 1016: }
 20303                           ;task.c: 1017: }
 20304                           ;task.c: 1018: }
 20305                           ;task.c: 1020: if(led_out_ctrl==0x01 && work_mode==0x00)
 20306  16C8  0021               	movlb	1	; select bank1
 20307  16C9  0B37               	decfsz	_led_out_ctrl^(0+128),w
 20308  16CA  2ED2               	goto	l1507
 20309  16CB  08BD               	movf	_work_mode^(0+128),f
 20310  16CC  1D03               	skipz
 20311  16CD  2ED2               	goto	l1507
 20312                           
 20313                           ;task.c: 1021: {
 20314                           ;task.c: 1022: PID_CC_discharge.SetPoint = 0;
 20315  16CE  0023               	movlb	3	; select bank3
 20316  16CF  31B5  2596  3191   	fcall	PL256	;call to abstracted procedure
 20317  16D2                     l1507:	
 20318                           
 20319                           ;task.c: 1023: }
 20320                           ;task.c: 1025: pid_index = 0x01;
 20321  16D2  0022               	movlb	2	; select bank2
 20322  16D3  30C7               	movlw	low _PID_CC_discharge
 20323  16D4  01C1               	clrf	_pid_index^(0+256)
 20324  16D5  0AC1               	incf	_pid_index^(0+256),f
 20325                           
 20326                           ;task.c: 1027: PWM_I=pid_calc(&PID_CC_discharge,discharge_current_value);
 20327  16D6  0020               	movlb	0	; select bank0
 20328  16D7  00E6               	movwf	pid_calc@pp
 20329  16D8  3001               	movlw	high _PID_CC_discharge
 20330  16D9  00E7               	movwf	pid_calc@pp+1
 20331  16DA  0021               	movlb	1	; select bank1
 20332  16DB  082B               	movf	(_discharge_current_value+1)^(0+128),w
 20333  16DC  0020               	movlb	0	; select bank0
 20334  16DD  00E9               	movwf	pid_calc@NowPoint+1
 20335  16DE  0021               	movlb	1	; select bank1
 20336  16DF  082A               	movf	_discharge_current_value^(0+128),w
 20337  16E0  0020               	movlb	0	; select bank0
 20338  16E1  00E8               	movwf	pid_calc@NowPoint
 20339  16E2  319B  235A  3191   	fcall	_pid_calc
 20340  16E5  0869               	movf	?_pid_calc+3,w
 20341  16E6  0025               	movlb	5	; select bank5
 20342  16E7  00A3               	movwf	(_PWM_I+3)^(0+640)
 20343  16E8  0020               	movlb	0	; select bank0
 20344  16E9  0868               	movf	?_pid_calc+2,w
 20345  16EA  0025               	movlb	5	; select bank5
 20346  16EB  00A2               	movwf	(_PWM_I+2)^(0+640)
 20347  16EC  0020               	movlb	0	; select bank0
 20348  16ED  0867               	movf	?_pid_calc+1,w
 20349  16EE  0025               	movlb	5	; select bank5
 20350  16EF  00A1               	movwf	(_PWM_I+1)^(0+640)
 20351  16F0  0020               	movlb	0	; select bank0
 20352  16F1  0866               	movf	?_pid_calc,w
 20353  16F2  0025               	movlb	5	; select bank5
 20354  16F3  00A0               	movwf	_PWM_I^(0+640)
 20355                           
 20356                           ;task.c: 1029: PWM = PWM+PWM_I;
 20357  16F4  0823               	movf	(_PWM_I+3)^(0+640),w
 20358  16F5  0020               	movlb	0	; select bank0
 20359  16F6  00CA               	movwf	___fladd@f1+3
 20360  16F7  0025               	movlb	5	; select bank5
 20361  16F8  0822               	movf	(_PWM_I+2)^(0+640),w
 20362  16F9  0020               	movlb	0	; select bank0
 20363  16FA  00C9               	movwf	___fladd@f1+2
 20364  16FB  0025               	movlb	5	; select bank5
 20365  16FC  0821               	movf	(_PWM_I+1)^(0+640),w
 20366  16FD  0020               	movlb	0	; select bank0
 20367  16FE  00C8               	movwf	___fladd@f1+1
 20368  16FF  0025               	movlb	5	; select bank5
 20369  1700  0820               	movf	_PWM_I^(0+640),w
 20370  1701  0020               	movlb	0	; select bank0
 20371  1702  00C7               	movwf	___fladd@f1
 20372  1703  0021               	movlb	1	; select bank1
 20373  1704  0823               	movf	(_PWM+3)^(0+128),w
 20374  1705  0020               	movlb	0	; select bank0
 20375  1706  00CE               	movwf	___fladd@f2+3
 20376  1707  0021               	movlb	1	; select bank1
 20377  1708  0822               	movf	(_PWM+2)^(0+128),w
 20378  1709  0020               	movlb	0	; select bank0
 20379  170A  00CD               	movwf	___fladd@f2+2
 20380  170B  0021               	movlb	1	; select bank1
 20381  170C  0821               	movf	(_PWM+1)^(0+128),w
 20382  170D  0020               	movlb	0	; select bank0
 20383  170E  00CC               	movwf	___fladd@f2+1
 20384  170F  0021               	movlb	1	; select bank1
 20385  1710  0820               	movf	_PWM^(0+128),w
 20386  1711  0020               	movlb	0	; select bank0
 20387  1712  00CB               	movwf	___fladd@f2
 20388  1713  318C  24C6  3191   	fcall	___fladd
 20389  1716  084A               	movf	?___fladd+3,w
 20390  1717  0021               	movlb	1	; select bank1
 20391  1718  00A3               	movwf	(_PWM+3)^(0+128)
 20392  1719  0020               	movlb	0	; select bank0
 20393  171A  0849               	movf	?___fladd+2,w
 20394  171B  0021               	movlb	1	; select bank1
 20395  171C  00A2               	movwf	(_PWM+2)^(0+128)
 20396  171D  0020               	movlb	0	; select bank0
 20397  171E  0848               	movf	?___fladd+1,w
 20398  171F  0021               	movlb	1	; select bank1
 20399  1720  00A1               	movwf	(_PWM+1)^(0+128)
 20400  1721  0020               	movlb	0	; select bank0
 20401  1722  0847               	movf	?___fladd,w
 20402  1723  0021               	movlb	1	; select bank1
 20403  1724  00A0               	movwf	_PWM^(0+128)
 20404                           
 20405                           ;task.c: 1031: if( PWM>=900)
 20406  1725  0823               	movf	(_PWM+3)^(0+128),w
 20407  1726  0020               	movlb	0	; select bank0
 20408  1727  00DD               	movwf	___flge@ff1+3
 20409  1728  0021               	movlb	1	; select bank1
 20410  1729  0822               	movf	(_PWM+2)^(0+128),w
 20411  172A  0020               	movlb	0	; select bank0
 20412  172B  00DC               	movwf	___flge@ff1+2
 20413  172C  0021               	movlb	1	; select bank1
 20414  172D  0821               	movf	(_PWM+1)^(0+128),w
 20415  172E  0020               	movlb	0	; select bank0
 20416  172F  00DB               	movwf	___flge@ff1+1
 20417  1730  0021               	movlb	1	; select bank1
 20418  1731  0820               	movf	_PWM^(0+128),w
 20419  1732  0020               	movlb	0	; select bank0
 20420  1733  00DA               	movwf	___flge@ff1
 20421  1734  3044               	movlw	68
 20422  1735  00E1               	movwf	___flge@ff2+3
 20423  1736  3061               	movlw	97
 20424  1737  00E0               	movwf	___flge@ff2+2
 20425  1738  01DF               	clrf	___flge@ff2+1
 20426  1739  01DE               	clrf	___flge@ff2
 20427  173A  319E  2658  3191   	fcall	___flge
 20428  173D  1C03               	btfss	3,0
 20429  173E  2F44               	goto	l17952
 20430                           
 20431                           ;task.c: 1032: {
 20432                           ;task.c: 1033: PWM=900;
 20433  173F  3044               	movlw	68
 20434  1740  0021               	movlb	1	; select bank1
 20435  1741  00A3               	movwf	(_PWM+3)^(0+128)
 20436  1742  3061               	movlw	97
 20437  1743  2F63               	goto	L26
 20438  1744                     l17952:	
 20439                           ;task.c: 1034: }
 20440                           
 20441                           
 20442                           ;task.c: 1035: else if(PWM<=5)
 20443  1744  3040               	movlw	64
 20444  1745  00DD               	movwf	___flge@ff1+3
 20445  1746  30A0               	movlw	160
 20446  1747  00DC               	movwf	___flge@ff1+2
 20447  1748  01DB               	clrf	___flge@ff1+1
 20448  1749  01DA               	clrf	___flge@ff1
 20449  174A  0021               	movlb	1	; select bank1
 20450  174B  0823               	movf	(_PWM+3)^(0+128),w
 20451  174C  0020               	movlb	0	; select bank0
 20452  174D  00E1               	movwf	___flge@ff2+3
 20453  174E  0021               	movlb	1	; select bank1
 20454  174F  0822               	movf	(_PWM+2)^(0+128),w
 20455  1750  0020               	movlb	0	; select bank0
 20456  1751  00E0               	movwf	___flge@ff2+2
 20457  1752  0021               	movlb	1	; select bank1
 20458  1753  0821               	movf	(_PWM+1)^(0+128),w
 20459  1754  0020               	movlb	0	; select bank0
 20460  1755  00DF               	movwf	___flge@ff2+1
 20461  1756  0021               	movlb	1	; select bank1
 20462  1757  0820               	movf	_PWM^(0+128),w
 20463  1758  0020               	movlb	0	; select bank0
 20464  1759  00DE               	movwf	___flge@ff2
 20465  175A  319E  2658  3191   	fcall	___flge
 20466  175D  1C03               	btfss	3,0
 20467  175E  2F66               	goto	l17956
 20468                           
 20469                           ;task.c: 1036: {
 20470                           ;task.c: 1037: PWM=5;
 20471  175F  3040               	movlw	64
 20472  1760  0021               	movlb	1	; select bank1
 20473  1761  00A3               	movwf	(_PWM+3)^(0+128)
 20474  1762  30A0               	movlw	160
 20475  1763                     L26:	
 20476  1763  00A2               	movwf	(_PWM+2)^(0+128)
 20477  1764  01A1               	clrf	(_PWM+1)^(0+128)
 20478  1765  01A0               	clrf	_PWM^(0+128)
 20479  1766                     l17956:	
 20480                           
 20481                           ;task.c: 1038: }
 20482                           ;task.c: 1040: bost_pwm_value = (unsigned int)PWM;
 20483  1766  0021               	movlb	1	; select bank1
 20484  1767  0823               	movf	(_PWM+3)^(0+128),w
 20485  1768  0020               	movlb	0	; select bank0
 20486  1769  00DD               	movwf	___fltol@f1+3
 20487  176A  0021               	movlb	1	; select bank1
 20488  176B  0822               	movf	(_PWM+2)^(0+128),w
 20489  176C  0020               	movlb	0	; select bank0
 20490  176D  00DC               	movwf	___fltol@f1+2
 20491  176E  0021               	movlb	1	; select bank1
 20492  176F  0821               	movf	(_PWM+1)^(0+128),w
 20493  1770  0020               	movlb	0	; select bank0
 20494  1771  00DB               	movwf	___fltol@f1+1
 20495  1772  0021               	movlb	1	; select bank1
 20496  1773  0820               	movf	_PWM^(0+128),w
 20497  1774  0020               	movlb	0	; select bank0
 20498  1775  00DA               	movwf	___fltol@f1
 20499  1776  319E  2698  3191   	fcall	___fltol
 20500  1779  085B               	movf	?___fltol+1,w
 20501  177A  0021               	movlb	1	; select bank1
 20502  177B  00A5               	movwf	(_bost_pwm_value+1)^(0+128)
 20503  177C  0020               	movlb	0	; select bank0
 20504  177D  085A               	movf	?___fltol,w
 20505  177E  0021               	movlb	1	; select bank1
 20506  177F  00A4               	movwf	_bost_pwm_value^(0+128)
 20507                           
 20508                           ;task.c: 1042: if(PID_CC_discharge.SetPoint==0)
 20509  1780  0023               	movlb	3	; select bank3
 20510  1781  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 20511  1782  0449               	iorwf	(_PID_CC_discharge+2)^(0+384),w
 20512  1783  0448               	iorwf	(_PID_CC_discharge+1)^(0+384),w
 20513  1784  0447               	iorwf	_PID_CC_discharge^(0+384),w
 20514  1785  1D03               	skipz
 20515  1786  2F8A               	goto	l17962
 20516                           
 20517                           ;task.c: 1043: {
 20518                           ;task.c: 1044: bost_pwm_value = 0;
 20519  1787  0021               	movlb	1	; select bank1
 20520  1788  01A4               	clrf	_bost_pwm_value^(0+128)
 20521  1789  2F9B               	goto	L27
 20522  178A                     l17962:	
 20523                           ;task.c: 1045: }
 20524                           
 20525                           
 20526                           ;task.c: 1046: else if(PID_CC_discharge.SetPoint<=1)
 20527  178A  303F               	movlw	63
 20528  178B  319F  2766  3191   	fcall	PL80	;call to abstracted procedure
 20529  178E  01DB               	clrf	___flge@ff1+1
 20530  178F  01DA               	clrf	___flge@ff1
 20531  1790  31B3  23EF  3191   	fcall	PL58	;call to abstracted procedure
 20532  1793  319E  2658  3191   	fcall	___flge
 20533  1796  1C03               	btfss	3,0
 20534  1797  2F9C               	goto	l17966
 20535                           
 20536                           ;task.c: 1047: {
 20537                           ;task.c: 1048: bost_pwm_value = 25;
 20538  1798  3019               	movlw	25
 20539  1799  0021               	movlb	1	; select bank1
 20540  179A  00A4               	movwf	_bost_pwm_value^(0+128)
 20541  179B                     L27:	
 20542  179B  01A5               	clrf	(_bost_pwm_value+1)^(0+128)
 20543  179C                     l17966:	
 20544                           
 20545                           ;task.c: 1049: }
 20546                           ;task.c: 1052: Set_Bost_Pwm_Duty(bost_pwm_value);
 20547  179C  0021               	movlb	1	; select bank1
 20548  179D  31B4  2400  3191   	fcall	PL62	;call to abstracted procedure
 20549  17A0  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 20550                           
 20551                           ;task.c: 1054: limit_power_pid_flag=0x00;
 20552  17A3  0023               	movlb	3	; select bank3
 20553  17A4  01BB               	clrf	_limit_power_pid_flag^(0+384)
 20554                           
 20555                           ;task.c: 1057: }
 20556  17A5  2FCA               	goto	l17980
 20557  17A6                     l17970:	
 20558                           
 20559                           ;task.c: 1058: else if((discharge_current_value>discharge_i_limit)&&(discharge_index==0x
      +                          02))
 20560  17A6  0025               	movlb	5	; select bank5
 20561  17A7  31B4  2430  3191   	fcall	PL74	;call to abstracted procedure
 20562  17AA  319B  2346  3191   	fcall	___lwtofl
 20563  17AD  31B3  23AC  3191   	fcall	PL20	;call to abstracted procedure
 20564  17B0  319E  2658  3191   	fcall	___flge
 20565  17B3  1803               	btfsc	3,0
 20566  17B4  2FCA               	goto	l17980
 20567  17B5  0021               	movlb	1	; select bank1
 20568  17B6  0835               	movf	_discharge_index^(0+128),w
 20569  17B7  3A02               	xorlw	2
 20570  17B8  1D03               	skipz
 20571  17B9  2FCA               	goto	l17980
 20572                           
 20573                           ;task.c: 1059: {
 20574                           ;task.c: 1060: if(bost_pwm_value>10)
 20575  17BA  3000               	movlw	0
 20576  17BB  0225               	subwf	(_bost_pwm_value+1)^(0+128),w
 20577  17BC  300B               	movlw	11
 20578  17BD  1903               	skipnz
 20579  17BE  0224               	subwf	_bost_pwm_value^(0+128),w
 20580  17BF  1C03               	skipc
 20581  17C0  2FC4               	goto	l17978
 20582                           
 20583                           ;task.c: 1061: {
 20584                           ;task.c: 1062: bost_pwm_value = bost_pwm_value-1;
 20585  17C1  30FF               	movlw	255
 20586  17C2  07A4               	addwf	_bost_pwm_value^(0+128),f
 20587  17C3  3DA5               	addwfc	(_bost_pwm_value+1)^(0+128),f
 20588  17C4                     l17978:	
 20589                           
 20590                           ;task.c: 1063: }
 20591                           ;task.c: 1065: Set_Bost_Pwm_Duty(bost_pwm_value);
 20592  17C4  31B4  2400  3191   	fcall	PL62	;call to abstracted procedure
 20593  17C7  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 20594  17CA                     l17980:	
 20595                           
 20596                           ;task.c: 1066: }
 20597                           ;task.c: 1068: battery_low_time_count=0;
 20598  17CA  0024               	movlb	4	; select bank4
 20599  17CB  01BE               	clrf	_battery_low_time_count^(0+512)
 20600  17CC  01BF               	clrf	(_battery_low_time_count+1)^(0+512)
 20601                           
 20602                           ;task.c: 1070: }
 20603  17CD  2FFD               	goto	l1393
 20604  17CE                     l17982:	
 20605                           
 20606                           ;task.c: 1071: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge_index==0
      +                          x02))
 20607  17CE  31B4  247D  3191   	fcall	PL92	;call to abstracted procedure
 20608  17D1  319B  2346  3191   	fcall	___lwtofl
 20609  17D4  31B3  2393  3191   	fcall	PL16	;call to abstracted procedure
 20610  17D7  31B4  24ED  3191   	fcall	PL126	;call to abstracted procedure
 20611  17DA  319E  2658  3191   	fcall	___flge
 20612  17DD  1803               	btfsc	3,0
 20613  17DE  2FCA               	goto	l17980
 20614  17DF  0021               	movlb	1	; select bank1
 20615  17E0  0835               	movf	_discharge_index^(0+128),w
 20616  17E1  3A02               	xorlw	2
 20617  17E2  1D03               	skipz
 20618  17E3  2FCA               	goto	l17980
 20619                           
 20620                           ;task.c: 1072: {
 20621                           ;task.c: 1074: battery_low_time_count++;
 20622  17E4  0024               	movlb	4	; select bank4
 20623  17E5  0ABE               	incf	_battery_low_time_count^(0+512),f
 20624  17E6  1903               	skipnz
 20625  17E7  0ABF               	incf	(_battery_low_time_count+1)^(0+512),f
 20626                           
 20627                           ;task.c: 1076: if(battery_low_time_count>1000)
 20628  17E8  3003               	movlw	3
 20629  17E9  023F               	subwf	(_battery_low_time_count+1)^(0+512),w
 20630  17EA  30E9               	movlw	233
 20631  17EB  1903               	skipnz
 20632  17EC  023E               	subwf	_battery_low_time_count^(0+512),w
 20633  17ED  1C03               	skipc
 20634  17EE  2FFD               	goto	l1393
 20635                           
 20636                           ;task.c: 1077: {
 20637                           ;task.c: 1078: discharge_index=0x03;
 20638  17EF  3003               	movlw	3
 20639  17F0  0021               	movlb	1	; select bank1
 20640  17F1  00B5               	movwf	_discharge_index^(0+128)
 20641                           
 20642                           ;task.c: 1080: bost_pwm_value=2;
 20643  17F2  3002               	movlw	2
 20644                           
 20645                           ;task.c: 1082: Set_Bost_Pwm_Duty(bost_pwm_value);
 20646  17F3  31B3  23BF  3191   	fcall	PL48	;call to abstracted procedure
 20647  17F6  318B  2367  3191   	fcall	_Set_Bost_Pwm_Duty
 20648                           
 20649                           ;task.c: 1086: discharge_led_status=0x00;
 20650  17F9  0024               	movlb	4	; select bank4
 20651  17FA  01BE               	clrf	_battery_low_time_count^(0+512)
 20652  17FB  01BF               	clrf	(_battery_low_time_count+1)^(0+512)
 20653  17FC                     l1520:	
 20654                           ;task.c: 1088: while(1);
 20655                           
 20656  17FC  2FFC               	goto	l1520
 20657  17FD                     l1393:	
 20658                           
 20659                           ;task.c: 1095: }
 20660                           ;task.c: 1097: }
 20661                           ;task.c: 1099: handle_an10_process_flag=0x00;
 20662  17FD  0022               	movlb	2	; select bank2
 20663  17FE  01AC               	clrf	_handle_an10_process_flag^(0+256)
 20664  17FF  0008               	return
 20665  1800                     __end_of_handle_ad_loop:	


Data Sizes:
    Strings     0
    Constant    512
    Data        118
    BSS         437
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     74      77
    BANK1            80     30      77
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      80
    BANK5            80      4      80
    BANK6            80      0      28
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    pid_init@pp	PTR struct PID_VAR size(2) Largest target is 28
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), 

    pid_calc@pp	PTR struct PID_VAR size(2) Largest target is 28
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), 

    crc16@puchMsg	PTR volatile unsigned char  size(2) Largest target is 80
		 -> uart1_tx_buf(BANK7[80]), uart1_rx_buf(BANK8[80]), 

    uart_send_point	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_Bost_Pwm_Duty

Critical Paths under _main in BANK0

    _main->_Key_Menu
    _middle_init->_auto_system
    _read_param_eeprom->___fldiv
    _auto_system->___flge
    _auto_system->_eeprom_write
    _handle_uart_rx_buf->___flge
    _handle_uart_rx_buf->_eeprom_write
    ___lbtofl->___flpack
    _handle_task_process->_eeprom_write
    _handle_ad_loop->_pid_calc
    _start_ad_convert->___lwdiv
    ___lwdiv->___wmul
    _Mppt_Charge->_pid_calc
    _pid_calc->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___awtofl->___flpack
    ___lwtofl->___lwdiv
    ___fltol->___fldiv
    _application_init->___fldiv
    _pid_init->_memset
    _Key_Menu->_eeprom_write
    _eeprom_write->___fltol
    ___fldiv->___flmul
    ___fladd->___flmul
    ___flmul->___lwtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_handle_ad_loop
    _auto_system->_start_ad_convert
    _handle_ad_loop->_pid_calc
    _Mppt_Charge->_pid_calc

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_handle_ad_loop

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  428377
                           _Key_Menu
                   _application_init
                        _driver_init
                     _handle_ad_loop
                _handle_task_process
                 _handle_uart_rx_buf
                        _middle_init
 ---------------------------------------------------------------------------------
 (1) _middle_init                                          0     0      0   79703
                        _auto_system
                  _read_param_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_param_eeprom                                    2     2      0   29530
                                             58 BANK0      2     2      0
                           ___awtofl
                            ___fldiv
                            ___flmul
                           ___lbtofl
                             ___lmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              3 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _auto_system                                          4     4      0   50173
                                             70 BANK0      4     4      0
                            ___fldiv
                             ___flge
                            ___flmul
                           ___lwtofl
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (1) _handle_uart_rx_buf                                   5     5      0   67849
                                             70 BANK0      2     2      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___lbtofl
                           ___lwtofl
                             ___wmul
                              _crc16
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                             _memset
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _crc16                                                9     6      3    1132
                                              3 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 (3) ___lbtofl                                             6     1      5    2584
                                             13 BANK0      6     1      5
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _handle_task_process                                  0     0      0   41368
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           _delay_ms
                       _eeprom_write
                           _pid_init
 ---------------------------------------------------------------------------------
 (1) _handle_ad_loop                                       6     6      0  201259
                                             28 BANK1      2     2      0
                                              0 BANK5      4     4      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                    _Enable_Buck_Pwm
                        _Mppt_Charge
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtofl
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lldiv
                            ___lwdiv
                           ___lwtofl
                             ___wmul
                           _delay_ms
                           _pid_calc
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (3) _start_ad_convert                                    63    61      2    1879
                                             16 BANK0     52    50      2
                                              0 BANK1     10    10      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     703
                                              9 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     906
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     395
                                              3 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _Mppt_Charge                                          0     0      0   82938
                  _Set_Buck_Pwm_Duty
                            ___fladd
                             ___flge
                            ___fltol
                           ___lwtofl
                           _pid_calc
 ---------------------------------------------------------------------------------
 (2) _pid_calc                                            32    28      4   48005
                                             70 BANK0      4     0      4
                                              0 BANK1     28    28      0
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    6689
                                             54 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8   16470
                                             58 BANK0     12     4      8
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtofl                                             9     5      4    5015
                                             13 BANK0      5     1      4
                           ___flpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwtofl                                             4     0      4    6930
                                             16 BANK0      4     0      4
                           ___flpack
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    3377
                                             58 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Enable_Buck_Pwm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _driver_init                                          0     0      0       0
                           _Init_Ird
                           _init_adc
                     _init_interrupt
                           _init_key
                           _init_osc
                          _init_port
                           _init_pwm
                        _init_timer1
                         _init_uart1
 ---------------------------------------------------------------------------------
 (2) _init_uart1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Ird                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0   26965
                            ___fladd
                            ___fldiv
                            ___flmul
                           _pid_init
 ---------------------------------------------------------------------------------
 (2) _pid_init                                             2     0      2     778
                                             11 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     414
                                              3 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Key_Menu                                             7     3      4   11233
                                             70 BANK0      4     0      4
                                              0 BANK1      3     3      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         2     1      1    3136
                                             68 BANK0      2     1      1
                            ___fldiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2    1673
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Set_Buck_Pwm_Duty                                    4     2      2    1840
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Set_Bost_Pwm_Duty                                    6     4      2    4377
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Enable_Bost_Pwm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Buck_Pwm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Bost_Pwm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             19    11      8    8822
                                             39 BANK0     19    11      8
                            ___flmul (ARG)
                           ___flpack
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             15     7      8    6316
                                             39 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6    2553
                                              3 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             19    11      8   11049
                                             20 BANK0     19    11      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6    2553
                                              3 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 12    12      0     597
                                              4 COMMON     8     8      0
                                              0 BANK0      3     3      0
                 i1_Disable_Bost_Pwm
                i1_Set_Bost_Pwm_Duty
 ---------------------------------------------------------------------------------
 (8) i1_Set_Bost_Pwm_Duty                                  6     4      2     485
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_Disable_Bost_Pwm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Key_Menu
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     _delay_ms
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
   _application_init
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _pid_init
       _memset
   _driver_init
     _Init_Ird
     _init_adc
     _init_interrupt
     _init_key
     _init_osc
     _init_port
     _init_pwm
     _init_timer1
     _init_uart1
   _handle_ad_loop
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Enable_Buck_Pwm
     _Mppt_Charge
       _Set_Buck_Pwm_Duty
       ___fladd
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtofl
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _pid_calc
         ___awtofl
           ___flpack
           ___wmul (ARG)
         ___fladd
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flge
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flsub
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___awtofl
       ___flpack
       ___wmul (ARG)
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flge
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lldiv
     ___lwdiv
       ___wmul (ARG)
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _delay_ms
     _pid_calc
       ___awtofl
         ___flpack
         ___wmul (ARG)
       ___fladd
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _start_ad_convert
       ___lwdiv
         ___wmul (ARG)
   _handle_task_process
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _delay_ms
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _pid_init
       _memset
   _handle_uart_rx_buf
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___awtofl
       ___flpack
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flge
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lbtofl
       ___flpack
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _crc16
     _delay_ms
     _eeprom_read
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _memset
   _middle_init
     _auto_system
       ___fldiv
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtofl
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
       _eeprom_read
       _eeprom_write
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
       _start_ad_convert
         ___lwdiv
           ___wmul (ARG)
     _read_param_eeprom
       ___awtofl
         ___flpack
         ___wmul (ARG)
       ___fldiv
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lbtofl
         ___flpack
       ___lmul
       _eeprom_read

 _isr (ROOT)
   i1_Disable_Bost_Pwm
   i1_Set_Bost_Pwm_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      4      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      1C      17       35.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      50      19      100.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     2A3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     2A3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Nov 07 15:58:32 2018

        _step_01_load_percent 0155                  ___fldiv@cntr 0057                  ___fldiv@sign 0059  
                 __CFG_CP$OFF 0000                            PL2 0F17                            PL4 3377  
                          PL6 1EFC                            PL8 3742              ??_init_interrupt 0023  
                          l43 0B9E                            _RD 0CA8                            _WR 0CA9  
                          _t1 0148                            _t2 0149                            _t3 014A  
                          _t4 014B                            _t5 01C5           ___wmul@multiplicand 0025  
                ___flpack@arg 0023                           PL10 1F0F                           PL20 33AC  
                         PL12 06A4                           PL30 06CD                           PL22 37BA  
                         PL14 0F57                           PL40 1F30                           PL32 33B5  
                         PL24 2797                           PL16 3393                           PL50 06D6  
                         PL42 279F                           PL34 37C4                           PL26 06BB  
                         PL18 339C                           PL60 1F55                           PL52 33C9  
                         PL44 1F41                           PL36 37C8                           PL28 06C4  
                         PL70 3408                           PL62 3400                           PL54 06DF  
                         PL46 1F46                           PL38 1F1F                   __CFG_LVP$ON 0000  
                         PL80 1F66                           PL72 3417                           PL64 0F6B  
                         PL56 33E8                           PL48 33BF                           PL90 346E  
                         PL82 3460                           PL74 3430                           PL66 0F7B  
                         PL58 33EF                           PL92 347D                           PL84 06F9  
                         PL76 3448                           PL68 0F8B                           PL94 3483  
                         PL86 0702                           PL78 06EA                           PL96 3491  
                         PL88 3469                           PL98 349F                  ___flpack@exp 0027  
                         l514 0DDD                           l531 0AA8                           l545 0B66  
                         l821 0A84                           l815 0A4B                           l825 0A97  
                         l817 0A57                           l907 1E47                           _GIE 005F  
                         _RC1 0071                           _PR2 001B                           _PR4 0416  
                __CFG_CPD$OFF 0000                           _PR6 041D                           _PSA 04AB  
                         _PWM 00A0                           _b_v 0120                           _p_v 0238  
                         _isr 0004                 _rx_frame_kind 0145             _receive_bit_count 0144  
                __CFG_BORV$LO 0000                           wreg 0009                  ___flmul@cntr 0045  
                ___flmul@sign 0046                          PL100 34AD                          PL110 071D  
                        PL102 27B4                          PL200 354B                          PL120 0761  
                        PL112 34CB                          PL104 34BB                          PL210 3565  
                        PL202 3554                          PL130 350E                          PL122 0772  
                        PL114 072E                          PL106 34C3                          PL220 0FB5  
                        PL212 0FAD                          PL204 0FA7                          PL140 078F  
                        PL132 1F6B                          PL124 34DC                          PL116 073F  
                        PL108 070C                          PL230 3572                          PL222 1FE3  
                        PL214 1FDD                          PL206 355D                          PL150 1F83  
                        PL142 0795                          PL134 0783                          PL126 34ED  
                        PL118 0750                          PL240 358B                          PL232 3579  
                        PL224 07F5                          PL216 07EF                          PL208 07E7  
                        PL160 37F3                          PL152 07AD                          PL144 079B  
                        PL136 0789                          PL128 34FE                          PL250 0FC5  
                        PL242 0FBB                          PL234 357F                          PL226 1FE9  
                        PL218 356C                          PL170 1F9B                          PL162 1F94  
                        PL154 07B4                          PL146 07A1                          PL138 1F7B  
                        PL260 359B                          PL252 0FFC                          PL244 27BA  
                        PL236 1FF5                          PL228 1FF0                          PL180 3532  
                        PL172 3527                          PL164 0F9B                          PL156 1F8B  
                        PL148 07A7                          PL262 27C0                          PL254 0FCB  
                        PL246 0FBF                          PL238 3586                          PL190 1FC8  
                        PL182 1FAD                          PL174 1FA3                          PL166 07C1  
                        PL158 351E                          PL264 35A0                          PL256 3596  
                        PL248 3591                          PL192 3539                          PL184 1FB6  
                        PL176 07D5                          PL168 07CD                          PL266 1FFB  
                        PL258 0FD0                          PL194 1FCE                          PL186 07DE  
                        PL178 0FA1                          PL268 0FD5                          PL196 1FD7  
                        PL188 1FBF                          PL198 3542                 ___flpack@sign 0028  
                ___fltol@exp1 0063                          _C1IE 0495                          _C1IF 0095  
                        l1330 2D14                          l2132 0E7E                          l1317 2CE1  
                        l1343 2E26                          l1520 17FC                          l2225 1EC7  
                        l1337 2DAB                          l1346 2E62                          l1507 16D2  
                        l1532 35C6                          l1373 1222                          l2166 0D48  
                        l1382 11D2                          l2191 1E86                          l1544 36E4  
                        l1376 1165                          l1393 17FD                          l1369 2FFF  
                        l1396 1283                          l1388 121E                          l1556 251D  
                        l2277 27C8                          l1907 2776                          l1579 26DA  
                        l1868 0611                          l1885 24EF                          ?_isr 0070  
                        _PEIE 005E                          _RCIE 048D                          _RCIF 008D  
                        u4821 24EE                          u9535 0B9A                          u9695 3764  
                        _TMR0 0015                          _TXIE 048C                          _WREN 0CAA  
                        _TXIF 008C                ??_eeprom_write 0065               _an10_time_count 023C  
                __CFG_WRT$OFF 0000                          _main 0A45                  ?_driver_init 0070  
                        fsr0h 0005                          fsr1h 0007                          fsr0l 0004  
                        indf0 0000                          indf1 0001                          fsr1l 0006  
                        btemp 007E      handle_uart_rx_buf@crc_in 0066                 __CFG_BOREN$ON 0000  
                        ltemp 007E            _uart_send_end_flag 014F                          start 027B  
                        ttemp 007E                          wtemp 007E                 __CFG_IESO$OFF 0000  
                ?_auto_system 0070                 __CFG_MCLRE$ON 0000         _load_short_time_count 01B2  
       _battery_voltage_value 006A     __size_of_application_init 0045                  ?_middle_init 0070  
           start_ad_convert@i 00C9             start_ad_convert@j 00C8           i1_Set_Bost_Pwm_Duty 0FD9  
                       ??_isr 0074                 __CFG_PLLEN$ON 0000             _temper_time_count 01C6  
                       l15090 27E9                         l17004 0B09                         l12686 0CB2  
                       l15096 27ED                         l18002 251E                         l17212 2CAD  
                       l18012 252E                         l17062 0B55                         l17230 2CC7  
                       l18030 2552                         l18022 2549                         l18014 253B  
                       l17072 0BE2                         l17320 2E2B                         l17304 2DAE  
                       l18104 25A6                         l18024 254C                         l17066 0BBA  
                       l17314 2E19                         l18130 25DD                         l18026 254F  
                       l17170 0A9F                         l17162 0A8C                         l17154 0A79  
                       l17138 0A59                         l19012 0D56                         l19004 0D3F  
                       l18036 2557                         l15484 27D2                         l19030 0D77  
                       l19006 0D44                         l16702 35BE                         l17414 2FC8  
                       l17334 2E67                         l17246 2CDC                         l19200 0987  
                       l17416 2FCC                         l17432 1110                         l17352 2E9B  
                       l17336 2E69                         l17248 2CE3                         l19130 0E55  
                       l19114 0E3F                         l19018 0D61                         l19042 2707  
                       l17610 1347                         l17602 1333                         l17514 121F  
                       l17434 1112                         l17354 2EA1                         l17266 2D0A  
                       l17274 2D16                         l17194 2C91                         l19060 2717  
                       l19204 098D                         l16740 35D2                         l16708 35BF  
                       l17620 135D                         l17516 1224                         l17356 2EA3  
                       l17292 2D60                         l18252 2530                         l16652 24E9  
                       l19126 0E50                         l19118 0E44                         l19038 26F6  
                       l16582 0B8F                         l16574 0B94                         l16822 0AAA  
                       l19150 1EA6                         l19230 373D                         l16742 35E3  
                       l16750 36DB                         l17390 2F5C                         l17382 2F3F  
                       l16638 240A                         l19240 08BE                         l16728 35D1  
                       l17544 1284                         l17464 1166                         l17376 2F13  
                       l14896 0951                         l18424 0307                         l18256 2916  
                       l16672 0DDF                         l19066 2734                         l16906 0AF4  
                       l19226 3739                         l19218 372A                         l16738 37B7  
                       l17810 15A5                         l17802 1579                         l17714 1454  
                       l17642 138B                         l17618 135C                         l17546 1287  
                       l17490 11D3                         l18194 2629                         l16682 0DF5  
                       l19092 0E18                         l19164 1EBC                         l19148 1EA1  
                       l19244 08C4                         l16756 36DC                         l17564 12BB  
                       l17492 11D6                         l17396 2F83                         l18524 05FE  
                       l16588 21D7                         l19174 1ED0                         l19078 1E6F  
                       l16790 3701                         l17830 1602                         l17814 15BB  
                       l17806 158F                         l17822 15EA                         l17558 12A5  
                       l18630 0682                         l19096 0E29                         l16864 0AEF  
                       l19168 1EC3                         l19192 096A                         l16776 36EF  
                       l17920 1695                         l17760 14DB                         l18376 027D  
                       l18632 0696                         l18714 1D77                         l17922 169A  
                       l17914 1685                         l17850 163C                         l17842 1620  
                       l17834 160B                         l17826 15F5                         l17818 15E3  
                       l17738 14A3                         l17690 140F                         l17666 13CD  
                       l17762 14E3                         l17594 131F                         l17586 130B  
                       l18546 0619                         l18482 04D6                         l18820 1E38  
                       l18812 1E16                         l16788 36F0                         l18492 05CB  
                       l16966 0B02                         l16958 0AF9                         l18742 1DA1  
                       l18750 1DB7                         l18718 1D8B                         l18910 1B0E  
                       l17926 16A7                         l17854 1653                         l17838 1614  
                       l17846 1634                         l18558 0621                         l18494 05E2  
                       l18816 1E2C                         l18680 1BF6                         l18672 1BDA  
                       l18664 1BCA                         l18648 1B9F                         l18656 1BB4  
                       l17952 1744                         l17936 16B9                         l17928 16B0  
                       l18770 1DE2                         l18754 1DCB                         l18746 1DAC  
                       l18682 1BFC                         l18674 1BDF                         l18914 1B2F  
                       l18842 1A3D                         l17962 178A                         l17938 16C8  
                       l17858 165B                         l17794 1545                         l17970 17A6  
                       l18924 0E83                         l17980 17CA                         l17956 1766  
                       l18942 0EAE                         l18934 0E99                         l18926 0E88  
                       l18782 1DF0                         l18694 1C58                         l18686 1C0E  
                       l18854 1A13                         l17966 179C                         l17982 17CE  
               ___fltol@sign1 0062                         l18936 0E9E                         l18928 0E8D  
                       l18952 275A                         l18688 1C15                         l18880 1A4C  
                       l17896 166A                         l18938 0EA3                         l18778 1DE4  
                       l18786 1E02                         l18698 1C73                         l17978 17C4  
                       l18964 0CED      _uart1_receive_byte_count 00BB                         l18974 0D05  
                       l18878 1A48                         l18992 0D22                         l18968 0CF6  
                       l18896 1A90                         l18994 0D27                         l18986 0D13  
                       l18996 0D2C                         l18998 0D30               __end_of___fladd 0D8D  
                       ?_main 0070               __end_of___fldiv 2751                         _EEADR 0191  
             __end_of___flmul 0E75                         _CARRY 0018                         _ANSA0 0C60  
                       _ANSA1 0C61                         _ANSB0 0C68                         _ANSA2 0C62  
                       _ANSB1 0C69                         _ANSA3 0C63               __end_of___flsub 1EFC  
                       _ANSB3 0C6B                         _ANSA5 0C65               __end_of___fltol 1EDF  
             __end_of___lldiv 0996                         u10215 2E0B                         u10165 2D59  
                       u10255 2E5A                         u10185 2DA1                         _T1CON 0018  
                       u13105 2729                         u12081 04D4                         _CRCHi 3801  
                       u13225 1EA9                         u13315 097C                         u13407 36DF  
                       u12705 1A1C                         u13355 3732                         _CRCLo 3901  
                       u11925 0323                         u12675 19EF                         u13397 35C2  
                       _IOCIE 005B                         _IOCIF 0058               __end_of___lwdiv 3742  
                       i1l262 017A                         i1l271 01C4                         i1l274 01C3  
                       i1l258 0175                         _RCREG 0199                         _RCSTA 019D  
                       _TMR1H 0017                         _TMR1L 0016                         _PWM_I 02A0  
                       _TXREG 019A                         _TXSTA 019E                  ?_init_timer1 0070  
         ___lmul@multiplicand 0027                __CFG_FCMEN$OFF 0000                 ___awtofl@sign 0031  
                       _crc16 092C                         _bt_id 00EA              _Disable_Buck_Pwm 276F  
__size_of_handle_task_process 01C5          ?i1_Set_Bost_Pwm_Duty 0070                _charge_i_limit 02CC  
            _Disable_Bost_Pwm 0BB5                  Key_Menu@code 00C2                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F                  __end_ofPL100 34BB                  __end_ofPL110 072E  
                __end_ofPL102 27BA                  __end_ofPL200 3554                  __end_ofPL120 0772  
                __end_ofPL112 34DC                  __end_ofPL104 34C3                  __end_ofPL210 356C  
                __end_ofPL202 355D                  __end_ofPL130 351E                  __end_ofPL122 0783  
                __end_ofPL114 073F                  __end_ofPL106 34CB                  __end_ofPL220 0FBB  
                __end_ofPL212 0FB5                  __end_ofPL204 0FAD                  __end_ofPL140 0795  
                __end_ofPL132 1F7B                  __end_ofPL124 34ED                  __end_ofPL116 0750  
                __end_ofPL108 071D                  __end_ofPL230 3579                  __end_ofPL222 1FE9  
                __end_ofPL214 1FE3                  __end_ofPL206 3565                  __end_ofPL150 1F8B  
                __end_ofPL142 079B                  __end_ofPL134 0789                  __end_ofPL126 34FE  
                __end_ofPL118 0761                  __end_ofPL240 3591                  __end_ofPL232 357F  
                __end_ofPL224 07FC                  __end_ofPL216 07F5                  __end_ofPL208 07EF  
                __end_ofPL160 3800                  __end_ofPL152 07B4                  __end_ofPL144 07A1  
                __end_ofPL136 078F                  __end_ofPL128 350E                  __end_ofPL250 0FCB  
                __end_ofPL242 0FBF                  __end_ofPL234 3586                  __end_ofPL226 1FF0  
                __end_ofPL218 3572                  __end_ofPL170 1FA3                  __end_ofPL162 1F9B  
                __end_ofPL154 07C1                  __end_ofPL146 07A7                  __end_ofPL138 1F83  
                __end_ofPL260 35A0                  __end_ofPL252 1000                  __end_ofPL244 27C0  
                __end_ofPL236 1FFB                  __end_ofPL228 1FF5                  __end_ofPL180 3539  
                __end_ofPL172 3532                  __end_ofPL164 0FA1                  __end_ofPL156 1F94  
                __end_ofPL148 07AD                  __end_ofPL262 27C4                  __end_ofPL254 0FD0  
                __end_ofPL246 0FC5                  __end_ofPL238 358B                  __end_ofPL190 1FCE  
                __end_ofPL182 1FB6                  __end_ofPL174 1FAD                  __end_ofPL166 07CD  
                __end_ofPL158 3527                  __end_ofPL264 35A5                  __end_ofPL256 359B  
                __end_ofPL248 3596                  __end_ofPL192 3542                  __end_ofPL184 1FBF  
                __end_ofPL176 07DE                  __end_ofPL168 07D5                  __end_ofPL266 2000  
                __end_ofPL258 0FD5                  __end_ofPL194 1FD7                  __end_ofPL186 07E7  
                __end_ofPL178 0FA7                  __end_ofPL268 0FD9                  __end_ofPL196 1FDD  
                __end_ofPL188 1FC8                  __end_ofPL198 354B                _bost_pwm_value 00A4  
             __initialization 0996               _mppt_time_count 0252                  __end_of_main 0AA4  
           ??_Enable_Buck_Pwm 0023              __end_of_Key_Menu 0B67        _battery_voltage_status 012A  
        _step_02_load_percent 0159              __end_of_Init_Ird 0C50             ??_Enable_Bost_Pwm 0023  
          start_ad_convert@ch 00C0                        ??_main 006A         start_ad_convert@ad_ch 00C7  
                      ?_crc16 0023                _index_01_count 0242                _index_02_count 0244  
              _index_03_count 0246         ??i1_Set_Bost_Pwm_Duty 0072                _index_04_count 0248  
              _index_05_count 024A                        _ADRESH 009C                        _ADRESL 009B  
                      _EEDATA 0193                        _CCPR1L 0291                        _CCPR3L 0311  
            __end_of___flpack 0EC0                        _CCPR5L 031C                        _EECON1 0195  
                      _EECON2 0196                 ??_Mppt_Charge 006A                _index_06_count 024C  
            __end_of___awtofl 276F                        _ANSELA 018C                        _ANSELB 018D  
            __end_of___lbtofl 2516                        _IOCBF4 1CB4                        _IOCBF7 1CB7  
            __end_of___lwtofl 1B5A             _temperature_value 0128                        _OSCCON 0099  
                      _TMR0IE 005D                        _TMR0IF 005A                        _TMR0CS 04AD  
                      _TMR1IE 0488                        _TMR1IF 0088                        _TMR2IF 0089  
                      _TMR4IF 0099                        _TMR6IF 009B                        _TMR1ON 00C0  
                      _TMR2ON 00E2                        _TMR4ON 20BA                        _TMR6ON 20F2  
           ?_start_ad_convert 0030              __end_of_delay_ms 0BB5                        _I_prev 01A4  
              __CFG_PWRTE$OFF 0000          __size_of_eeprom_read 0017            ??_start_ad_convert 0032  
                _CCPTMRS0bits 029E                  _CCPTMRS1bits 029F            _handle_uart_rx_buf 2914  
                      ___flge 1E58                   isr@time_cnt 0021                        ___lmul 27C4  
              _open_an10_time 0139                     ??___fladd 004F                        ___wmul 08BC  
                   ??___fldiv 004F                __CFG_STVREN$ON 0000                     ??___flmul 003C  
                   ??___flsub 005E                     ??___fltol 005E                     ??___lldiv 002B  
                   ??___lwdiv 002D                        _ho_cnt 007C                        _mi_cnt 0126  
                      _load_I 022C              __end_of_init_adc 0C6F                        _load_v 0230  
            __end_of_init_key 0C75                        _memset 27E9              __end_of_init_osc 0C7D  
                      _se_cnt 01B6              __end_of_init_pwm 0F17              __end_of_pid_calc 1E58  
                      _ms_cnt 01B4              __end_of_pid_init 26E5          __end_of_eeprom_write 2792  
         ?_handle_uart_rx_buf 0070                    ___fladd@f1 0047                    ___fladd@f2 004B  
                  ___flge@ff1 005A                    ___flge@ff2 005E              _sleep_time_count 0256  
                crc16@puchMsg 0023                    ___fldiv@f1 004B                    ___fldiv@f2 0047  
                  ___fldiv@f3 0053          ??_handle_uart_rx_buf 0066       __end_of__initialization 0A43  
             eeprom_read@addr 0023              _light_time_level 01A0                    ___flmul@f1 0034  
                  ___flmul@f2 0038                 __end_of_CRCHi 3901                    ___flsub@f1 005A  
                  ___flsub@f2 0056                 __end_of_CRCLo 3A01                    ___fltol@f1 005A  
         __end_of_Mppt_Charge 1B46                    ___awtofl@c 002D                    ___lbtofl@c 0032  
        __size_of_driver_init 0011         Set_Buck_Pwm_Duty@duty 0023                __pcstackCOMMON 0070  
            _application_init 0BE5                  __pidataBANK1 08AD                  __pidataBANK2 08E9  
                __pidataBANK3 08A1                  __pidataBANK4 08D1                  __pidataBANK5 0908  
                  _adc_buffer 2370                 __end_of_crc16 0957          __size_of_auto_system 007A  
          _mcu_t00_time_count 01BC          _step_03_load_percent 015D                  _charge_index 00B3  
        __size_of_middle_init 0003                    __end_ofPL2 0F57                    __end_ofPL4 3393  
                  __end_ofPL6 1F0F                    __end_ofPL8 37BA                    ___lwtofl@c 0030  
         _shuchu_open_voltage 02E8          _uart_send_byte_count 014D            i1_Disable_Bost_Pwm 0884  
              _OPTION_REGbits 0095             eeprom_write@value 0064                       ??_crc16 0026  
        __size_of_init_timer1 000D            _mcu_t01_time_count 01BD           ?i1_Disable_Bost_Pwm 0070  
                  __pbssBANK0 006A                    __pbssBANK1 00A0                    __pbssBANK2 0120  
                  __pbssBANK3 01A0                    __pbssBANK4 0220                    __pbssBANK5 02A0  
                  __pbssBANK6 0320                    __pbssBANK7 03A0                    __pbssBANK8 0420  
                   ?_Key_Menu 0066                 _pid_calc$2854 00C8                 _pid_calc$2855 00CC  
                   ?_Init_Ird 0070               __CFG_VCAPEN$RA6 0000            __size_of_init_port 0014  
                  __pmaintext 0A45                       ?___flge 005A                       ?___lmul 0023  
            _night_time_count 0234                       ?___wmul 0023      __end_of_Disable_Buck_Pwm 2775  
         _handle_task_process 2516                 _PID_CC_charge 0320          ??i1_Disable_Bost_Pwm 0070  
          _mcu_t02_time_count 01BE                    __pintentry 0004      __end_of_Disable_Bost_Pwm 0BBA  
     _handle_an0_process_flag 012B                       _BAUDCON 019F                       ?_memset 0023  
                   ?___flpack 0023                ___lmul@product 002B                     ?___awtofl 002D  
                   ?___lbtofl 002D       __size_of_handle_ad_loop EB95                     ?___lwtofl 0030  
                     i1l15602 005A                       i1l15620 0082                       i1l15614 0075  
                     i1l15622 0084                       i1l15712 0131                       i1l15704 0120  
                     i1l15632 0097                       i1l15608 0067                       i1l15546 0FF9  
                     i1l15714 0135                       i1l15642 00AA                       i1l15812 01E9  
                     i1l15724 0145                       i1l15652 00BD                       i1l15572 002C  
                     i1l15734 0155                       i1l15662 00D0                       i1l15824 0206  
                     i1l15744 0165                       i1l15672 00E3                       i1l15770 0194  
                     i1l15682 00F6                       i1l15852 021F                       i1l15780 01A2  
                     i1l15764 018C                       i1l15756 0182                       i1l15692 0109  
                     i1l15588 0043                       i1l15596 004C                       i1l15846 022A  
                     i1l15758 0184                       i1l15784 01A7                       i1l15868 0248  
                     i1l15796 01BB                       _SP1BRGH 019C                       _SP1BRGL 019B  
                   ?_delay_ms 0023                    _bt_volt_00 0258                    _bt_volt_20 025C  
                  _bt_volt_40 0260                    _bt_volt_60 0264                    _bt_volt_80 0268  
        ?_handle_task_process 0070            _mcu_t03_time_count 01BF                    __stringtab 3800  
                 _Mppt_Charge 19D0                    ??_Key_Menu 006A                 _PID_CV_charge 02AC  
        _handle_scan_key_flag 0132                    ??_Init_Ird 0023               _Enable_Buck_Pwm 0880  
                   ?_init_adc 0070               _uart_send_point 0150                     ?_init_key 0070  
                   ?_init_osc 0070                     ?_init_pwm 0070                     ?_pid_calc 0066  
             _Enable_Bost_Pwm 2792                     ?_pid_init 002B               _discharge_index 00B5  
     _have_person1_time_count 0134         __size_of_eeprom_write 001D               __size_of___flge 0040  
                     ___fladd 0CC6                       ___fldiv 26E5               __size_of___lmul 0025  
                     ___flmul 0E07                       ___flsub 1EDF                       ___fltol 1E98  
                     ___lldiv 0957               __size_of___wmul 0015                    _light_mode 00B8  
                     ___lwdiv 371D                    _light_time 00BE                    _ird_status 0137  
        _step_04_load_percent 0161                    ??___flpack 0029                _day_time_count 02A4  
                  _init_uart1 0C9E                    ??___awtofl 0031                    ??___lbtofl 0032  
             __size_of_memset 0017                _an0_time_count 01A6                       __ptext1 0CAF  
                     __ptext2 21D7                       __ptext3 27C4                       __ptext4 0D8D  
                     __ptext5 2914                       __ptext6 24EB                       __ptext7 092C  
                     __ptext8 2502                       __ptext9 2516                    ??___lwtofl 0034  
                   _T2CONbits 001C                  __size_of_isr 0277             __end_of_init_port 0C91  
                   _T4CONbits 0417                     _IOCBFbits 0396                    ??_delay_ms 0025  
       _uart_send_delay_timer 014E                     _IOCBNbits 0395                     _T6CONbits 041E  
     __size_of_init_interrupt 0014         ??_handle_task_process 0066                       clrloop0 0896  
                     _volt_id 00EB          end_of_initialization 0A43                _an1_time_count 01A8  
           _light_on_pv_level 02E4                       init_ram 0889                       memset@c 0025  
                  ??_init_adc 0023                       memset@n 0027                       memset@p 0029  
                _eeprom_write 2775                    ??_init_key 0023                    ??_init_osc 0023  
                     initloop 088A                    ??_init_pwm 0023                    ??_pid_calc 00C0  
                  ??_pid_init 002D      i1Set_Bost_Pwm_Duty@dduty 0070               ___lldiv@divisor 0023  
             ___lldiv@counter 002F                     _RCSTAbits 019D                       psplit$0 240053  
                     psplit$1 290054                       psplit$2 290055                  __pstringtext 3800  
               crc16@uchCRCHi 002A                 crc16@uchCRCLo 002B       _handle_an1_process_flag 012D  
            pid_calc@NowPoint 0068                _an2_time_count 01AA     __size_of_start_ad_convert 0178  
        _limit_power_pid_flag 01BB   __end_ofi1_Set_Bost_Pwm_Duty 0FFC          _voltage_adjust_index 00EC  
            __CFG_FOSC$INTOSC 0000                     _TRISAbits 008C                     _TRISBbits 008D  
                   _TRISCbits 008E      _handle_an10_process_flag 012C       __end_of_Enable_Buck_Pwm 0884  
                 ___fldiv@exp 0058             _have_person1_flag 00B6      __end_of_application_init 0C2A  
     __end_of_Enable_Bost_Pwm 2797           _scan_key_time_count 0146                   _CM1CON0bits 0111  
                 _CM1CON1bits 0112                   ___flmul@exp 0040                _an3_time_count 01AC  
                _led_out_ctrl 00B7                   _CCP1CONbits 0293                 ??_eeprom_read 0023  
                   _TXSTAbits 019E                   _CCP3CONbits 0313                   _CCP5CONbits 031E  
              __end_of___flge 1E98                __end_of___lmul 27E9                __end_of___wmul 08D1  
               delay_ms@count 0023                   ?_init_uart1 0070          _step_05_load_percent 0165  
           _read_param_eeprom 21D7                _handle_ad_loop 2C6B                _an4_time_count 01AE  
              __end_of_memset 2800                 _system_status 00BA            ?_read_param_eeprom 0070  
        _charge_current_value 0124          _dianchi_qianya_baohu 02D0                   __end_ofPL10 1F1F  
                 __end_ofPL20 33B5                   __end_ofPL12 06BB                   __end_ofPL30 06D6  
                 __end_ofPL22 37C4                   __end_ofPL14 0F6B                   __end_ofPL40 1F41  
                 __end_ofPL32 33BF                   __end_ofPL24 279F                   __end_ofPL16 339C  
                 __end_ofPL50 06DF                   __end_ofPL42 27B4                   __end_ofPL34 37C8  
                 __end_ofPL26 06C4                   __end_ofPL18 33AC                   __end_ofPL60 1F66  
                 __end_ofPL52 33E8                   __end_ofPL44 1F46                   __end_ofPL36 37F3  
                 __end_ofPL28 06CD                   __end_ofPL70 3417                   __end_ofPL62 3408  
                 __end_ofPL54 06EA                   __end_ofPL46 1F55                   __end_ofPL38 1F30  
                 __end_ofPL80 1F6B                   __end_ofPL72 3430                   __end_ofPL64 0F7B  
                 __end_ofPL56 33EF                   __end_ofPL48 33C9                   __end_ofPL90 347D  
                 __end_ofPL82 3469                   __end_ofPL74 3448                   __end_ofPL66 0F8B  
                 __end_ofPL58 3400                   __end_ofPL92 3483                   __end_ofPL84 0702  
                 __end_ofPL76 3460                   __end_ofPL68 0F9B                   __end_ofPL94 3491  
                 __end_ofPL86 070C                   __end_ofPL78 06F9                   __end_ofPL96 349F  
                 __end_ofPL88 346E                   __end_ofPL98 34AD           start_initialization 0996  
        _dianchi_qianya_huifu 02D4       _handle_an9_process_flag 0131                     _Load_Pmax 02C8  
           pnum$text5_split_1 0053             _Set_Buck_Pwm_Duty 0BBA                    isr@r1_data 0020  
                 __end_of_isr 027B           ??_read_param_eeprom 005A            ?_Set_Buck_Pwm_Duty 0023  
           _discharge_i_baohu 02D8             _discharge_i_limit 02DC          start_ad_convert@ad_h 00C1  
        start_ad_convert@ad_l 00C3                 ??_driver_init 0023   __size_of_handle_uart_rx_buf DD90  
        start_ad_convert@temp 00C5             __size_of_Key_Menu 00C3           ??_Set_Buck_Pwm_Duty 0025  
           __size_of_Init_Ird 0015                 ??_auto_system 0066       _discharge_current_value 00AA  
               ??_middle_init 006A                      ??___flge 0062                      ??___lmul 002B  
                    ??___wmul 0027           __end_of_eeprom_read 2502     __end_of_read_param_eeprom 24EB  
        _over_load_time_count 0254        __end_of_handle_ad_loop 1800             ?_Disable_Buck_Pwm 0070  
           _handle_short_flag 0133                   __pdataBANK1 00DE                   __pdataBANK2 0151  
                 __pdataBANK3 01E3                   __pdataBANK4 0258                   __pdataBANK5 02C8  
           Key_Menu@key_value 0066                      ??_memset 0029             ?_Disable_Bost_Pwm 0070  
     _handle_an2_process_flag 012E                 _open_an0_time 0138                 _open_an1_time 013A  
                  pid_calc@dk 00D0                 _open_an2_time 013B            ??_Disable_Buck_Pwm 0023  
                  pid_calc@pp 0066                   crc16@uIndex 0026                 _open_an3_time 013C  
               _open_an4_time 013D                 _open_an9_time 013E            ??_Disable_Bost_Pwm 0023  
           __size_of___flpack 004B     __end_of_Set_Buck_Pwm_Duty 0BE5             __size_of___awtofl 001E  
           __size_of___lbtofl 0014                   __pbssBIGRAM 2370                _mcu_temp_index 00B9  
               ??_init_timer1 0023                   __pbssCOMMON 007C                     ___latbits 0003  
           _pv_voltage_status 0143             __size_of___lwtofl 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00C0                 __pcstackBANK5 02EC                    pid_init@pp 002B  
              _init_interrupt 0CB2              ?_Enable_Buck_Pwm 0070              ?_Enable_Bost_Pwm 0070  
           __size_of_delay_ms 0023                  ?_Mppt_Charge 0070              eeprom_write@addr 0065  
         __size_of_init_uart1 0011             __size_of_init_adc 001F             __size_of_init_key 0006  
           __size_of_init_osc 0008             __size_of_init_pwm 0057             __size_of_pid_calc 02FE  
            ___lwdiv@dividend 002B             __size_of_pid_init 000A             _system_check_time 0147  
         __end_of_driver_init 0C3B                      ?___fladd 0047                      ?___fldiv 0047  
                    ?___flmul 0034                      ?___flsub 0056                      ?___fltol 005A  
                    ?___lldiv 0023               ?_handle_ad_loop 0070                      ?___lwdiv 0029  
 __size_ofi1_Disable_Bost_Pwm 0005           __end_of_auto_system 0E07           __end_of_middle_init 0CB2  
            _start_ad_convert 35A5        __end_of_init_interrupt 0CC6              __CFG_WDTE$NSLEEP 0000  
                   _load_cc_I 00E2                __size_of_crc16 002B              ___lwdiv@quotient 002E  
                  pnum$text10 0029                     _mcu_value 00AE                     _init_port 0C7D  
           _Set_Bost_Pwm_Duty 0B67                     _pid_index 0141           __end_of_init_timer1 0C9E  
          ?_Set_Bost_Pwm_Duty 0023                ___wmul@product 0027                      _LATCbits 010E  
              _an9_time_count 01B0               pid_calc@PWM_var 00D8                     delay_ms@i 0025  
                   delay_ms@j 0027                     clear_ram0 0895                   _eeprom_read 24EB  
                    _PIE1bits 0091                      _PIE2bits 0092               _open_sleep_time 0140  
                   _nop_index 01C1               _sys_temper_flag 016F                      _PIR1bits 0011  
                    _PIR2bits 0012           ??_Set_Bost_Pwm_Duty 0025    __size_of_read_param_eeprom 0314  
      Set_Bost_Pwm_Duty@dduty 0023              _PID_CC_discharge 01C7           _open_discharge_time 013F  
     _handle_an3_process_flag 012F                    _ADCON0bits 009D                    _ADCON1bits 009E  
           ___wmul@multiplier 0023   __end_of_handle_task_process 26DB                     _run_index 01C3  
  __size_of_Set_Buck_Pwm_Duty 002B               ?_init_interrupt 0070            _light_off_pv_level 02E0  
   __end_of_Set_Bost_Pwm_Duty 0B92           _dianchi_guoya_baohu 0151           _cv_level_time_count 0240  
                   _work_mode 00BD           _dianchi_guoya_huifu 01E7             ?_application_init 0070  
           ___lmul@multiplier 0023                    ?_init_port 0070                      _Key_Menu 0AA4  
          ??_application_init 005A                      _Init_Ird 0C3B                   _driver_init 0C2A  
     read_param_eeprom@byte_h 005A       read_param_eeprom@byte_l 005B                 _device_status 00B4  
                 _auto_system 0D8D            _uart1_receive_flag 014C                    _APFCONbits 011D  
                 _middle_init 0CAF              __size_of___fladd 00C7              __size_of___fldiv 006C  
            __size_of___flmul 006E              __size_of___flsub 001D              __size_of___fltol 0047  
            __size_of___lldiv 003F                  ??_init_uart1 0023                  _uart1_rx_buf 0420  
            _pv_voltage_value 00B0                      ___flpack 0E75              __size_of___lwdiv 0025  
                    _bt_00_hv 0220                  _uart1_tx_buf 03A0                      _bt_00_lv 0224  
                    ___awtofl 2751                      ___lbtofl 2502            __end_of__stringtab 3801  
          _step_01_time_limit 00E6                      ___lwtofl 1B46        _over_temper_time_count 01C2  
                    _charge_I 0228                   _init_timer1 0C91             _system_time_count 01B8  
                    _delay_ms 0B92            _load_voltage_value 00AC               ___lwdiv@divisor 0029  
             ___lwdiv@counter 002D                      _crc_data 00A8                      __ptext10 2C6B  
                    __ptext11 35A5                      __ptext20 1B46                      __ptext12 371D  
                    __ptext21 1E98                      __ptext13 08BC                    _T1GCONbits 0019  
                    __ptext30 0CB2                      __ptext22 0880                      __ptext14 0957  
                    __ptext31 0C50                      __ptext23 0C2A                      __ptext15 19D0  
                    __ptext40 0B67                      __ptext32 0C3B                      __ptext24 0C9E  
                    __ptext16 1B5A                      __ptext41 2792                      __ptext33 0BE5  
                    __ptext25 0C91                      __ptext17 1EDF                      __ptext50 0884  
                    __ptext42 276F                      __ptext34 26DB                      __ptext26 0EC0  
                    __ptext18 1E58                      __ptext43 0BB5                      __ptext35 27E9  
                    __ptext27 0C7D                      __ptext19 2751                      __ptext44 26E5  
                    __ptext36 0AA4                      __ptext28 0C75                      __ptext45 0CC6  
                    __ptext37 2775                      __ptext29 0C6F                      __ptext46 0E75  
                    __ptext38 0B92                      __ptext47 0E07                      __ptext39 0BBA  
                    __ptext49 0FD9                _buck_pwm_value 00A6     auto_system@sys_bt_voltage 0066  
__size_ofi1_Set_Bost_Pwm_Duty 0023                      _ird_data 026C                      _init_adc 0C50  
                    _light_pv 00DE          __size_of_Mppt_Charge 0176                      _init_key 0C6F  
               __size_of_main 005F            _step_02_time_limit 00E8                     pnum$text5 0024  
                    _init_osc 0C75                      _init_pwm 0EC0                      _pid_calc 1B5A  
     _shuchu_shortout_voltage 01EB            __end_of_init_uart1 0CAF                      _pid_init 26DB  
          pnum$text10_split_2 0054            pnum$text10_split_3 0055                      _pv_index 0142  
              pid_calc@dError 00C4       _handle_an4_process_flag 0130            _step_03_time_limit 0169  
                    _sys_mode 01C4         ___flmul@f3_as_product 0041                    _FVRCONbits 0117  
  __size_of_Set_Bost_Pwm_Duty 002B                      memset@p1 0023                 _bt_time_count 01BA  
   __size_of_Disable_Buck_Pwm 0006                   ??_init_port 0023        _ird_receive_time_count 0136  
  __end_of_handle_uart_rx_buf 06A4     __size_of_Disable_Bost_Pwm 0005                      intlevel1 0000  
            ___lldiv@dividend 0027                 _pv_time_count 02A8            _step_04_time_limit 016B  
    __end_of_start_ad_convert 371D             __CFG_CLKOUTEN$OFF 0000              ??_handle_ad_loop 00DC  
   handle_ad_loop@data_cc_var 02EC                 pid_calc@Error 00D4              _ird_receive_flag 0135  
          _involid_time_count 024E                   _mppt_status 01C0              _dianchi_cv_level 01E3  
          _step_05_time_limit 016D              _Adjust_Pout_Flag 00B2              ___lldiv@quotient 002B  
                  _WDTCONbits 0097                   _today_index 006C        _battery_low_time_count 023E  
               ?_eeprom_write 0064                  ___fladd@exp1 0055                  ___fladd@exp2 0054  
              crc16@usDataLen 0025                  ___fladd@sign 0053      __size_of_Enable_Buck_Pwm 0004  
                ?_eeprom_read 0070      __size_of_Enable_Bost_Pwm 0005          _load_open_time_count 0250  
            _uart1_time_count 00BC    __end_ofi1_Disable_Bost_Pwm 0889  
